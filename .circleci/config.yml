version: 2.1
jobs:
  testGenerator:
    docker:
      - image: circleci/node:10-browsers
    working_directory: /tmp/workspace/gapic-generator-typescript
    steps:
      - checkout
      - run:
          name: Install protoc
          command: |
            wget https://github.com/protocolbuffers/protobuf/releases/download/v3.10.0/protoc-3.10.0-linux-x86_64.zip
            cd / && sudo unzip /tmp/protoc-3.10.0-linux-x86_64.zip
            protoc --version
          working_directory: /tmp
      - run:
          name: Run npm install
          command: |
            npm install
      - run:
          name: Run generator unit tests
          command: |
            npm link
            npm test
          environment:
            NPM_CONFIG_PREFIX: /tmp/.npm-global
      - run: 
          name: Run linting
          command: |
            npm run lint
      - run:
          name: copy protos to generated client library
          command: |
            cp -r typescript/test/protos .test-out-showcase
            cp -r typescript/test/protos .test-out-keymanager
            cp -r typescript/test/protos .test-out-translate
            cp -r typescript/test/protos .test-out-texttospeech
      - persist_to_workspace:
          root: /tmp
          paths:
            - workspace
  showcaseTsTestApplication:
    docker:
      - image: circleci/node:10-browsers
    steps: 
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Run showcase test for JavaScript and Typescript users
          command: |
            cd workspace/workspace/gapic-generator-typescript
            npm run ts-test-application
          environment:
            NPM_CONFIG_PREFIX: /tmp/.npm-global
  showcaseJsTestApplication:
    docker:
      - image: circleci/node:10-browsers
    steps: 
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Run showcase test for JavaScript and Typescript users
          command: |
            cd workspace/workspace/gapic-generator-typescript
            npm run js-test-application
          environment:
            NPM_CONFIG_PREFIX: /tmp/.npm-global
  showcaseLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps: 
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Showcase library
          command: |
            cd workspace/workspace/gapic-generator-typescript/.test-out-showcase
            npm install
            npm test
            npm run fix
            npm run compile
            npm run system-test
            npm run docs
            npm run docs-test
  kmsLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps: 
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated KMS library
          command: |
            cd workspace/workspace/gapic-generator-typescript/.test-out-keymanager
            npm install
            npm test
            npm run fix
            npm run compile
            npm run system-test
            npm run docs
            npm run docs-test
  translateLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps: 
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Translate library
          command: |
            cd workspace/workspace/gapic-generator-typescript/.test-out-translate
            npm install
            npm test
            npm run fix
            npm run compile
            npm run system-test
            npm run docs
            npm run docs-test
  ttsLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps: 
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Text-to-Speech library
          command: |
            cd workspace/workspace/gapic-generator-typescript/.test-out-texttospeech
            npm install
            npm test
            npm run fix
            npm run compile
            npm run system-test
            npm run docs
            npm run docs-test
workflows:
  version: 2
  tests:
    jobs:
      - testGenerator
      - showcaseTsTestApplication:
          requires:
            - testGenerator
      - showcaseJsTestApplication:
          requires:
            - testGenerator
      - showcaseLibTest:
          requires:
            - testGenerator
      - kmsLibTest:
          requires:
            - testGenerator
      - translateLibTest:
          requires:
            - testGenerator
      - ttsLibTest:
          requires:
            - testGenerator
