version: 2.1
jobs:
  testGenerator:
    docker:
      - image: l.gcr.io/google/bazel
    working_directory: /home/circleci/project/gapic-generator-typescript
    steps:
      - checkout
      - run:
          name: Run generator unit tests
          command: |
            bazel test //:unit_tests
      - run:
          name: Unzip baseline tests output
          command: |
            mkdir /home/circleci/project/baselines
            unzip bazel-testlogs/unit_tests/test.outputs/outputs.zip -d /home/circleci/project/baselines
      - run:
          name: Copy protos to baselines
          command: |
            for dir in /home/circleci/project/baselines/.test-out-* ; do
              cp -r test-fixtures/protos $dir
            done
      - run:
          name: Copy compiled test applications
          # bazel-bin/ is a symlink to /root/.cache/bazel/... and we won't have it
          # available in Node container. Let's just save what we need.
          command: |
            mkdir test-application-runners
            cp bazel-bin/test/test-application/test-*.js test-application-runners/
            cp bazel-testlogs/unit_tests/test.outputs/outputs.zip test-application-runners/
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - gapic-generator-typescript
            - baselines
  lint:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run lint
          working_directory: /home/circleci/workspace/gapic-generator-typescript
          command: |
            rm -f bazel-*  # we don't need these broken symlinks here
            # we have some extra stuff here in Circle that we don't want to lint
            echo test-application-runners >> .eslintignore
            echo test-application-runners >> .prettierignore
            # and now finally...
            npm run lint
  showcaseTestApplications:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Prepare test applications
          working_directory: /home/circleci/workspace/gapic-generator-typescript
          command: |
            rm -f bazel-testlogs
            mkdir -p bazel-testlogs/unit_tests/test.outputs
            cp test-application-runners/outputs.zip bazel-testlogs/unit_tests/test.outputs/
      - run:
          name: Run showcase test for Typescript users
          working_directory: /home/circleci/workspace/gapic-generator-typescript
          command: npx mocha test-application-runners/test-ts.js
          environment:
            NPM_CONFIG_PREFIX: /tmp/.npm-global
      - run:
          name: Run showcase test for JavaScript users
          working_directory: /home/circleci/workspace/gapic-generator-typescript
          command: npx mocha test-application-runners/test-js.js
          environment:
            NPM_CONFIG_PREFIX: /tmp/.npm-global
  showcaseLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Showcase library
          working_directory: /home/circleci/workspace/baselines/.test-out-showcase
          command: &alltests |
            pwd
            npm install
            npm test
            npm run fix
            npm run compile
            npm run system-test
            npm run docs
  kmsLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated KMS library
          working_directory: /home/circleci/workspace/baselines/.test-out-kms
          command: *alltests
  translateLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Translate library
          working_directory: /home/circleci/workspace/baselines/.test-out-translate
          command: *alltests
  monitoringLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Monitoring library
          working_directory: /home/circleci/workspace/baselines/.test-out-monitoring
          command: *alltests
  dlpLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated DLP library
          working_directory: /home/circleci/workspace/baselines/.test-out-dlp
          command: *alltests
  ttsLibTest:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: /home/circleci/workspace
      - run:
          name: Run unit tests, system tests, jsdoc generation, and gts fix of the generated Text-to-Speech library
          working_directory: /home/circleci/workspace/baselines/.test-out-texttospeech
          command: *alltests
workflows:
  version: 2
  tests:
    jobs:
      - testGenerator
      - lint:
          requires:
            - testGenerator
      - showcaseTestApplications:
          requires:
            - testGenerator
      - showcaseLibTest:
          requires:
            - testGenerator
      - kmsLibTest:
          requires:
            - testGenerator
      - dlpLibTest:
          requires:
            - testGenerator
      - translateLibTest:
          requires:
            - testGenerator
      - monitoringLibTest:
          requires:
            - testGenerator
      - ttsLibTest:
          requires:
            - testGenerator
