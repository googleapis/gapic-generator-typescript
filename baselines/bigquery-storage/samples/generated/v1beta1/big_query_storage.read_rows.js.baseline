


'use strict';

function main() {
  // [START storage_read_rows_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Identifier of the position in the stream to start reading from.
   *  The offset requested must be less than the last row read from ReadRows.
   *  Requesting a larger offset is undefined.
   */
  // const readPosition =''

  // Imports the Storage library
  const {BigQueryStorageClient} = require('');

  // Instantiates a client
  const storageClient = new BigQueryStorageClient();

  async function readRows() {
    // Construct request
    const request = {
      readPosition,
    };

    // Run request
    const stream = await storageClient.readRows(request);
    stream.on('data', (response) => { console.log(`Response: ${response}`) });
    stream.on('error', (err) => { throw(err) });
    stream.on('end', () => { /* API call completed */ });
  }

  readRows();
  // [END storage_read_rows_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
