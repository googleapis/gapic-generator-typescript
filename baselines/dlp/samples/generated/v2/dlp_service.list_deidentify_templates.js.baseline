
'use strict';

function main() {
  // [START dlp_list_deidentify_templates_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent resource name, for example projects/my-project-id or
   *  organizations/my-org-id.
   */
  // const parent = 'abc123'
  /**
   *  Page token to continue retrieval. Comes from previous call
   *  to `ListDeidentifyTemplates`.
   */
  // const pageToken = 'abc123'
  /**
   *  Size of the page, can be limited by server. If zero server returns
   *  a page of max size 100.
   */
  // const pageSize = 1234
  /**
   *  Comma separated list of fields to order by,
   *  followed by `asc` or `desc` postfix. This list is case-insensitive,
   *  default sorting order is ascending, redundant space characters are
   *  insignificant.
   *  Example: `name asc,update_time, create_time desc`
   *  Supported fields are:
   *  - `create_time`: corresponds to time the template was created.
   *  - `update_time`: corresponds to time the template was last updated.
   *  - `name`: corresponds to template's name.
   *  - `display_name`: corresponds to template's display name.
   */
  // const orderBy = 'abc123'
  /**
   *  The geographic location where deidentifications templates will be retrieved
   *  from. Use `-` for all locations. Reserved for future extensions.
   */
  // const locationId = 'abc123'

  // Imports the Dlp library
  const {DlpServiceClient} = require('dlp').v2;

  // Instantiates a client
  const dlpClient = new DlpServiceClient();

  async function listDeidentifyTemplates() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = await dlpClient.listDeidentifyTemplatesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  listDeidentifyTemplates();
  // [END dlp_list_deidentify_templates_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
