


'use strict';

function main() {
  // [START dlp_redact_image_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The parent resource name, for example projects/my-project-id.
   */
  // const parent ='abc123'
  /**
   *  The geographic location to process the request. Reserved for future
   *  extensions.
   */
  // const locationId ='abc123'
  /**
   *  Configuration for the inspector.
   */
  // const inspectConfig =''
  /**
   *  The configuration for specifying what content to redact from images.
   */
  // const imageRedactionConfigs =1234
  /**
   *  Whether the response should include findings along with the redacted
   *  image.
   */
  // const includeFindings =true
  /**
   *  The content must be PNG, JPEG, SVG or BMP.
   */
  // const byteItem =''

  // Imports the Dlp library
  const {DlpServiceClient} = require('dlp');

  // Instantiates a client
  const dlpClient = new DlpServiceClient();

  async function redactImage() {
    // Construct request
    const request = {
    };

    // Run request
    const response = await dlpClient.redactImage(request);
    console.log(`Response: ${response}`);
  }

  redactImage();
  // [END dlp_redact_image_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
