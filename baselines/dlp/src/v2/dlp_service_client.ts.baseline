// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions} from 'google-gax';

import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');

{&quot;name&quot;:&quot;DlpService&quot;,&quot;method&quot;:[],&quot;options&quot;:{&quot;.google.api.defaultHost&quot;:&quot;dlp.googleapis.com&quot;,&quot;.google.api.oauthScopes&quot;:&quot;https://www.googleapis.com/auth/cloud-platform&quot;},&quot;packageName&quot;:&quot;google.privacy.dlp.v2&quot;,&quot;protoFile&quot;:&quot;google/privacy/dlp/v2/dlp.proto&quot;,&quot;IAMPolicyMixin&quot;:0,&quot;LocationMixin&quot;:0,&quot;comments&quot;:[&quot; The Cloud Data Loss Prevention (DLP) API is a service that allows clients&quot;,&quot; to detect the presence of Personally Identifiable Information (PII) and other&quot;,&quot; privacy-sensitive data in user-supplied, unstructured data streams, like text&quot;,&quot; blocks or images.&quot;,&quot; The service also includes methods for sensitive data redaction and&quot;,&quot; scheduling of data scans on Google Cloud Platform based data sets.&quot;,&quot;&quot;,&quot; To learn more about concepts and find how-to guides see&quot;,&quot; https://cloud.google.com/dlp/docs/.&quot;],&quot;commentsMap&quot;:{&quot;comments&quot;:{&quot;Http:rules&quot;:{&quot;paramName&quot;:&quot;rules&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of HTTP configuration rules that apply to individual API methods.&quot;,&quot;&quot;,&quot; **NOTE:** All service configuration rules follow &#92;&quot;last one wins&#92;&quot; order.&quot;]},&quot;Http:fully_decode_reserved_expansion&quot;:{&quot;paramName&quot;:&quot;fully_decode_reserved_expansion&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; When set to true, URL path parameters will be fully URI-decoded except in&quot;,&quot; cases of single segment matches in reserved expansion, where &#92;&quot;%2F&#92;&quot; will be&quot;,&quot; left encoded.&quot;,&quot;&quot;,&quot; The default behavior is to not decode RFC 6570 reserved characters in multi&quot;,&quot; segment matches.&quot;]},&quot;HttpRule:selector&quot;:{&quot;paramName&quot;:&quot;selector&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Selects a method to which this rule applies.&quot;,&quot;&quot;,&quot; Refer to [selector][google.api.DocumentationRule.selector] for syntax&quot;,&quot; details.&quot;]},&quot;HttpRule:get&quot;:{&quot;paramName&quot;:&quot;get&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP GET. Used for listing and getting information about&quot;,&quot; resources.&quot;]},&quot;HttpRule:put&quot;:{&quot;paramName&quot;:&quot;put&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP PUT. Used for replacing a resource.&quot;]},&quot;HttpRule:post&quot;:{&quot;paramName&quot;:&quot;post&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP POST. Used for creating a resource or performing an action.&quot;]},&quot;HttpRule:delete&quot;:{&quot;paramName&quot;:&quot;delete&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP DELETE. Used for deleting a resource.&quot;]},&quot;HttpRule:patch&quot;:{&quot;paramName&quot;:&quot;patch&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP PATCH. Used for updating a resource.&quot;]},&quot;HttpRule:custom&quot;:{&quot;paramName&quot;:&quot;custom&quot;,&quot;paramType&quot;:&quot;.google.api.CustomHttpPattern&quot;,&quot;comments&quot;:[&quot; The custom pattern is used for specifying an HTTP method that is not&quot;,&quot; included in the `pattern` field, such as HEAD, or &#92;&quot;*&#92;&quot; to leave the&quot;,&quot; HTTP method unspecified for this rule. The wild-card rule is useful&quot;,&quot; for services that provide content to Web (HTML) clients.&quot;]},&quot;HttpRule:body&quot;:{&quot;paramName&quot;:&quot;body&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the request field whose value is mapped to the HTTP request&quot;,&quot; body, or `*` for mapping all request fields not captured by the path&quot;,&quot; pattern to the HTTP body, or omitted for not having any HTTP request body.&quot;,&quot;&quot;,&quot; NOTE: the referred field must be present at the top-level of the request&quot;,&quot; message type.&quot;]},&quot;HttpRule:response_body&quot;:{&quot;paramName&quot;:&quot;response_body&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional. The name of the response field whose value is mapped to the HTTP&quot;,&quot; response body. When omitted, the entire response message will be used&quot;,&quot; as the HTTP response body.&quot;,&quot;&quot;,&quot; NOTE: The referred field must be present at the top-level of the response&quot;,&quot; message type.&quot;]},&quot;HttpRule:additional_bindings&quot;:{&quot;paramName&quot;:&quot;additional_bindings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Additional HTTP bindings for the selector. Nested bindings must&quot;,&quot; not contain an `additional_bindings` field themselves (that is,&quot;,&quot; the nesting may only be one level deep).&quot;]},&quot;CustomHttpPattern:kind&quot;:{&quot;paramName&quot;:&quot;kind&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of this custom HTTP verb.&quot;]},&quot;CustomHttpPattern:path&quot;:{&quot;paramName&quot;:&quot;path&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The path matched by this custom verb.&quot;]},&quot;FileDescriptorSet:file&quot;:{&quot;paramName&quot;:&quot;file&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:package&quot;:{&quot;paramName&quot;:&quot;package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:dependency&quot;:{&quot;paramName&quot;:&quot;dependency&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Names of files imported by this file.&quot;]},&quot;FileDescriptorProto:public_dependency&quot;:{&quot;paramName&quot;:&quot;public_dependency&quot;,&quot;paramType&quot;:&quot;TYPE_INT32[]&quot;,&quot;comments&quot;:[&quot; Indexes of the public imported files in the dependency list above.&quot;]},&quot;FileDescriptorProto:weak_dependency&quot;:{&quot;paramName&quot;:&quot;weak_dependency&quot;,&quot;paramType&quot;:&quot;TYPE_INT32[]&quot;,&quot;comments&quot;:[&quot; Indexes of the weak imported files in the dependency list.&quot;,&quot; For Google-internal migration only. Do not use.&quot;]},&quot;FileDescriptorProto:message_type&quot;:{&quot;paramName&quot;:&quot;message_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; All top-level definitions in this file.&quot;]},&quot;FileDescriptorProto:enum_type&quot;:{&quot;paramName&quot;:&quot;enum_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:service&quot;:{&quot;paramName&quot;:&quot;service&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:extension&quot;:{&quot;paramName&quot;:&quot;extension&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FileOptions&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:source_code_info&quot;:{&quot;paramName&quot;:&quot;source_code_info&quot;,&quot;paramType&quot;:&quot;.google.protobuf.SourceCodeInfo&quot;,&quot;comments&quot;:[&quot; This field contains optional information about the original source code.&quot;,&quot; You may safely remove this entire field without harming runtime&quot;,&quot; functionality of the descriptors -- the information is needed only by&quot;,&quot; development tools.&quot;]},&quot;FileDescriptorProto:syntax&quot;:{&quot;paramName&quot;:&quot;syntax&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The syntax of the proto file.&quot;,&quot; The supported values are &#92;&quot;proto2&#92;&quot;, &#92;&quot;proto3&#92;&quot;, and &#92;&quot;editions&#92;&quot;.&quot;,&quot;&quot;,&quot; If `edition` is present, this value must be &#92;&quot;editions&#92;&quot;.&quot;]},&quot;FileDescriptorProto:edition&quot;:{&quot;paramName&quot;:&quot;edition&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Edition&quot;,&quot;comments&quot;:[&quot; The edition of the proto file.&quot;]},&quot;DescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:extension&quot;:{&quot;paramName&quot;:&quot;extension&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:nested_type&quot;:{&quot;paramName&quot;:&quot;nested_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:enum_type&quot;:{&quot;paramName&quot;:&quot;enum_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:extension_range&quot;:{&quot;paramName&quot;:&quot;extension_range&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:oneof_decl&quot;:{&quot;paramName&quot;:&quot;oneof_decl&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.MessageOptions&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:reserved_range&quot;:{&quot;paramName&quot;:&quot;reserved_range&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:reserved_name&quot;:{&quot;paramName&quot;:&quot;reserved_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Reserved field names, which may not be used by fields in the same message.&quot;,&quot; A given name may only be reserved once.&quot;]},&quot;ExtensionRangeOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;ExtensionRangeOptions:declaration&quot;:{&quot;paramName&quot;:&quot;declaration&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; For external users: DO NOT USE. We are in the process of open sourcing&quot;,&quot; extension declaration and executing internal cleanups before it can be&quot;,&quot; used externally.&quot;]},&quot;ExtensionRangeOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;ExtensionRangeOptions:verification&quot;:{&quot;paramName&quot;:&quot;verification&quot;,&quot;paramType&quot;:&quot;.google.protobuf.ExtensionRangeOptions.VerificationState&quot;,&quot;comments&quot;:[&quot; The verification state of the range.&quot;,&quot; TODO: flip the default to DECLARATION once all empty ranges&quot;,&quot; are marked as UNVERIFIED.&quot;]},&quot;FieldDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:number&quot;:{&quot;paramName&quot;:&quot;number&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:label&quot;:{&quot;paramName&quot;:&quot;label&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldDescriptorProto.Label&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldDescriptorProto.Type&quot;,&quot;comments&quot;:[&quot; If type_name is set, this need not be set.  If both this and type_name&quot;,&quot; are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.&quot;]},&quot;FieldDescriptorProto:type_name&quot;:{&quot;paramName&quot;:&quot;type_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; For message and enum types, this is the name of the type.  If the name&quot;,&quot; starts with a &#39;.&#39;, it is fully-qualified.  Otherwise, C++-like scoping&quot;,&quot; rules are used to find the type (i.e. first the nested types within this&quot;,&quot; message are searched, then within the parent, on up to the root&quot;,&quot; namespace).&quot;]},&quot;FieldDescriptorProto:extendee&quot;:{&quot;paramName&quot;:&quot;extendee&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; For extensions, this is the name of the type being extended.  It is&quot;,&quot; resolved in the same manner as type_name.&quot;]},&quot;FieldDescriptorProto:default_value&quot;:{&quot;paramName&quot;:&quot;default_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; For numeric types, contains the original text representation of the value.&quot;,&quot; For booleans, &#92;&quot;true&#92;&quot; or &#92;&quot;false&#92;&quot;.&quot;,&quot; For strings, contains the default text contents (not escaped in any way).&quot;,&quot; For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.&quot;]},&quot;FieldDescriptorProto:oneof_index&quot;:{&quot;paramName&quot;:&quot;oneof_index&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; If set, gives the index of a oneof in the containing type&#39;s oneof_decl&quot;,&quot; list.  This field is a member of that oneof.&quot;]},&quot;FieldDescriptorProto:json_name&quot;:{&quot;paramName&quot;:&quot;json_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; JSON name of this field. The value is set by protocol compiler. If the&quot;,&quot; user has set a &#92;&quot;json_name&#92;&quot; option on this field, that option&#39;s value&quot;,&quot; will be used. Otherwise, it&#39;s deduced from the field&#39;s name by converting&quot;,&quot; it to camelCase.&quot;]},&quot;FieldDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:proto3_optional&quot;:{&quot;paramName&quot;:&quot;proto3_optional&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If true, this is a proto3 &#92;&quot;optional&#92;&quot;. When a proto3 field is optional, it&quot;,&quot; tracks presence regardless of field type.&quot;,&quot;&quot;,&quot; When proto3_optional is true, this field must belong to a oneof to signal&quot;,&quot; to old proto3 clients that presence is tracked for this field. This oneof&quot;,&quot; is known as a &#92;&quot;synthetic&#92;&quot; oneof, and this field must be its sole member&quot;,&quot; (each proto3 optional field gets its own synthetic oneof). Synthetic oneofs&quot;,&quot; exist in the descriptor only, and do not generate any API. Synthetic oneofs&quot;,&quot; must be ordered after all &#92;&quot;real&#92;&quot; oneofs.&quot;,&quot;&quot;,&quot; For message fields, proto3_optional doesn&#39;t create any semantic change,&quot;,&quot; since non-repeated message fields always track presence. However it still&quot;,&quot; indicates the semantic detail of whether the user wrote &#92;&quot;optional&#92;&quot; or not.&quot;,&quot; This can be useful for round-tripping the .proto file. For consistency we&quot;,&quot; give message fields a synthetic oneof also, even though it is not required&quot;,&quot; to track presence. This is especially important because the parser can&#39;t&quot;,&quot; tell if a field is a message or an enum, so it must always create a&quot;,&quot; synthetic oneof.&quot;,&quot;&quot;,&quot; Proto2 optional fields do not set this flag, because they already indicate&quot;,&quot; optional with `LABEL_OPTIONAL`.&quot;]},&quot;OneofDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;OneofDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.OneofOptions&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:value&quot;:{&quot;paramName&quot;:&quot;value&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.EnumOptions&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:reserved_range&quot;:{&quot;paramName&quot;:&quot;reserved_range&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Range of reserved numeric values. Reserved numeric values may not be used&quot;,&quot; by enum values in the same enum declaration. Reserved ranges may not&quot;,&quot; overlap.&quot;]},&quot;EnumDescriptorProto:reserved_name&quot;:{&quot;paramName&quot;:&quot;reserved_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Reserved enum value names, which may not be reused. A given name may only&quot;,&quot; be reserved once.&quot;]},&quot;EnumValueDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;EnumValueDescriptorProto:number&quot;:{&quot;paramName&quot;:&quot;number&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;EnumValueDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.EnumValueOptions&quot;,&quot;comments&quot;:[]},&quot;ServiceDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ServiceDescriptorProto:method&quot;:{&quot;paramName&quot;:&quot;method&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;ServiceDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.ServiceOptions&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:input_type&quot;:{&quot;paramName&quot;:&quot;input_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Input and output type names.  These are resolved in the same way as&quot;,&quot; FieldDescriptorProto.type_name, but must refer to a message type.&quot;]},&quot;MethodDescriptorProto:output_type&quot;:{&quot;paramName&quot;:&quot;output_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.MethodOptions&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:client_streaming&quot;:{&quot;paramName&quot;:&quot;client_streaming&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Identifies if client streams multiple client messages&quot;]},&quot;MethodDescriptorProto:server_streaming&quot;:{&quot;paramName&quot;:&quot;server_streaming&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Identifies if server streams multiple server messages&quot;]},&quot;FileOptions:java_package&quot;:{&quot;paramName&quot;:&quot;java_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the Java package where classes generated from this .proto will be&quot;,&quot; placed.  By default, the proto package is used, but this is often&quot;,&quot; inappropriate because proto packages do not normally start with backwards&quot;,&quot; domain names.&quot;]},&quot;FileOptions:java_outer_classname&quot;:{&quot;paramName&quot;:&quot;java_outer_classname&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Controls the name of the wrapper Java class generated for the .proto file.&quot;,&quot; That class will always contain the .proto file&#39;s getDescriptor() method as&quot;,&quot; well as any top-level extensions defined in the .proto file.&quot;,&quot; If java_multiple_files is disabled, then all the other classes from the&quot;,&quot; .proto file will be nested inside the single wrapper outer class.&quot;]},&quot;FileOptions:java_multiple_files&quot;:{&quot;paramName&quot;:&quot;java_multiple_files&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If enabled, then the Java code generator will generate a separate .java&quot;,&quot; file for each top-level message, enum, and service defined in the .proto&quot;,&quot; file.  Thus, these types will *not* be nested inside the wrapper class&quot;,&quot; named by java_outer_classname.  However, the wrapper class will still be&quot;,&quot; generated to contain the file&#39;s getDescriptor() method as well as any&quot;,&quot; top-level extensions defined in the file.&quot;]},&quot;FileOptions:java_generate_equals_and_hash&quot;:{&quot;paramName&quot;:&quot;java_generate_equals_and_hash&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; This option does nothing.&quot;]},&quot;FileOptions:java_string_check_utf8&quot;:{&quot;paramName&quot;:&quot;java_string_check_utf8&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; A proto2 file can set this to true to opt in to UTF-8 checking for Java,&quot;,&quot; which will throw an exception if invalid UTF-8 is parsed from the wire or&quot;,&quot; assigned to a string field.&quot;,&quot;&quot;,&quot; TODO: clarify exactly what kinds of field types this option&quot;,&quot; applies to, and update these docs accordingly.&quot;,&quot;&quot;,&quot; Proto3 files already perform these checks. Setting the option explicitly to&quot;,&quot; false has no effect: it cannot be used to opt proto3 files out of UTF-8&quot;,&quot; checks.&quot;]},&quot;FileOptions:optimize_for&quot;:{&quot;paramName&quot;:&quot;optimize_for&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FileOptions.OptimizeMode&quot;,&quot;comments&quot;:[]},&quot;FileOptions:go_package&quot;:{&quot;paramName&quot;:&quot;go_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the Go package where structs generated from this .proto will be&quot;,&quot; placed. If omitted, the Go package will be derived from the following:&quot;,&quot;   - The basename of the package import path, if provided.&quot;,&quot;   - Otherwise, the package statement in the .proto file, if present.&quot;,&quot;   - Otherwise, the basename of the .proto file, without extension.&quot;]},&quot;FileOptions:cc_generic_services&quot;:{&quot;paramName&quot;:&quot;cc_generic_services&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Should generic services be generated in each language?  &#92;&quot;Generic&#92;&quot; services&quot;,&quot; are not specific to any particular RPC system.  They are generated by the&quot;,&quot; main code generators in each language (without additional plugins).&quot;,&quot; Generic services were the only kind of service generation supported by&quot;,&quot; early versions of google.protobuf.&quot;,&quot;&quot;,&quot; Generic services are now considered deprecated in favor of using plugins&quot;,&quot; that generate code specific to your particular RPC system.  Therefore,&quot;,&quot; these default to false.  Old code which depends on generic services should&quot;,&quot; explicitly set them to true.&quot;]},&quot;FileOptions:java_generic_services&quot;:{&quot;paramName&quot;:&quot;java_generic_services&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;FileOptions:py_generic_services&quot;:{&quot;paramName&quot;:&quot;py_generic_services&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;FileOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this file deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for everything in the file, or it will be completely ignored; in the very&quot;,&quot; least, this is a formalization for deprecating files.&quot;]},&quot;FileOptions:cc_enable_arenas&quot;:{&quot;paramName&quot;:&quot;cc_enable_arenas&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enables the use of arenas for the proto messages in this file. This applies&quot;,&quot; only to generated classes for C++.&quot;]},&quot;FileOptions:objc_class_prefix&quot;:{&quot;paramName&quot;:&quot;objc_class_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the objective c class prefix which is prepended to all objective c&quot;,&quot; generated classes from this .proto. There is no default.&quot;]},&quot;FileOptions:csharp_namespace&quot;:{&quot;paramName&quot;:&quot;csharp_namespace&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Namespace for generated classes; defaults to the package.&quot;]},&quot;FileOptions:swift_prefix&quot;:{&quot;paramName&quot;:&quot;swift_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; By default Swift generators will take the proto package and CamelCase it&quot;,&quot; replacing &#39;.&#39; with underscore and use that to prefix the types/symbols&quot;,&quot; defined. When this options is provided, they will use this value instead&quot;,&quot; to prefix the types/symbols defined.&quot;]},&quot;FileOptions:php_class_prefix&quot;:{&quot;paramName&quot;:&quot;php_class_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the php class prefix which is prepended to all php generated classes&quot;,&quot; from this .proto. Default is empty.&quot;]},&quot;FileOptions:php_namespace&quot;:{&quot;paramName&quot;:&quot;php_namespace&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Use this option to change the namespace of php generated classes. Default&quot;,&quot; is empty. When this option is empty, the package name will be used for&quot;,&quot; determining the namespace.&quot;]},&quot;FileOptions:php_metadata_namespace&quot;:{&quot;paramName&quot;:&quot;php_metadata_namespace&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Use this option to change the namespace of php generated metadata classes.&quot;,&quot; Default is empty. When this option is empty, the proto file name will be&quot;,&quot; used for determining the namespace.&quot;]},&quot;FileOptions:ruby_package&quot;:{&quot;paramName&quot;:&quot;ruby_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Use this option to change the package of ruby generated classes. Default&quot;,&quot; is empty. When this option is not set, the package name will be used for&quot;,&quot; determining the ruby package.&quot;]},&quot;FileOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;FileOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here.&quot;,&quot; See the documentation for the &#92;&quot;Options&#92;&quot; section above.&quot;]},&quot;MessageOptions:message_set_wire_format&quot;:{&quot;paramName&quot;:&quot;message_set_wire_format&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Set true to use the old proto1 MessageSet wire format for extensions.&quot;,&quot; This is provided for backwards-compatibility with the MessageSet wire&quot;,&quot; format.  You should not use this for any other reason:  It&#39;s less&quot;,&quot; efficient, has fewer features, and is more complicated.&quot;,&quot;&quot;,&quot; The message must be defined exactly as follows:&quot;,&quot;   message Foo {&quot;,&quot;     option message_set_wire_format = true;&quot;,&quot;     extensions 4 to max;&quot;,&quot;   }&quot;,&quot; Note that the message cannot have any defined fields; MessageSets only&quot;,&quot; have extensions.&quot;,&quot;&quot;,&quot; All extensions of your type must be singular messages; e.g. they cannot&quot;,&quot; be int32s, enums, or repeated messages.&quot;,&quot;&quot;,&quot; Because this is an option, the above two restrictions are not enforced by&quot;,&quot; the protocol compiler.&quot;]},&quot;MessageOptions:no_standard_descriptor_accessor&quot;:{&quot;paramName&quot;:&quot;no_standard_descriptor_accessor&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Disables the generation of the standard &#92;&quot;descriptor()&#92;&quot; accessor, which can&quot;,&quot; conflict with a field of the same name.  This is meant to make migration&quot;,&quot; from proto1 easier; new code should avoid fields named &#92;&quot;descriptor&#92;&quot;.&quot;]},&quot;MessageOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this message deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the message, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating messages.&quot;]},&quot;MessageOptions:map_entry&quot;:{&quot;paramName&quot;:&quot;map_entry&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Whether the message is an automatically generated map entry type for the&quot;,&quot; maps field.&quot;,&quot;&quot;,&quot; For maps fields:&quot;,&quot;     map&lt;KeyType, ValueType&gt; map_field = 1;&quot;,&quot; The parsed descriptor looks like:&quot;,&quot;     message MapFieldEntry {&quot;,&quot;         option map_entry = true;&quot;,&quot;         optional KeyType key = 1;&quot;,&quot;         optional ValueType value = 2;&quot;,&quot;     }&quot;,&quot;     repeated MapFieldEntry map_field = 1;&quot;,&quot;&quot;,&quot; Implementations may choose not to generate the map_entry=true message, but&quot;,&quot; use a native map in the target language to hold the keys and values.&quot;,&quot; The reflection APIs in such implementations still need to work as&quot;,&quot; if the field is a repeated message field.&quot;,&quot;&quot;,&quot; NOTE: Do not set the option in .proto files. Always use the maps syntax&quot;,&quot; instead. The option should only be implicitly set by the proto compiler&quot;,&quot; parser.&quot;]},&quot;MessageOptions:deprecated_legacy_json_field_conflicts&quot;:{&quot;paramName&quot;:&quot;deprecated_legacy_json_field_conflicts&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enable the legacy handling of JSON field name conflicts.  This lowercases&quot;,&quot; and strips underscored from the fields before comparison in proto3 only.&quot;,&quot; The new behavior takes `json_name` into account and applies to proto2 as&quot;,&quot; well.&quot;,&quot;&quot;,&quot; This should only be used as a temporary measure against broken builds due&quot;,&quot; to the change in behavior for JSON field name conflicts.&quot;,&quot;&quot;,&quot; TODO This is legacy behavior we plan to remove once downstream&quot;,&quot; teams have had time to migrate.&quot;]},&quot;MessageOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;MessageOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;FieldOptions:ctype&quot;:{&quot;paramName&quot;:&quot;ctype&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions.CType&quot;,&quot;comments&quot;:[&quot; The ctype option instructs the C++ code generator to use a different&quot;,&quot; representation of the field than it normally would.  See the specific&quot;,&quot; options below.  This option is only implemented to support use of&quot;,&quot; [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of&quot;,&quot; type &#92;&quot;bytes&#92;&quot; in the open source release -- sorry, we&#39;ll try to include&quot;,&quot; other types in a future version!&quot;]},&quot;FieldOptions:packed&quot;:{&quot;paramName&quot;:&quot;packed&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; The packed option can be enabled for repeated primitive fields to enable&quot;,&quot; a more efficient representation on the wire. Rather than repeatedly&quot;,&quot; writing the tag and type for each element, the entire array is encoded as&quot;,&quot; a single length-delimited blob. In proto3, only explicit setting it to&quot;,&quot; false will avoid using packed encoding.  This option is prohibited in&quot;,&quot; Editions, but the `repeated_field_encoding` feature can be used to control&quot;,&quot; the behavior.&quot;]},&quot;FieldOptions:jstype&quot;:{&quot;paramName&quot;:&quot;jstype&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions.JSType&quot;,&quot;comments&quot;:[&quot; The jstype option determines the JavaScript type used for values of the&quot;,&quot; field.  The option is permitted only for 64 bit integral and fixed types&quot;,&quot; (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING&quot;,&quot; is represented as JavaScript string, which avoids loss of precision that&quot;,&quot; can happen when a large value is converted to a floating point JavaScript.&quot;,&quot; Specifying JS_NUMBER for the jstype causes the generated JavaScript code to&quot;,&quot; use the JavaScript &#92;&quot;number&#92;&quot; type.  The behavior of the default option&quot;,&quot; JS_NORMAL is implementation dependent.&quot;,&quot;&quot;,&quot; This option is an enum to permit additional types to be added, e.g.&quot;,&quot; goog.math.Integer.&quot;]},&quot;FieldOptions:lazy&quot;:{&quot;paramName&quot;:&quot;lazy&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Should this field be parsed lazily?  Lazy applies only to message-type&quot;,&quot; fields.  It means that when the outer message is initially parsed, the&quot;,&quot; inner message&#39;s contents will not be parsed but instead stored in encoded&quot;,&quot; form.  The inner message will actually be parsed when it is first accessed.&quot;,&quot;&quot;,&quot; This is only a hint.  Implementations are free to choose whether to use&quot;,&quot; eager or lazy parsing regardless of the value of this option.  However,&quot;,&quot; setting this option true suggests that the protocol author believes that&quot;,&quot; using lazy parsing on this field is worth the additional bookkeeping&quot;,&quot; overhead typically needed to implement it.&quot;,&quot;&quot;,&quot; This option does not affect the public interface of any generated code;&quot;,&quot; all method signatures remain the same.  Furthermore, thread-safety of the&quot;,&quot; interface is not affected by this option; const methods remain safe to&quot;,&quot; call from multiple threads concurrently, while non-const methods continue&quot;,&quot; to require exclusive access.&quot;,&quot;&quot;,&quot; Note that lazy message fields are still eagerly verified to check&quot;,&quot; ill-formed wireformat or missing required fields. Calling IsInitialized()&quot;,&quot; on the outer message would fail if the inner message has missing required&quot;,&quot; fields. Failed verification would result in parsing failure (except when&quot;,&quot; uninitialized messages are acceptable).&quot;]},&quot;FieldOptions:unverified_lazy&quot;:{&quot;paramName&quot;:&quot;unverified_lazy&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; unverified_lazy does no correctness checks on the byte stream. This should&quot;,&quot; only be used where lazy with verification is prohibitive for performance&quot;,&quot; reasons.&quot;]},&quot;FieldOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this field deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for accessors, or it will be completely ignored; in the very least, this&quot;,&quot; is a formalization for deprecating fields.&quot;]},&quot;FieldOptions:weak&quot;:{&quot;paramName&quot;:&quot;weak&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; For Google-internal migration only. Do not use.&quot;]},&quot;FieldOptions:debug_redact&quot;:{&quot;paramName&quot;:&quot;debug_redact&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Indicate that the field value should not be printed out when using debug&quot;,&quot; formats, e.g. when the field contains sensitive credentials.&quot;]},&quot;FieldOptions:retention&quot;:{&quot;paramName&quot;:&quot;retention&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions.OptionRetention&quot;,&quot;comments&quot;:[]},&quot;FieldOptions:targets&quot;:{&quot;paramName&quot;:&quot;targets&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[]},&quot;FieldOptions:edition_defaults&quot;:{&quot;paramName&quot;:&quot;edition_defaults&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FieldOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;FieldOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;OneofOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;OneofOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;EnumOptions:allow_alias&quot;:{&quot;paramName&quot;:&quot;allow_alias&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Set this option to true to allow mapping different tag names to the same&quot;,&quot; value.&quot;]},&quot;EnumOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this enum deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the enum, or it will be completely ignored; in the very least, this&quot;,&quot; is a formalization for deprecating enums.&quot;]},&quot;EnumOptions:deprecated_legacy_json_field_conflicts&quot;:{&quot;paramName&quot;:&quot;deprecated_legacy_json_field_conflicts&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enable the legacy handling of JSON field name conflicts.  This lowercases&quot;,&quot; and strips underscored from the fields before comparison in proto3 only.&quot;,&quot; The new behavior takes `json_name` into account and applies to proto2 as&quot;,&quot; well.&quot;,&quot; TODO Remove this legacy behavior once downstream teams have&quot;,&quot; had time to migrate.&quot;]},&quot;EnumOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;EnumOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;EnumValueOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this enum value deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the enum value, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating enum values.&quot;]},&quot;EnumValueOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;EnumValueOptions:debug_redact&quot;:{&quot;paramName&quot;:&quot;debug_redact&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Indicate that fields annotated with this enum value should not be printed&quot;,&quot; out when using debug formats, e.g. when the field contains sensitive&quot;,&quot; credentials.&quot;]},&quot;EnumValueOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;ServiceOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;ServiceOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this service deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the service, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating services.&quot;]},&quot;ServiceOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;MethodOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this method deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the method, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating methods.&quot;]},&quot;MethodOptions:idempotency_level&quot;:{&quot;paramName&quot;:&quot;idempotency_level&quot;,&quot;paramType&quot;:&quot;.google.protobuf.MethodOptions.IdempotencyLevel&quot;,&quot;comments&quot;:[]},&quot;MethodOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;MethodOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;UninterpretedOption:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:identifier_value&quot;:{&quot;paramName&quot;:&quot;identifier_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The value of the uninterpreted option, in whatever type the tokenizer&quot;,&quot; identified it as during parsing. Exactly one of these should be set.&quot;]},&quot;UninterpretedOption:positive_int_value&quot;:{&quot;paramName&quot;:&quot;positive_int_value&quot;,&quot;paramType&quot;:&quot;TYPE_UINT64&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:negative_int_value&quot;:{&quot;paramName&quot;:&quot;negative_int_value&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:double_value&quot;:{&quot;paramName&quot;:&quot;double_value&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:string_value&quot;:{&quot;paramName&quot;:&quot;string_value&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:aggregate_value&quot;:{&quot;paramName&quot;:&quot;aggregate_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:field_presence&quot;:{&quot;paramName&quot;:&quot;field_presence&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.FieldPresence&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:enum_type&quot;:{&quot;paramName&quot;:&quot;enum_type&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.EnumType&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:repeated_field_encoding&quot;:{&quot;paramName&quot;:&quot;repeated_field_encoding&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.RepeatedFieldEncoding&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:utf8_validation&quot;:{&quot;paramName&quot;:&quot;utf8_validation&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.Utf8Validation&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:message_encoding&quot;:{&quot;paramName&quot;:&quot;message_encoding&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.MessageEncoding&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:json_format&quot;:{&quot;paramName&quot;:&quot;json_format&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.JsonFormat&quot;,&quot;comments&quot;:[]},&quot;FeatureSetDefaults:defaults&quot;:{&quot;paramName&quot;:&quot;defaults&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FeatureSetDefaults:minimum_edition&quot;:{&quot;paramName&quot;:&quot;minimum_edition&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Edition&quot;,&quot;comments&quot;:[&quot; The minimum supported edition (inclusive) when this was constructed.&quot;,&quot; Editions before this will not have defaults.&quot;]},&quot;FeatureSetDefaults:maximum_edition&quot;:{&quot;paramName&quot;:&quot;maximum_edition&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Edition&quot;,&quot;comments&quot;:[&quot; The maximum known edition (inclusive) when this was constructed. Editions&quot;,&quot; after this will not have reliable defaults.&quot;]},&quot;SourceCodeInfo:location&quot;:{&quot;paramName&quot;:&quot;location&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A Location identifies a piece of source code in a .proto file which&quot;,&quot; corresponds to a particular definition.  This information is intended&quot;,&quot; to be useful to IDEs, code indexers, documentation generators, and similar&quot;,&quot; tools.&quot;,&quot;&quot;,&quot; For example, say we have a file like:&quot;,&quot;   message Foo {&quot;,&quot;     optional string foo = 1;&quot;,&quot;   }&quot;,&quot; Let&#39;s look at just the field definition:&quot;,&quot;   optional string foo = 1;&quot;,&quot;   ^       ^^     ^^  ^  ^^^&quot;,&quot;   a       bc     de  f  ghi&quot;,&quot; We have the following locations:&quot;,&quot;   span   path               represents&quot;,&quot;   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.&quot;,&quot;   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).&quot;,&quot;   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).&quot;,&quot;   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).&quot;,&quot;   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).&quot;,&quot;&quot;,&quot; Notes:&quot;,&quot; - A location may refer to a repeated field itself (i.e. not to any&quot;,&quot;   particular index within it).  This is used whenever a set of elements are&quot;,&quot;   logically enclosed in a single code segment.  For example, an entire&quot;,&quot;   extend block (possibly containing multiple extension definitions) will&quot;,&quot;   have an outer location whose path refers to the &#92;&quot;extensions&#92;&quot; repeated&quot;,&quot;   field without an index.&quot;,&quot; - Multiple locations may have the same path.  This happens when a single&quot;,&quot;   logical declaration is spread out across multiple places.  The most&quot;,&quot;   obvious example is the &#92;&quot;extend&#92;&quot; block again -- there may be multiple&quot;,&quot;   extend blocks in the same scope, each of which will have the same path.&quot;,&quot; - A location&#39;s span is not always a subset of its parent&#39;s span.  For&quot;,&quot;   example, the &#92;&quot;extendee&#92;&quot; of an extension declaration appears at the&quot;,&quot;   beginning of the &#92;&quot;extend&#92;&quot; block and is shared by all extensions within&quot;,&quot;   the block.&quot;,&quot; - Just because a location&#39;s span is a subset of some other location&#39;s span&quot;,&quot;   does not mean that it is a descendant.  For example, a &#92;&quot;group&#92;&quot; defines&quot;,&quot;   both a type and a field in a single declaration.  Thus, the locations&quot;,&quot;   corresponding to the type and field and their components will overlap.&quot;,&quot; - Code which tries to interpret locations should probably be designed to&quot;,&quot;   ignore those that it doesn&#39;t understand, as more types of locations could&quot;,&quot;   be recorded in the future.&quot;]},&quot;GeneratedCodeInfo:annotation&quot;:{&quot;paramName&quot;:&quot;annotation&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; An Annotation connects some span of text in generated code to an element&quot;,&quot; of its generating .proto file.&quot;]},&quot;Duration:seconds&quot;:{&quot;paramName&quot;:&quot;seconds&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Signed seconds of the span of time. Must be from -315,576,000,000&quot;,&quot; to +315,576,000,000 inclusive. Note: these bounds are computed from:&quot;,&quot; 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years&quot;]},&quot;Duration:nanos&quot;:{&quot;paramName&quot;:&quot;nanos&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Signed fractions of a second at nanosecond resolution of the span&quot;,&quot; of time. Durations less than one second are represented with a 0&quot;,&quot; `seconds` field and a positive or negative `nanos` field. For durations&quot;,&quot; of one second or more, a non-zero value for the `nanos` field must be&quot;,&quot; of the same sign as the `seconds` field. Must be from -999,999,999&quot;,&quot; to +999,999,999 inclusive.&quot;]},&quot;CommonLanguageSettings:reference_docs_uri&quot;:{&quot;paramName&quot;:&quot;reference_docs_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Link to automatically generated reference documentation.  Example:&quot;,&quot; https://cloud.google.com/nodejs/docs/reference/asset/latest&quot;]},&quot;CommonLanguageSettings:destinations&quot;:{&quot;paramName&quot;:&quot;destinations&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; The destination where API teams want this client library to be published.&quot;]},&quot;ClientLibrarySettings:version&quot;:{&quot;paramName&quot;:&quot;version&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Version of the API to apply these settings to. This is the full protobuf&quot;,&quot; package for the API, ending in the version element.&quot;,&quot; Examples: &#92;&quot;google.cloud.speech.v1&#92;&quot; and &#92;&quot;google.spanner.admin.database.v1&#92;&quot;.&quot;]},&quot;ClientLibrarySettings:launch_stage&quot;:{&quot;paramName&quot;:&quot;launch_stage&quot;,&quot;paramType&quot;:&quot;.google.api.LaunchStage&quot;,&quot;comments&quot;:[&quot; Launch stage of this version of the API.&quot;]},&quot;ClientLibrarySettings:rest_numeric_enums&quot;:{&quot;paramName&quot;:&quot;rest_numeric_enums&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; When using transport=rest, the client request will encode enums as&quot;,&quot; numbers rather than strings.&quot;]},&quot;ClientLibrarySettings:java_settings&quot;:{&quot;paramName&quot;:&quot;java_settings&quot;,&quot;paramType&quot;:&quot;.google.api.JavaSettings&quot;,&quot;comments&quot;:[&quot; Settings for legacy Java features, supported in the Service YAML.&quot;]},&quot;ClientLibrarySettings:cpp_settings&quot;:{&quot;paramName&quot;:&quot;cpp_settings&quot;,&quot;paramType&quot;:&quot;.google.api.CppSettings&quot;,&quot;comments&quot;:[&quot; Settings for C++ client libraries.&quot;]},&quot;ClientLibrarySettings:php_settings&quot;:{&quot;paramName&quot;:&quot;php_settings&quot;,&quot;paramType&quot;:&quot;.google.api.PhpSettings&quot;,&quot;comments&quot;:[&quot; Settings for PHP client libraries.&quot;]},&quot;ClientLibrarySettings:python_settings&quot;:{&quot;paramName&quot;:&quot;python_settings&quot;,&quot;paramType&quot;:&quot;.google.api.PythonSettings&quot;,&quot;comments&quot;:[&quot; Settings for Python client libraries.&quot;]},&quot;ClientLibrarySettings:node_settings&quot;:{&quot;paramName&quot;:&quot;node_settings&quot;,&quot;paramType&quot;:&quot;.google.api.NodeSettings&quot;,&quot;comments&quot;:[&quot; Settings for Node client libraries.&quot;]},&quot;ClientLibrarySettings:dotnet_settings&quot;:{&quot;paramName&quot;:&quot;dotnet_settings&quot;,&quot;paramType&quot;:&quot;.google.api.DotnetSettings&quot;,&quot;comments&quot;:[&quot; Settings for .NET client libraries.&quot;]},&quot;ClientLibrarySettings:ruby_settings&quot;:{&quot;paramName&quot;:&quot;ruby_settings&quot;,&quot;paramType&quot;:&quot;.google.api.RubySettings&quot;,&quot;comments&quot;:[&quot; Settings for Ruby client libraries.&quot;]},&quot;ClientLibrarySettings:go_settings&quot;:{&quot;paramName&quot;:&quot;go_settings&quot;,&quot;paramType&quot;:&quot;.google.api.GoSettings&quot;,&quot;comments&quot;:[&quot; Settings for Go client libraries.&quot;]},&quot;Publishing:method_settings&quot;:{&quot;paramName&quot;:&quot;method_settings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of API method settings, e.g. the behavior for methods that use the&quot;,&quot; long-running operation pattern.&quot;]},&quot;Publishing:new_issue_uri&quot;:{&quot;paramName&quot;:&quot;new_issue_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Link to a *public* URI where users can report issues.  Example:&quot;,&quot; https://issuetracker.google.com/issues/new?component=190865&amp;template=1161103&quot;]},&quot;Publishing:documentation_uri&quot;:{&quot;paramName&quot;:&quot;documentation_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Link to product home page.  Example:&quot;,&quot; https://cloud.google.com/asset-inventory/docs/overview&quot;]},&quot;Publishing:api_short_name&quot;:{&quot;paramName&quot;:&quot;api_short_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Used as a tracking tag when collecting data about the APIs developer&quot;,&quot; relations artifacts like docs, packages delivered to package managers,&quot;,&quot; etc.  Example: &#92;&quot;speech&#92;&quot;.&quot;]},&quot;Publishing:github_label&quot;:{&quot;paramName&quot;:&quot;github_label&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; GitHub label to apply to issues and pull requests opened for this API.&quot;]},&quot;Publishing:codeowner_github_teams&quot;:{&quot;paramName&quot;:&quot;codeowner_github_teams&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; GitHub teams to be added to CODEOWNERS in the directory in GitHub&quot;,&quot; containing source code for the client libraries for this API.&quot;]},&quot;Publishing:doc_tag_prefix&quot;:{&quot;paramName&quot;:&quot;doc_tag_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A prefix used in sample code when demarking regions to be included in&quot;,&quot; documentation.&quot;]},&quot;Publishing:organization&quot;:{&quot;paramName&quot;:&quot;organization&quot;,&quot;paramType&quot;:&quot;.google.api.ClientLibraryOrganization&quot;,&quot;comments&quot;:[&quot; For whom the client library is being published.&quot;]},&quot;Publishing:library_settings&quot;:{&quot;paramName&quot;:&quot;library_settings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Client library settings.  If the same version string appears multiple&quot;,&quot; times in this list, then the last one wins.  Settings from earlier&quot;,&quot; settings with the same version string are discarded.&quot;]},&quot;Publishing:proto_reference_documentation_uri&quot;:{&quot;paramName&quot;:&quot;proto_reference_documentation_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional link to proto reference documentation.  Example:&quot;,&quot; https://cloud.google.com/pubsub/lite/docs/reference/rpc&quot;]},&quot;Publishing:rest_reference_documentation_uri&quot;:{&quot;paramName&quot;:&quot;rest_reference_documentation_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional link to REST reference documentation.  Example:&quot;,&quot; https://cloud.google.com/pubsub/lite/docs/reference/rest&quot;]},&quot;JavaSettings:library_package&quot;:{&quot;paramName&quot;:&quot;library_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The package name to use in Java. Clobbers the java_package option&quot;,&quot; set in the protobuf. This should be used **only** by APIs&quot;,&quot; who have already set the language_settings.java.package_name&#92;&quot; field&quot;,&quot; in gapic.yaml. API teams should use the protobuf java_package option&quot;,&quot; where possible.&quot;,&quot;&quot;,&quot; Example of a YAML configuration::&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    java_settings:&quot;,&quot;      library_package: com.google.cloud.pubsub.v1&quot;]},&quot;JavaSettings:service_class_names&quot;:{&quot;paramName&quot;:&quot;service_class_names&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Configure the Java class name to use instead of the service&#39;s for its&quot;,&quot; corresponding generated GAPIC client. Keys are fully-qualified&quot;,&quot; service names as they appear in the protobuf (including the full&quot;,&quot; the language_settings.java.interface_names&#92;&quot; field in gapic.yaml. API&quot;,&quot; teams should otherwise use the service name as it appears in the&quot;,&quot; protobuf.&quot;,&quot;&quot;,&quot; Example of a YAML configuration::&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    java_settings:&quot;,&quot;      service_class_names:&quot;,&quot;        - google.pubsub.v1.Publisher: TopicAdmin&quot;,&quot;        - google.pubsub.v1.Subscriber: SubscriptionAdmin&quot;]},&quot;JavaSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;CppSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;PhpSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;PythonSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;NodeSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;DotnetSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;DotnetSettings:renamed_services&quot;:{&quot;paramName&quot;:&quot;renamed_services&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Map from original service names to renamed versions.&quot;,&quot; This is used when the default generated types&quot;,&quot; would cause a naming conflict. (Neither name is&quot;,&quot; fully-qualified.)&quot;,&quot; Example: Subscriber to SubscriberServiceApi.&quot;]},&quot;DotnetSettings:renamed_resources&quot;:{&quot;paramName&quot;:&quot;renamed_resources&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Map from full resource types to the effective short name&quot;,&quot; for the resource. This is used when otherwise resource&quot;,&quot; named from different services would cause naming collisions.&quot;,&quot; Example entry:&quot;,&quot; &#92;&quot;datalabeling.googleapis.com/Dataset&#92;&quot;: &#92;&quot;DataLabelingDataset&#92;&quot;&quot;]},&quot;DotnetSettings:ignored_resources&quot;:{&quot;paramName&quot;:&quot;ignored_resources&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; List of full resource types to ignore during generation.&quot;,&quot; This is typically used for API-specific Location resources,&quot;,&quot; which should be handled by the generator as if they were actually&quot;,&quot; the common Location resources.&quot;,&quot; Example entry: &#92;&quot;documentai.googleapis.com/Location&#92;&quot;&quot;]},&quot;DotnetSettings:forced_namespace_aliases&quot;:{&quot;paramName&quot;:&quot;forced_namespace_aliases&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Namespaces which must be aliased in snippets due to&quot;,&quot; a known (but non-generator-predictable) naming collision&quot;]},&quot;DotnetSettings:handwritten_signatures&quot;:{&quot;paramName&quot;:&quot;handwritten_signatures&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Method signatures (in the form &#92;&quot;service.method(signature)&#92;&quot;)&quot;,&quot; which are provided separately, so shouldn&#39;t be generated.&quot;,&quot; Snippets *calling* these methods are still generated, however.&quot;]},&quot;RubySettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;GoSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;MethodSettings:selector&quot;:{&quot;paramName&quot;:&quot;selector&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The fully qualified name of the method, for which the options below apply.&quot;,&quot; This is used to find the method to apply the options.&quot;]},&quot;MethodSettings:long_running&quot;:{&quot;paramName&quot;:&quot;long_running&quot;,&quot;paramType&quot;:&quot;.google.api.MethodSettings.LongRunning&quot;,&quot;comments&quot;:[&quot; Describes settings to use for long-running operations when generating&quot;,&quot; API methods for RPCs. Complements RPCs that use the annotations in&quot;,&quot; google/longrunning/operations.proto.&quot;,&quot;&quot;,&quot; Example of a YAML configuration::&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    method_settings:&quot;,&quot;      - selector: google.cloud.speech.v2.Speech.BatchRecognize&quot;,&quot;        long_running:&quot;,&quot;          initial_poll_delay:&quot;,&quot;            seconds: 60 # 1 minute&quot;,&quot;          poll_delay_multiplier: 1.5&quot;,&quot;          max_poll_delay:&quot;,&quot;            seconds: 360 # 6 minutes&quot;,&quot;          total_poll_timeout:&quot;,&quot;             seconds: 54000 # 90 minutes&quot;]},&quot;MethodSettings:auto_populated_fields&quot;:{&quot;paramName&quot;:&quot;auto_populated_fields&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; List of top-level fields of the request message, that should be&quot;,&quot; automatically populated by the client libraries based on their&quot;,&quot; (google.api.field_info).format. Currently supported format: UUID4.&quot;,&quot;&quot;,&quot; Example of a YAML configuration:&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    method_settings:&quot;,&quot;      - selector: google.example.v1.ExampleService.CreateExample&quot;,&quot;        auto_populated_fields:&quot;,&quot;        - request_id&quot;]},&quot;ResourceDescriptor:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource type. It must be in the format of&quot;,&quot; {service_name}/{resource_type_kind}. The `resource_type_kind` must be&quot;,&quot; singular and must not include version numbers.&quot;,&quot;&quot;,&quot; Example: `storage.googleapis.com/Bucket`&quot;,&quot;&quot;,&quot; The value of the resource_type_kind must follow the regular expression&quot;,&quot; /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and&quot;,&quot; should use PascalCase (UpperCamelCase). The maximum number of&quot;,&quot; characters allowed for the `resource_type_kind` is 100.&quot;]},&quot;ResourceDescriptor:pattern&quot;:{&quot;paramName&quot;:&quot;pattern&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Optional. The relative resource name pattern associated with this resource&quot;,&quot; type. The DNS prefix of the full resource name shouldn&#39;t be specified here.&quot;,&quot;&quot;,&quot; The path pattern must follow the syntax, which aligns with HTTP binding&quot;,&quot; syntax:&quot;,&quot;&quot;,&quot;     Template = Segment { &#92;&quot;/&#92;&quot; Segment } ;&quot;,&quot;     Segment = LITERAL | Variable ;&quot;,&quot;     Variable = &#92;&quot;{&#92;&quot; LITERAL &#92;&quot;}&#92;&quot; ;&quot;,&quot;&quot;,&quot; Examples:&quot;,&quot;&quot;,&quot;     - &#92;&quot;projects/{project}/topics/{topic}&#92;&quot;&quot;,&quot;     - &#92;&quot;projects/{project}/knowledgeBases/{knowledge_base}&#92;&quot;&quot;,&quot;&quot;,&quot; The components in braces correspond to the IDs for each resource in the&quot;,&quot; hierarchy. It is expected that, if multiple patterns are provided,&quot;,&quot; the same component name (e.g. &#92;&quot;project&#92;&quot;) refers to IDs of the same&quot;,&quot; type of resource.&quot;]},&quot;ResourceDescriptor:name_field&quot;:{&quot;paramName&quot;:&quot;name_field&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional. The field on the resource that designates the resource name&quot;,&quot; field. If omitted, this is assumed to be &#92;&quot;name&#92;&quot;.&quot;]},&quot;ResourceDescriptor:history&quot;:{&quot;paramName&quot;:&quot;history&quot;,&quot;paramType&quot;:&quot;.google.api.ResourceDescriptor.History&quot;,&quot;comments&quot;:[&quot; Optional. The historical or future-looking state of the resource pattern.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     // The InspectTemplate message originally only supported resource&quot;,&quot;     // names with organization, and project was added later.&quot;,&quot;     message InspectTemplate {&quot;,&quot;       option (google.api.resource) = {&quot;,&quot;         type: &#92;&quot;dlp.googleapis.com/InspectTemplate&#92;&quot;&quot;,&quot;         pattern:&quot;,&quot;         &#92;&quot;organizations/{organization}/inspectTemplates/{inspect_template}&#92;&quot;&quot;,&quot;         pattern: &#92;&quot;projects/{project}/inspectTemplates/{inspect_template}&#92;&quot;&quot;,&quot;         history: ORIGINALLY_SINGLE_PATTERN&quot;,&quot;       };&quot;,&quot;     }&quot;]},&quot;ResourceDescriptor:plural&quot;:{&quot;paramName&quot;:&quot;plural&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The plural name used in the resource name and permission names, such as&quot;,&quot; &#39;projects&#39; for the resource name of &#39;projects/{project}&#39; and the permission&quot;,&quot; name of &#39;cloudresourcemanager.googleapis.com/projects.get&#39;. It is the same&quot;,&quot; concept of the `plural` field in k8s CRD spec&quot;,&quot; https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/&quot;,&quot;&quot;,&quot; Note: The plural form is required even for singleton resources. See&quot;,&quot; https://aip.dev/156&quot;]},&quot;ResourceDescriptor:singular&quot;:{&quot;paramName&quot;:&quot;singular&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The same concept of the `singular` field in k8s CRD spec&quot;,&quot; https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/&quot;,&quot; Such as &#92;&quot;project&#92;&quot; for the `resourcemanager.googleapis.com/Project` type.&quot;]},&quot;ResourceDescriptor:style&quot;:{&quot;paramName&quot;:&quot;style&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; Style flag(s) for this resource.&quot;,&quot; These indicate that a resource is expected to conform to a given&quot;,&quot; style. See the specific style flags for additional information.&quot;]},&quot;ResourceReference:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource type that the annotated field references.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     message Subscription {&quot;,&quot;       string topic = 2 [(google.api.resource_reference) = {&quot;,&quot;         type: &#92;&quot;pubsub.googleapis.com/Topic&#92;&quot;&quot;,&quot;       }];&quot;,&quot;     }&quot;,&quot;&quot;,&quot; Occasionally, a field may reference an arbitrary resource. In this case,&quot;,&quot; APIs use the special value * in their resource reference.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     message GetIamPolicyRequest {&quot;,&quot;       string resource = 2 [(google.api.resource_reference) = {&quot;,&quot;         type: &#92;&quot;*&#92;&quot;&quot;,&quot;       }];&quot;,&quot;     }&quot;]},&quot;ResourceReference:child_type&quot;:{&quot;paramName&quot;:&quot;child_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource type of a child collection that the annotated field&quot;,&quot; references. This is useful for annotating the `parent` field that&quot;,&quot; doesn&#39;t have a fixed resource type.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     message ListLogEntriesRequest {&quot;,&quot;       string parent = 1 [(google.api.resource_reference) = {&quot;,&quot;         child_type: &#92;&quot;logging.googleapis.com/LogEntry&#92;&quot;&quot;,&quot;       };&quot;,&quot;     }&quot;]},&quot;Timestamp:seconds&quot;:{&quot;paramName&quot;:&quot;seconds&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Represents seconds of UTC time since Unix epoch&quot;,&quot; 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to&quot;,&quot; 9999-12-31T23:59:59Z inclusive.&quot;]},&quot;Timestamp:nanos&quot;:{&quot;paramName&quot;:&quot;nanos&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Non-negative fractions of a second at nanosecond resolution. Negative&quot;,&quot; second values with fractions must still have non-negative nanos values&quot;,&quot; that count forward in time. Must be from 0 to 999,999,999&quot;,&quot; inclusive.&quot;]},&quot;InfoType:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Name of the information type. Either a name of your choosing when&quot;,&quot; creating a CustomInfoType, or one of the names listed&quot;,&quot; at https://cloud.google.com/dlp/docs/infotypes-reference when specifying&quot;,&quot; a built-in type. InfoType names should conform to the pattern&quot;,&quot; [a-zA-Z0-9_]{1,64}.&quot;]},&quot;StoredType:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Resource name of the requested `StoredInfoType`, for example&quot;,&quot; `organizations/433245324/storedInfoTypes/432452342` or&quot;,&quot; `projects/project-id/storedInfoTypes/432452342`.&quot;]},&quot;StoredType:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Timestamp indicating when the version of the `StoredInfoType` used for&quot;,&quot; inspection was created. Output-only field, populated by the system.&quot;]},&quot;CustomInfoType:info_type&quot;:{&quot;paramName&quot;:&quot;info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; CustomInfoType can either be a new infoType, or an extension of built-in&quot;,&quot; infoType, when the name matches one of existing infoTypes and that infoType&quot;,&quot; is specified in `InspectContent.info_types` field. Specifying the latter&quot;,&quot; adds findings to the one detected by the system. If built-in info type is&quot;,&quot; not specified in `InspectContent.info_types` list then the name is treated&quot;,&quot; as a custom info type.&quot;]},&quot;CustomInfoType:likelihood&quot;:{&quot;paramName&quot;:&quot;likelihood&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Likelihood&quot;,&quot;comments&quot;:[&quot; Likelihood to return for this CustomInfoType. This base value can be&quot;,&quot; altered by a detection rule if the finding meets the criteria specified by&quot;,&quot; the rule. Defaults to `VERY_LIKELY` if not specified.&quot;]},&quot;CustomInfoType:dictionary&quot;:{&quot;paramName&quot;:&quot;dictionary&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.Dictionary&quot;,&quot;comments&quot;:[&quot; A list of phrases to detect as a CustomInfoType.&quot;]},&quot;CustomInfoType:regex&quot;:{&quot;paramName&quot;:&quot;regex&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.Regex&quot;,&quot;comments&quot;:[&quot; Regular expression based CustomInfoType.&quot;]},&quot;CustomInfoType:surrogate_type&quot;:{&quot;paramName&quot;:&quot;surrogate_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.SurrogateType&quot;,&quot;comments&quot;:[&quot; Message for detecting output from deidentification transformations that&quot;,&quot; support reversing.&quot;]},&quot;CustomInfoType:stored_type&quot;:{&quot;paramName&quot;:&quot;stored_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredType&quot;,&quot;comments&quot;:[&quot; Load an existing `StoredInfoType` resource for use in&quot;,&quot; `InspectDataSource`. Not currently supported in `InspectContent`.&quot;]},&quot;CustomInfoType:detection_rules&quot;:{&quot;paramName&quot;:&quot;detection_rules&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Set of detection rules to apply to all findings of this CustomInfoType.&quot;,&quot; Rules are applied in order that they are specified. Not supported for the&quot;,&quot; `surrogate_type` CustomInfoType.&quot;]},&quot;CustomInfoType:exclusion_type&quot;:{&quot;paramName&quot;:&quot;exclusion_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.ExclusionType&quot;,&quot;comments&quot;:[&quot; If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding&quot;,&quot; to be returned. It still can be used for rules matching.&quot;]},&quot;FieldId:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Name describing the field.&quot;]},&quot;PartitionId:project_id&quot;:{&quot;paramName&quot;:&quot;project_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The ID of the project to which the entities belong.&quot;]},&quot;PartitionId:namespace_id&quot;:{&quot;paramName&quot;:&quot;namespace_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If not empty, the ID of the namespace to which the entities belong.&quot;]},&quot;KindExpression:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the kind.&quot;]},&quot;DatastoreOptions:partition_id&quot;:{&quot;paramName&quot;:&quot;partition_id&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PartitionId&quot;,&quot;comments&quot;:[&quot; A partition ID identifies a grouping of entities. The grouping is always&quot;,&quot; by project and namespace, however the namespace ID may be empty.&quot;]},&quot;DatastoreOptions:kind&quot;:{&quot;paramName&quot;:&quot;kind&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.KindExpression&quot;,&quot;comments&quot;:[&quot; The kind to process.&quot;]},&quot;CloudStorageRegexFileSet:bucket_name&quot;:{&quot;paramName&quot;:&quot;bucket_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of a Cloud Storage bucket. Required.&quot;]},&quot;CloudStorageRegexFileSet:include_regex&quot;:{&quot;paramName&quot;:&quot;include_regex&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; A list of regular expressions matching file paths to include. All files in&quot;,&quot; the bucket that match at least one of these regular expressions will be&quot;,&quot; included in the set of files, except for those that also match an item in&quot;,&quot; `exclude_regex`. Leaving this field empty will match all files by default&quot;,&quot; (this is equivalent to including `.*` in the list).&quot;,&quot;&quot;,&quot; Regular expressions use RE2&quot;,&quot; [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found&quot;,&quot; under the google/re2 repository on GitHub.&quot;]},&quot;CloudStorageRegexFileSet:exclude_regex&quot;:{&quot;paramName&quot;:&quot;exclude_regex&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; A list of regular expressions matching file paths to exclude. All files in&quot;,&quot; the bucket that match at least one of these regular expressions will be&quot;,&quot; excluded from the scan.&quot;,&quot;&quot;,&quot; Regular expressions use RE2&quot;,&quot; [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found&quot;,&quot; under the google/re2 repository on GitHub.&quot;]},&quot;CloudStorageOptions:file_set&quot;:{&quot;paramName&quot;:&quot;file_set&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CloudStorageOptions.FileSet&quot;,&quot;comments&quot;:[&quot; The set of one or more files to scan.&quot;]},&quot;CloudStorageOptions:bytes_limit_per_file&quot;:{&quot;paramName&quot;:&quot;bytes_limit_per_file&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Max number of bytes to scan from a file. If a scanned file&#39;s size is bigger&quot;,&quot; than this value then the rest of the bytes are omitted. Only one&quot;,&quot; of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.&quot;]},&quot;CloudStorageOptions:bytes_limit_per_file_percent&quot;:{&quot;paramName&quot;:&quot;bytes_limit_per_file_percent&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Max percentage of bytes to scan from a file. The rest are omitted. The&quot;,&quot; number of bytes scanned is rounded down. Must be between 0 and 100,&quot;,&quot; inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one&quot;,&quot; of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.&quot;]},&quot;CloudStorageOptions:file_types&quot;:{&quot;paramName&quot;:&quot;file_types&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; List of file type groups to include in the scan.&quot;,&quot; If empty, all files are scanned and available data format processors&quot;,&quot; are applied. In addition, the binary content of the selected files&quot;,&quot; is always scanned as well.&quot;]},&quot;CloudStorageOptions:sample_method&quot;:{&quot;paramName&quot;:&quot;sample_method&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod&quot;,&quot;comments&quot;:[]},&quot;CloudStorageOptions:files_limit_percent&quot;:{&quot;paramName&quot;:&quot;files_limit_percent&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Limits the number of files to scan to this percentage of the input FileSet.&quot;,&quot; Number of files scanned is rounded down. Must be between 0 and 100,&quot;,&quot; inclusively. Both 0 and 100 means no limit. Defaults to 0.&quot;]},&quot;CloudStorageFileSet:url&quot;:{&quot;paramName&quot;:&quot;url&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The url, in the format `gs://&lt;bucket&gt;/&lt;path&gt;`. Trailing wildcard in the&quot;,&quot; path is allowed.&quot;]},&quot;CloudStoragePath:path&quot;:{&quot;paramName&quot;:&quot;path&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A url representing a file or path (no wildcards) in Cloud Storage.&quot;,&quot; Example: gs://[BUCKET_NAME]/dictionary.txt&quot;]},&quot;BigQueryOptions:table_reference&quot;:{&quot;paramName&quot;:&quot;table_reference&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Complete BigQuery table reference.&quot;]},&quot;BigQueryOptions:identifying_fields&quot;:{&quot;paramName&quot;:&quot;identifying_fields&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; References to fields uniquely identifying rows within the table.&quot;,&quot; Nested fields in the format, like `person.birthdate.year`, are allowed.&quot;]},&quot;BigQueryOptions:rows_limit&quot;:{&quot;paramName&quot;:&quot;rows_limit&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Max number of rows to scan. If the table has more rows than this value, the&quot;,&quot; rest of the rows are omitted. If not set, or if set to 0, all rows will be&quot;,&quot; scanned. Only one of rows_limit and rows_limit_percent can be specified.&quot;,&quot; Cannot be used in conjunction with TimespanConfig.&quot;]},&quot;BigQueryOptions:rows_limit_percent&quot;:{&quot;paramName&quot;:&quot;rows_limit_percent&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Max percentage of rows to scan. The rest are omitted. The number of rows&quot;,&quot; scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and&quot;,&quot; 100 means no limit. Defaults to 0. Only one of rows_limit and&quot;,&quot; rows_limit_percent can be specified. Cannot be used in conjunction with&quot;,&quot; TimespanConfig.&quot;]},&quot;BigQueryOptions:sample_method&quot;:{&quot;paramName&quot;:&quot;sample_method&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryOptions.SampleMethod&quot;,&quot;comments&quot;:[]},&quot;BigQueryOptions:excluded_fields&quot;:{&quot;paramName&quot;:&quot;excluded_fields&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; References to fields excluded from scanning. This allows you to skip&quot;,&quot; inspection of entire columns which you know have no findings.&quot;]},&quot;StorageConfig:datastore_options&quot;:{&quot;paramName&quot;:&quot;datastore_options&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DatastoreOptions&quot;,&quot;comments&quot;:[&quot; Google Cloud Datastore options specification.&quot;]},&quot;StorageConfig:cloud_storage_options&quot;:{&quot;paramName&quot;:&quot;cloud_storage_options&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CloudStorageOptions&quot;,&quot;comments&quot;:[&quot; Google Cloud Storage options specification.&quot;]},&quot;StorageConfig:big_query_options&quot;:{&quot;paramName&quot;:&quot;big_query_options&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryOptions&quot;,&quot;comments&quot;:[&quot; BigQuery options specification.&quot;]},&quot;StorageConfig:timespan_config&quot;:{&quot;paramName&quot;:&quot;timespan_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StorageConfig.TimespanConfig&quot;,&quot;comments&quot;:[]},&quot;BigQueryKey:table_reference&quot;:{&quot;paramName&quot;:&quot;table_reference&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Complete BigQuery table reference.&quot;]},&quot;BigQueryKey:row_number&quot;:{&quot;paramName&quot;:&quot;row_number&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Absolute number of the row from the beginning of the table at the time&quot;,&quot; of scanning.&quot;]},&quot;DatastoreKey:entity_key&quot;:{&quot;paramName&quot;:&quot;entity_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Key&quot;,&quot;comments&quot;:[&quot; Datastore entity key.&quot;]},&quot;Key:partition_id&quot;:{&quot;paramName&quot;:&quot;partition_id&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PartitionId&quot;,&quot;comments&quot;:[&quot; Entities are partitioned into subsets, currently identified by a project&quot;,&quot; ID and namespace ID.&quot;,&quot; Queries are scoped to a single partition.&quot;]},&quot;Key:path&quot;:{&quot;paramName&quot;:&quot;path&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The entity path.&quot;,&quot; An entity path consists of one or more elements composed of a kind and a&quot;,&quot; string or numerical identifier, which identify entities. The first&quot;,&quot; element identifies a _root entity_, the second element identifies&quot;,&quot; a _child_ of the root entity, the third element identifies a child of the&quot;,&quot; second entity, and so forth. The entities identified by all prefixes of&quot;,&quot; the path are called the element&#39;s _ancestors_.&quot;,&quot;&quot;,&quot; A path can never be empty, and a path can have at most 100 elements.&quot;]},&quot;RecordKey:datastore_key&quot;:{&quot;paramName&quot;:&quot;datastore_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DatastoreKey&quot;,&quot;comments&quot;:[]},&quot;RecordKey:big_query_key&quot;:{&quot;paramName&quot;:&quot;big_query_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryKey&quot;,&quot;comments&quot;:[]},&quot;RecordKey:id_values&quot;:{&quot;paramName&quot;:&quot;id_values&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Values of identifying columns in the given row. Order of values matches&quot;,&quot; the order of field identifiers specified in the scanning request.&quot;]},&quot;BigQueryTable:project_id&quot;:{&quot;paramName&quot;:&quot;project_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The Google Cloud Platform project ID of the project containing the table.&quot;,&quot; If omitted, project ID is inferred from the API call.&quot;]},&quot;BigQueryTable:dataset_id&quot;:{&quot;paramName&quot;:&quot;dataset_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Dataset ID of the table.&quot;]},&quot;BigQueryTable:table_id&quot;:{&quot;paramName&quot;:&quot;table_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Name of the table.&quot;]},&quot;BigQueryField:table&quot;:{&quot;paramName&quot;:&quot;table&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Source table of the field.&quot;]},&quot;BigQueryField:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Designated field in the BigQuery table.&quot;]},&quot;EntityId:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Composite key indicating which field contains the entity identifier.&quot;]},&quot;FieldMask:paths&quot;:{&quot;paramName&quot;:&quot;paths&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; The set of field mask paths.&quot;]},&quot;Any:type_url&quot;:{&quot;paramName&quot;:&quot;type_url&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A URL/resource name that uniquely identifies the type of the serialized&quot;,&quot; protocol buffer message. This string must contain at least&quot;,&quot; one &#92;&quot;/&#92;&quot; character. The last segment of the URL&#39;s path must represent&quot;,&quot; the fully qualified name of the type (as in&quot;,&quot; `path/google.protobuf.Duration`). The name should be in a canonical form&quot;,&quot; (e.g., leading &#92;&quot;.&#92;&quot; is not accepted).&quot;,&quot;&quot;,&quot; In practice, teams usually precompile into the binary all types that they&quot;,&quot; expect it to use in the context of Any. However, for URLs which use the&quot;,&quot; scheme `http`, `https`, or no scheme, one can optionally set up a type&quot;,&quot; server that maps type URLs to message definitions as follows:&quot;,&quot;&quot;,&quot; * If no scheme is provided, `https` is assumed.&quot;,&quot; * An HTTP GET on the URL must yield a [google.protobuf.Type][]&quot;,&quot;   value in binary format, or produce an error.&quot;,&quot; * Applications are allowed to cache lookup results based on the&quot;,&quot;   URL, or have them precompiled into a binary to avoid any&quot;,&quot;   lookup. Therefore, binary compatibility needs to be preserved&quot;,&quot;   on changes to types. (Use versioned type names to manage&quot;,&quot;   breaking changes.)&quot;,&quot;&quot;,&quot; Note: this functionality is not currently available in the official&quot;,&quot; protobuf release, and it is not used for type URLs beginning with&quot;,&quot; type.googleapis.com. As of May 2023, there are no widely used type server&quot;,&quot; implementations and no plans to implement one.&quot;,&quot;&quot;,&quot; Schemes other than `http`, `https` (or the empty scheme) might be&quot;,&quot; used with implementation specific semantics.&quot;,&quot;&quot;]},&quot;Any:value&quot;:{&quot;paramName&quot;:&quot;value&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; Must be a valid serialized protocol buffer of the above specified type.&quot;]},&quot;Status:code&quot;:{&quot;paramName&quot;:&quot;code&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The status code, which should be an enum value of&quot;,&quot; [google.rpc.Code][google.rpc.Code].&quot;]},&quot;Status:message&quot;:{&quot;paramName&quot;:&quot;message&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A developer-facing error message, which should be in English. Any&quot;,&quot; user-facing error message should be localized and sent in the&quot;,&quot; [google.rpc.Status.details][google.rpc.Status.details] field, or localized&quot;,&quot; by the client.&quot;]},&quot;Status:details&quot;:{&quot;paramName&quot;:&quot;details&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of messages that carry the error details.  There is a common set of&quot;,&quot; message types for APIs to use.&quot;]},&quot;Date:year&quot;:{&quot;paramName&quot;:&quot;year&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Year of the date. Must be from 1 to 9999, or 0 to specify a date without&quot;,&quot; a year.&quot;]},&quot;Date:month&quot;:{&quot;paramName&quot;:&quot;month&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Month of a year. Must be from 1 to 12, or 0 to specify a year without a&quot;,&quot; month and day.&quot;]},&quot;Date:day&quot;:{&quot;paramName&quot;:&quot;day&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Day of a month. Must be from 1 to 31 and valid for the year and month, or 0&quot;,&quot; to specify a year by itself or a year and month where the day isn&#39;t&quot;,&quot; significant.&quot;]},&quot;TimeOfDay:hours&quot;:{&quot;paramName&quot;:&quot;hours&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Hours of day in 24 hour format. Should be from 0 to 23. An API may choose&quot;,&quot; to allow the value &#92;&quot;24:00:00&#92;&quot; for scenarios like business closing time.&quot;]},&quot;TimeOfDay:minutes&quot;:{&quot;paramName&quot;:&quot;minutes&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Minutes of hour of day. Must be from 0 to 59.&quot;]},&quot;TimeOfDay:seconds&quot;:{&quot;paramName&quot;:&quot;seconds&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Seconds of minutes of the time. Must normally be from 0 to 59. An API may&quot;,&quot; allow the value 60 if it allows leap-seconds.&quot;]},&quot;TimeOfDay:nanos&quot;:{&quot;paramName&quot;:&quot;nanos&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.&quot;]},&quot;DlpService&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; The Cloud Data Loss Prevention (DLP) API is a service that allows clients&quot;,&quot; to detect the presence of Personally Identifiable Information (PII) and other&quot;,&quot; privacy-sensitive data in user-supplied, unstructured data streams, like text&quot;,&quot; blocks or images.&quot;,&quot; The service also includes methods for sensitive data redaction and&quot;,&quot; scheduling of data scans on Google Cloud Platform based data sets.&quot;,&quot;&quot;,&quot; To learn more about concepts and find how-to guides see&quot;,&quot; https://cloud.google.com/dlp/docs/.&quot;]},&quot;DlpService:InspectContent&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Finds potentially sensitive info in content.&quot;,&quot; This method has limits on input size, processing time, and output size.&quot;,&quot;&quot;,&quot; When no InfoTypes or CustomInfoTypes are specified in this request, the&quot;,&quot; system will automatically choose what detectors to run. By default this may&quot;,&quot; be all types, but may change over time as detectors are updated.&quot;,&quot;&quot;,&quot; For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images&quot;,&quot; and https://cloud.google.com/dlp/docs/inspecting-text,&quot;,&quot;&quot;]},&quot;DlpService:RedactImage&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Redacts potentially sensitive info from an image.&quot;,&quot; This method has limits on input size, processing time, and output size.&quot;,&quot; See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to&quot;,&quot; learn more.&quot;,&quot;&quot;,&quot; When no InfoTypes or CustomInfoTypes are specified in this request, the&quot;,&quot; system will automatically choose what detectors to run. By default this may&quot;,&quot; be all types, but may change over time as detectors are updated.&quot;,&quot;&quot;]},&quot;DlpService:DeidentifyContent&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; De-identifies potentially sensitive info from a ContentItem.&quot;,&quot; This method has limits on input size and output size.&quot;,&quot; See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to&quot;,&quot; learn more.&quot;,&quot;&quot;,&quot; When no InfoTypes or CustomInfoTypes are specified in this request, the&quot;,&quot; system will automatically choose what detectors to run. By default this may&quot;,&quot; be all types, but may change over time as detectors are updated.&quot;,&quot;&quot;]},&quot;DlpService:ReidentifyContent&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Re-identifies content that has been de-identified.&quot;,&quot; See&quot;,&quot; https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example&quot;,&quot; to learn more.&quot;,&quot;&quot;]},&quot;DlpService:ListInfoTypes&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Returns a list of the sensitive information types that the DLP API&quot;,&quot; supports. See https://cloud.google.com/dlp/docs/infotypes-reference to&quot;,&quot; learn more.&quot;,&quot;&quot;]},&quot;DlpService:CreateInspectTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates an InspectTemplate for re-using frequently used configuration&quot;,&quot; for inspecting content, images, and storage.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates to learn more.&quot;,&quot;&quot;]},&quot;DlpService:UpdateInspectTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates the InspectTemplate.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates to learn more.&quot;,&quot;&quot;]},&quot;DlpService:GetInspectTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets an InspectTemplate.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates to learn more.&quot;,&quot;&quot;]},&quot;DlpService:ListInspectTemplates&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists InspectTemplates.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates to learn more.&quot;,&quot;&quot;]},&quot;DlpService:DeleteInspectTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes an InspectTemplate.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates to learn more.&quot;,&quot;&quot;]},&quot;DlpService:CreateDeidentifyTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a DeidentifyTemplate for re-using frequently used configuration&quot;,&quot; for de-identifying content, images, and storage.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates-deid to learn&quot;,&quot; more.&quot;,&quot;&quot;]},&quot;DlpService:UpdateDeidentifyTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates the DeidentifyTemplate.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates-deid to learn&quot;,&quot; more.&quot;,&quot;&quot;]},&quot;DlpService:GetDeidentifyTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets a DeidentifyTemplate.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates-deid to learn&quot;,&quot; more.&quot;,&quot;&quot;]},&quot;DlpService:ListDeidentifyTemplates&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists DeidentifyTemplates.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates-deid to learn&quot;,&quot; more.&quot;,&quot;&quot;]},&quot;DlpService:DeleteDeidentifyTemplate&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a DeidentifyTemplate.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-templates-deid to learn&quot;,&quot; more.&quot;,&quot;&quot;]},&quot;DlpService:CreateJobTrigger&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a job trigger to run DLP actions such as scanning storage for&quot;,&quot; sensitive information on a set schedule.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.&quot;,&quot;&quot;]},&quot;DlpService:UpdateJobTrigger&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates a job trigger.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.&quot;,&quot;&quot;]},&quot;DlpService:GetJobTrigger&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets a job trigger.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.&quot;,&quot;&quot;]},&quot;DlpService:ListJobTriggers&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists job triggers.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.&quot;,&quot;&quot;]},&quot;DlpService:DeleteJobTrigger&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a job trigger.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.&quot;,&quot;&quot;]},&quot;DlpService:ActivateJobTrigger&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Activate a job trigger. Causes the immediate execute of a trigger&quot;,&quot; instead of waiting on the trigger event to occur.&quot;,&quot;&quot;]},&quot;DlpService:CreateDlpJob&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a new job to inspect storage or calculate risk metrics.&quot;,&quot; See https://cloud.google.com/dlp/docs/inspecting-storage and&quot;,&quot; https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.&quot;,&quot;&quot;,&quot; When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the&quot;,&quot; system will automatically choose what detectors to run. By default this may&quot;,&quot; be all types, but may change over time as detectors are updated.&quot;,&quot;&quot;]},&quot;DlpService:ListDlpJobs&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists DlpJobs that match the specified filter in the request.&quot;,&quot; See https://cloud.google.com/dlp/docs/inspecting-storage and&quot;,&quot; https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.&quot;,&quot;&quot;]},&quot;DlpService:GetDlpJob&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets the latest state of a long-running DlpJob.&quot;,&quot; See https://cloud.google.com/dlp/docs/inspecting-storage and&quot;,&quot; https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.&quot;,&quot;&quot;]},&quot;DlpService:DeleteDlpJob&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a long-running DlpJob. This method indicates that the client is&quot;,&quot; no longer interested in the DlpJob result. The job will be cancelled if&quot;,&quot; possible.&quot;,&quot; See https://cloud.google.com/dlp/docs/inspecting-storage and&quot;,&quot; https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.&quot;,&quot;&quot;]},&quot;DlpService:CancelDlpJob&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Starts asynchronous cancellation on a long-running DlpJob. The server&quot;,&quot; makes a best effort to cancel the DlpJob, but success is not&quot;,&quot; guaranteed.&quot;,&quot; See https://cloud.google.com/dlp/docs/inspecting-storage and&quot;,&quot; https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.&quot;,&quot;&quot;]},&quot;DlpService:CreateStoredInfoType&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a pre-built stored infoType to be used for inspection.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-stored-infotypes to&quot;,&quot; learn more.&quot;,&quot;&quot;]},&quot;DlpService:UpdateStoredInfoType&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates the stored infoType by creating a new version. The existing version&quot;,&quot; will continue to be used until the new version is ready.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-stored-infotypes to&quot;,&quot; learn more.&quot;,&quot;&quot;]},&quot;DlpService:GetStoredInfoType&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets a stored infoType.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-stored-infotypes to&quot;,&quot; learn more.&quot;,&quot;&quot;]},&quot;DlpService:ListStoredInfoTypes&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists stored infoTypes.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-stored-infotypes to&quot;,&quot; learn more.&quot;,&quot;&quot;]},&quot;DlpService:DeleteStoredInfoType&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a stored infoType.&quot;,&quot; See https://cloud.google.com/dlp/docs/creating-stored-infotypes to&quot;,&quot; learn more.&quot;,&quot;&quot;]},&quot;ExcludeInfoTypes:info_types&quot;:{&quot;paramName&quot;:&quot;info_types&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; InfoType list in ExclusionRule rule drops a finding when it overlaps or&quot;,&quot; contained within with a finding of an infoType from this list. For&quot;,&quot; example, for `InspectionRuleSet.info_types` containing &#92;&quot;PHONE_NUMBER&#92;&quot;` and&quot;,&quot; `exclusion_rule` containing `exclude_info_types.info_types` with&quot;,&quot; &#92;&quot;EMAIL_ADDRESS&#92;&quot; the phone number findings are dropped if they overlap&quot;,&quot; with EMAIL_ADDRESS finding.&quot;,&quot; That leads to &#92;&quot;555-222-2222@example.org&#92;&quot; to generate only a single&quot;,&quot; finding, namely email address.&quot;]},&quot;ExclusionRule:dictionary&quot;:{&quot;paramName&quot;:&quot;dictionary&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.Dictionary&quot;,&quot;comments&quot;:[&quot; Dictionary which defines the rule.&quot;]},&quot;ExclusionRule:regex&quot;:{&quot;paramName&quot;:&quot;regex&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.Regex&quot;,&quot;comments&quot;:[&quot; Regular expression which defines the rule.&quot;]},&quot;ExclusionRule:exclude_info_types&quot;:{&quot;paramName&quot;:&quot;exclude_info_types&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ExcludeInfoTypes&quot;,&quot;comments&quot;:[&quot; Set of infoTypes for which findings would affect this rule.&quot;]},&quot;ExclusionRule:matching_type&quot;:{&quot;paramName&quot;:&quot;matching_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.MatchingType&quot;,&quot;comments&quot;:[&quot; How the rule is applied, see MatchingType documentation for details.&quot;]},&quot;InspectionRule:hotword_rule&quot;:{&quot;paramName&quot;:&quot;hotword_rule&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule&quot;,&quot;comments&quot;:[&quot; Hotword-based detection rule.&quot;]},&quot;InspectionRule:exclusion_rule&quot;:{&quot;paramName&quot;:&quot;exclusion_rule&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ExclusionRule&quot;,&quot;comments&quot;:[&quot; Exclusion rule.&quot;]},&quot;InspectionRuleSet:info_types&quot;:{&quot;paramName&quot;:&quot;info_types&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of infoTypes this rule set is applied to.&quot;]},&quot;InspectionRuleSet:rules&quot;:{&quot;paramName&quot;:&quot;rules&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Set of rules to be applied to infoTypes. The rules are applied in order.&quot;]},&quot;InspectConfig:info_types&quot;:{&quot;paramName&quot;:&quot;info_types&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Restricts what info_types to look for. The values must correspond to&quot;,&quot; InfoType values returned by ListInfoTypes or listed at&quot;,&quot; https://cloud.google.com/dlp/docs/infotypes-reference.&quot;,&quot;&quot;,&quot; When no InfoTypes or CustomInfoTypes are specified in a request, the&quot;,&quot; system may automatically choose what detectors to run. By default this may&quot;,&quot; be all types, but may change over time as detectors are updated.&quot;,&quot;&quot;,&quot; If you need precise control and predictability as to what detectors are&quot;,&quot; run you should specify specific InfoTypes listed in the reference,&quot;,&quot; otherwise a default list will be used, which may change over time.&quot;]},&quot;InspectConfig:min_likelihood&quot;:{&quot;paramName&quot;:&quot;min_likelihood&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Likelihood&quot;,&quot;comments&quot;:[&quot; Only returns findings equal or above this threshold. The default is&quot;,&quot; POSSIBLE.&quot;,&quot; See https://cloud.google.com/dlp/docs/likelihood to learn more.&quot;]},&quot;InspectConfig:limits&quot;:{&quot;paramName&quot;:&quot;limits&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig.FindingLimits&quot;,&quot;comments&quot;:[&quot; Configuration to control the number of findings returned.&quot;]},&quot;InspectConfig:include_quote&quot;:{&quot;paramName&quot;:&quot;include_quote&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; When true, a contextual quote from the data that triggered a finding is&quot;,&quot; included in the response; see Finding.quote.&quot;]},&quot;InspectConfig:exclude_info_types&quot;:{&quot;paramName&quot;:&quot;exclude_info_types&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; When true, excludes type information of the findings.&quot;]},&quot;InspectConfig:custom_info_types&quot;:{&quot;paramName&quot;:&quot;custom_info_types&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; CustomInfoTypes provided by the user. See&quot;,&quot; https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.&quot;]},&quot;InspectConfig:content_options&quot;:{&quot;paramName&quot;:&quot;content_options&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; List of options defining data content to scan.&quot;,&quot; If empty, text, images, and other content will be included.&quot;]},&quot;InspectConfig:rule_set&quot;:{&quot;paramName&quot;:&quot;rule_set&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Set of rules to apply to the findings for this InspectConfig.&quot;,&quot; Exclusion rules, contained in the set are executed in the end, other&quot;,&quot; rules are executed in the order they are specified for each info type.&quot;]},&quot;ByteContentItem:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ByteContentItem.BytesType&quot;,&quot;comments&quot;:[&quot; The type of data stored in the bytes string. Default will be TEXT_UTF8.&quot;]},&quot;ByteContentItem:data&quot;:{&quot;paramName&quot;:&quot;data&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; Content data to inspect or redact.&quot;]},&quot;ContentItem:value&quot;:{&quot;paramName&quot;:&quot;value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; String data to inspect or redact.&quot;]},&quot;ContentItem:table&quot;:{&quot;paramName&quot;:&quot;table&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Table&quot;,&quot;comments&quot;:[&quot; Structured content for inspection. See&quot;,&quot; https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to&quot;,&quot; learn more.&quot;]},&quot;ContentItem:byte_item&quot;:{&quot;paramName&quot;:&quot;byte_item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ByteContentItem&quot;,&quot;comments&quot;:[&quot; Content data to inspect or redact. Replaces `type` and `data`.&quot;]},&quot;Table:headers&quot;:{&quot;paramName&quot;:&quot;headers&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Headers of the table.&quot;]},&quot;Table:rows&quot;:{&quot;paramName&quot;:&quot;rows&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Rows of the table.&quot;]},&quot;InspectResult:findings&quot;:{&quot;paramName&quot;:&quot;findings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of findings for an item.&quot;]},&quot;InspectResult:findings_truncated&quot;:{&quot;paramName&quot;:&quot;findings_truncated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If true, then this item might have more findings than were returned,&quot;,&quot; and the findings returned are an arbitrary subset of all findings.&quot;,&quot; The findings list might be truncated because the input items were too&quot;,&quot; large, or because the server reached the maximum amount of resources&quot;,&quot; allowed for a single API call. For best results, divide the input into&quot;,&quot; smaller batches.&quot;]},&quot;Finding:quote&quot;:{&quot;paramName&quot;:&quot;quote&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The content that was found. Even if the content is not textual, it&quot;,&quot; may be converted to a textual representation here.&quot;,&quot; Provided if `include_quote` is true and the finding is&quot;,&quot; less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes&quot;,&quot; in length, the quote may be omitted.&quot;]},&quot;Finding:info_type&quot;:{&quot;paramName&quot;:&quot;info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; The type of content that might have been found.&quot;,&quot; Provided if `excluded_types` is false.&quot;]},&quot;Finding:likelihood&quot;:{&quot;paramName&quot;:&quot;likelihood&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Likelihood&quot;,&quot;comments&quot;:[&quot; Confidence of how likely it is that the `info_type` is correct.&quot;]},&quot;Finding:location&quot;:{&quot;paramName&quot;:&quot;location&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Location&quot;,&quot;comments&quot;:[&quot; Where the content was found.&quot;]},&quot;Finding:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Timestamp when finding was detected.&quot;]},&quot;Finding:quote_info&quot;:{&quot;paramName&quot;:&quot;quote_info&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.QuoteInfo&quot;,&quot;comments&quot;:[&quot; Contains data parsed from quotes. Only populated if include_quote was set&quot;,&quot; to true and a supported infoType was requested. Currently supported&quot;,&quot; infoTypes: DATE, DATE_OF_BIRTH and TIME.&quot;]},&quot;Location:byte_range&quot;:{&quot;paramName&quot;:&quot;byte_range&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Range&quot;,&quot;comments&quot;:[&quot; Zero-based byte offsets delimiting the finding.&quot;,&quot; These are relative to the finding&#39;s containing element.&quot;,&quot; Note that when the content is not textual, this references&quot;,&quot; the UTF-8 encoded textual representation of the content.&quot;,&quot; Omitted if content is an image.&quot;]},&quot;Location:codepoint_range&quot;:{&quot;paramName&quot;:&quot;codepoint_range&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Range&quot;,&quot;comments&quot;:[&quot; Unicode character offsets delimiting the finding.&quot;,&quot; These are relative to the finding&#39;s containing element.&quot;,&quot; Provided when the content is text.&quot;]},&quot;Location:content_locations&quot;:{&quot;paramName&quot;:&quot;content_locations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of nested objects pointing to the precise location of the finding&quot;,&quot; within the file or record.&quot;]},&quot;ContentLocation:container_name&quot;:{&quot;paramName&quot;:&quot;container_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Name of the container where the finding is located.&quot;,&quot; The top level name is the source file name or table name. Names of some&quot;,&quot; common storage containers are formatted as follows:&quot;,&quot;&quot;,&quot; * BigQuery tables:  `{project_id}:{dataset_id}.{table_id}`&quot;,&quot; * Cloud Storage files: `gs://{bucket}/{path}`&quot;,&quot; * Datastore namespace: {namespace}&quot;,&quot;&quot;,&quot; Nested names could be absent if the embedded object has no string&quot;,&quot; identifier (for an example an image contained within a document).&quot;]},&quot;ContentLocation:record_location&quot;:{&quot;paramName&quot;:&quot;record_location&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordLocation&quot;,&quot;comments&quot;:[&quot; Location within a row or record of a database table.&quot;]},&quot;ContentLocation:image_location&quot;:{&quot;paramName&quot;:&quot;image_location&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ImageLocation&quot;,&quot;comments&quot;:[&quot; Location within an image&#39;s pixels.&quot;]},&quot;ContentLocation:document_location&quot;:{&quot;paramName&quot;:&quot;document_location&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DocumentLocation&quot;,&quot;comments&quot;:[&quot; Location data for document files.&quot;]},&quot;ContentLocation:container_timestamp&quot;:{&quot;paramName&quot;:&quot;container_timestamp&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Findings container modification timestamp, if applicable.&quot;,&quot; For Google Cloud Storage contains last file modification timestamp.&quot;,&quot; For BigQuery table contains last_modified_time property.&quot;,&quot; For Datastore - not populated.&quot;]},&quot;ContentLocation:container_version&quot;:{&quot;paramName&quot;:&quot;container_version&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Findings container version, if available&quot;,&quot; (&#92;&quot;generation&#92;&quot; for Google Cloud Storage).&quot;]},&quot;DocumentLocation:file_offset&quot;:{&quot;paramName&quot;:&quot;file_offset&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Offset of the line, from the beginning of the file, where the finding&quot;,&quot; is located.&quot;]},&quot;RecordLocation:record_key&quot;:{&quot;paramName&quot;:&quot;record_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordKey&quot;,&quot;comments&quot;:[&quot; Key of the finding.&quot;]},&quot;RecordLocation:field_id&quot;:{&quot;paramName&quot;:&quot;field_id&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Field id of the field containing the finding.&quot;]},&quot;RecordLocation:table_location&quot;:{&quot;paramName&quot;:&quot;table_location&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.TableLocation&quot;,&quot;comments&quot;:[&quot; Location within a `ContentItem.Table`.&quot;]},&quot;TableLocation:row_index&quot;:{&quot;paramName&quot;:&quot;row_index&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; The zero-based index of the row where the finding is located.&quot;]},&quot;Range:start&quot;:{&quot;paramName&quot;:&quot;start&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Index of the first character of the range (inclusive).&quot;]},&quot;Range:end&quot;:{&quot;paramName&quot;:&quot;end&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Index of the last character of the range (exclusive).&quot;]},&quot;ImageLocation:bounding_boxes&quot;:{&quot;paramName&quot;:&quot;bounding_boxes&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Bounding boxes locating the pixels within the image containing the finding.&quot;]},&quot;BoundingBox:top&quot;:{&quot;paramName&quot;:&quot;top&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Top coordinate of the bounding box. (0,0) is upper left.&quot;]},&quot;BoundingBox:left&quot;:{&quot;paramName&quot;:&quot;left&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Left coordinate of the bounding box. (0,0) is upper left.&quot;]},&quot;BoundingBox:width&quot;:{&quot;paramName&quot;:&quot;width&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Width of the bounding box in pixels.&quot;]},&quot;BoundingBox:height&quot;:{&quot;paramName&quot;:&quot;height&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Height of the bounding box in pixels.&quot;]},&quot;RedactImageRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The parent resource name, for example projects/my-project-id.&quot;]},&quot;RedactImageRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to process the request. Reserved for future&quot;,&quot; extensions.&quot;]},&quot;RedactImageRequest:inspect_config&quot;:{&quot;paramName&quot;:&quot;inspect_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig&quot;,&quot;comments&quot;:[&quot; Configuration for the inspector.&quot;]},&quot;RedactImageRequest:image_redaction_configs&quot;:{&quot;paramName&quot;:&quot;image_redaction_configs&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The configuration for specifying what content to redact from images.&quot;]},&quot;RedactImageRequest:include_findings&quot;:{&quot;paramName&quot;:&quot;include_findings&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Whether the response should include findings along with the redacted&quot;,&quot; image.&quot;]},&quot;RedactImageRequest:byte_item&quot;:{&quot;paramName&quot;:&quot;byte_item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ByteContentItem&quot;,&quot;comments&quot;:[&quot; The content must be PNG, JPEG, SVG or BMP.&quot;]},&quot;Color:red&quot;:{&quot;paramName&quot;:&quot;red&quot;,&quot;paramType&quot;:&quot;TYPE_FLOAT&quot;,&quot;comments&quot;:[&quot; The amount of red in the color as a value in the interval [0, 1].&quot;]},&quot;Color:green&quot;:{&quot;paramName&quot;:&quot;green&quot;,&quot;paramType&quot;:&quot;TYPE_FLOAT&quot;,&quot;comments&quot;:[&quot; The amount of green in the color as a value in the interval [0, 1].&quot;]},&quot;Color:blue&quot;:{&quot;paramName&quot;:&quot;blue&quot;,&quot;paramType&quot;:&quot;TYPE_FLOAT&quot;,&quot;comments&quot;:[&quot; The amount of blue in the color as a value in the interval [0, 1].&quot;]},&quot;RedactImageResponse:redacted_image&quot;:{&quot;paramName&quot;:&quot;redacted_image&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; The redacted image. The type will be the same as the original image.&quot;]},&quot;RedactImageResponse:extracted_text&quot;:{&quot;paramName&quot;:&quot;extracted_text&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If an image was being inspected and the InspectConfig&#39;s include_quote was&quot;,&quot; set to true, then this field will include all text, if any, that was found&quot;,&quot; in the image.&quot;]},&quot;RedactImageResponse:inspect_result&quot;:{&quot;paramName&quot;:&quot;inspect_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectResult&quot;,&quot;comments&quot;:[&quot; The findings. Populated when include_findings in the request is true.&quot;]},&quot;DeidentifyContentRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The parent resource name, for example projects/my-project-id.&quot;]},&quot;DeidentifyContentRequest:deidentify_config&quot;:{&quot;paramName&quot;:&quot;deidentify_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DeidentifyConfig&quot;,&quot;comments&quot;:[&quot; Configuration for the de-identification of the content item.&quot;,&quot; Items specified here will override the template referenced by the&quot;,&quot; deidentify_template_name argument.&quot;]},&quot;DeidentifyContentRequest:inspect_config&quot;:{&quot;paramName&quot;:&quot;inspect_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig&quot;,&quot;comments&quot;:[&quot; Configuration for the inspector.&quot;,&quot; Items specified here will override the template referenced by the&quot;,&quot; inspect_template_name argument.&quot;]},&quot;DeidentifyContentRequest:item&quot;:{&quot;paramName&quot;:&quot;item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ContentItem&quot;,&quot;comments&quot;:[&quot; The item to de-identify. Will be treated as text.&quot;]},&quot;DeidentifyContentRequest:inspect_template_name&quot;:{&quot;paramName&quot;:&quot;inspect_template_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Template to use. Any configuration directly specified in&quot;,&quot; inspect_config will override those set in the template. Singular fields&quot;,&quot; that are set in this request will replace their corresponding fields in the&quot;,&quot; template. Repeated fields are appended. Singular sub-messages and groups&quot;,&quot; are recursively merged.&quot;]},&quot;DeidentifyContentRequest:deidentify_template_name&quot;:{&quot;paramName&quot;:&quot;deidentify_template_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Template to use. Any configuration directly specified in&quot;,&quot; deidentify_config will override those set in the template. Singular fields&quot;,&quot; that are set in this request will replace their corresponding fields in the&quot;,&quot; template. Repeated fields are appended. Singular sub-messages and groups&quot;,&quot; are recursively merged.&quot;]},&quot;DeidentifyContentRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to process de-identification. Reserved for future&quot;,&quot; extensions.&quot;]},&quot;DeidentifyContentResponse:item&quot;:{&quot;paramName&quot;:&quot;item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ContentItem&quot;,&quot;comments&quot;:[&quot; The de-identified item.&quot;]},&quot;DeidentifyContentResponse:overview&quot;:{&quot;paramName&quot;:&quot;overview&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.TransformationOverview&quot;,&quot;comments&quot;:[&quot; An overview of the changes that were made on the `item`.&quot;]},&quot;ReidentifyContentRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name.&quot;],&quot;fieldBehavior&quot;:2},&quot;ReidentifyContentRequest:reidentify_config&quot;:{&quot;paramName&quot;:&quot;reidentify_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DeidentifyConfig&quot;,&quot;comments&quot;:[&quot; Configuration for the re-identification of the content item.&quot;,&quot; This field shares the same proto message type that is used for&quot;,&quot; de-identification, however its usage here is for the reversal of the&quot;,&quot; previous de-identification. Re-identification is performed by examining&quot;,&quot; the transformations used to de-identify the items and executing the&quot;,&quot; reverse. This requires that only reversible transformations&quot;,&quot; be provided here. The reversible transformations are:&quot;,&quot;&quot;,&quot;  - `CryptoDeterministicConfig`&quot;,&quot;  - `CryptoReplaceFfxFpeConfig`&quot;]},&quot;ReidentifyContentRequest:inspect_config&quot;:{&quot;paramName&quot;:&quot;inspect_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig&quot;,&quot;comments&quot;:[&quot; Configuration for the inspector.&quot;]},&quot;ReidentifyContentRequest:item&quot;:{&quot;paramName&quot;:&quot;item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ContentItem&quot;,&quot;comments&quot;:[&quot; The item to re-identify. Will be treated as text.&quot;]},&quot;ReidentifyContentRequest:inspect_template_name&quot;:{&quot;paramName&quot;:&quot;inspect_template_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Template to use. Any configuration directly specified in&quot;,&quot; `inspect_config` will override those set in the template. Singular fields&quot;,&quot; that are set in this request will replace their corresponding fields in the&quot;,&quot; template. Repeated fields are appended. Singular sub-messages and groups&quot;,&quot; are recursively merged.&quot;]},&quot;ReidentifyContentRequest:reidentify_template_name&quot;:{&quot;paramName&quot;:&quot;reidentify_template_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Template to use. References an instance of `DeidentifyTemplate`.&quot;,&quot; Any configuration directly specified in `reidentify_config` or&quot;,&quot; `inspect_config` will override those set in the template. Singular fields&quot;,&quot; that are set in this request will replace their corresponding fields in the&quot;,&quot; template. Repeated fields are appended. Singular sub-messages and groups&quot;,&quot; are recursively merged.&quot;]},&quot;ReidentifyContentRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to process content reidentification.  Reserved for&quot;,&quot; future extensions.&quot;]},&quot;ReidentifyContentResponse:item&quot;:{&quot;paramName&quot;:&quot;item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ContentItem&quot;,&quot;comments&quot;:[&quot; The re-identified item.&quot;]},&quot;ReidentifyContentResponse:overview&quot;:{&quot;paramName&quot;:&quot;overview&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.TransformationOverview&quot;,&quot;comments&quot;:[&quot; An overview of the changes that were made to the `item`.&quot;]},&quot;InspectContentRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The parent resource name, for example projects/my-project-id.&quot;]},&quot;InspectContentRequest:inspect_config&quot;:{&quot;paramName&quot;:&quot;inspect_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig&quot;,&quot;comments&quot;:[&quot; Configuration for the inspector. What specified here will override&quot;,&quot; the template referenced by the inspect_template_name argument.&quot;]},&quot;InspectContentRequest:item&quot;:{&quot;paramName&quot;:&quot;item&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ContentItem&quot;,&quot;comments&quot;:[&quot; The item to inspect.&quot;]},&quot;InspectContentRequest:inspect_template_name&quot;:{&quot;paramName&quot;:&quot;inspect_template_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Template to use. Any configuration directly specified in&quot;,&quot; inspect_config will override those set in the template. Singular fields&quot;,&quot; that are set in this request will replace their corresponding fields in the&quot;,&quot; template. Repeated fields are appended. Singular sub-messages and groups&quot;,&quot; are recursively merged.&quot;]},&quot;InspectContentRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to process content inspection. Reserved for future&quot;,&quot; extensions.&quot;]},&quot;InspectContentResponse:result&quot;:{&quot;paramName&quot;:&quot;result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectResult&quot;,&quot;comments&quot;:[&quot; The findings.&quot;]},&quot;OutputStorageConfig:table&quot;:{&quot;paramName&quot;:&quot;table&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Store findings in an existing table or a new table in an existing&quot;,&quot; dataset. If table_id is not set a new one will be generated&quot;,&quot; for you with the following format:&quot;,&quot; dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for&quot;,&quot; generating the date details.&quot;,&quot;&quot;,&quot; For Inspect, each column in an existing output table must have the same&quot;,&quot; name, type, and mode of a field in the `Finding` object.&quot;,&quot;&quot;,&quot; For Risk, an existing output table should be the output of a previous&quot;,&quot; Risk analysis job run on the same source table, with the same privacy&quot;,&quot; metric and quasi-identifiers. Risk jobs that analyze the same table but&quot;,&quot; compute a different privacy metric, or use different sets of&quot;,&quot; quasi-identifiers, cannot store their results in the same table.&quot;]},&quot;OutputStorageConfig:output_schema&quot;:{&quot;paramName&quot;:&quot;output_schema&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.OutputStorageConfig.OutputSchema&quot;,&quot;comments&quot;:[&quot; Schema used for writing the findings for Inspect jobs. This field is only&quot;,&quot; used for Inspect and must be unspecified for Risk jobs. Columns are derived&quot;,&quot; from the `Finding` object. If appending to an existing table, any columns&quot;,&quot; from the predefined schema that are missing will be added. No columns in&quot;,&quot; the existing table will be deleted.&quot;,&quot;&quot;,&quot; If unspecified, then all available columns will be used for a new table or&quot;,&quot; an (existing) table with no schema, and no changes will be made to an&quot;,&quot; existing table that has a schema.&quot;]},&quot;InfoTypeStats:info_type&quot;:{&quot;paramName&quot;:&quot;info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; The type of finding this stat is for.&quot;]},&quot;InfoTypeStats:count&quot;:{&quot;paramName&quot;:&quot;count&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Number of findings for this infoType.&quot;]},&quot;InspectDataSourceDetails:requested_options&quot;:{&quot;paramName&quot;:&quot;requested_options&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectDataSourceDetails.RequestedOptions&quot;,&quot;comments&quot;:[&quot; The configuration used for this job.&quot;]},&quot;InspectDataSourceDetails:result&quot;:{&quot;paramName&quot;:&quot;result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectDataSourceDetails.Result&quot;,&quot;comments&quot;:[&quot; A summary of the outcome of this inspect job.&quot;]},&quot;InfoTypeDescription:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Internal name of the infoType.&quot;]},&quot;InfoTypeDescription:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Human readable form of the infoType name.&quot;]},&quot;InfoTypeDescription:supported_by&quot;:{&quot;paramName&quot;:&quot;supported_by&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; Which parts of the API supports this InfoType.&quot;]},&quot;InfoTypeDescription:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Description of the infotype. Translated when language is provided in the&quot;,&quot; request.&quot;]},&quot;ListInfoTypesRequest:language_code&quot;:{&quot;paramName&quot;:&quot;language_code&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; BCP-47 language code for localized infoType friendly&quot;,&quot; names. If omitted, or if localized strings are not available,&quot;,&quot; en-US strings will be returned.&quot;]},&quot;ListInfoTypesRequest:filter&quot;:{&quot;paramName&quot;:&quot;filter&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; filter to only return infoTypes supported by certain parts of the&quot;,&quot; API. Defaults to supported_by=INSPECT.&quot;]},&quot;ListInfoTypesRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to list info types. Reserved for future&quot;,&quot; extensions.&quot;]},&quot;ListInfoTypesResponse:info_types&quot;:{&quot;paramName&quot;:&quot;info_types&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Set of sensitive infoTypes.&quot;]},&quot;RiskAnalysisJobConfig:privacy_metric&quot;:{&quot;paramName&quot;:&quot;privacy_metric&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric&quot;,&quot;comments&quot;:[&quot; Privacy metric to compute.&quot;]},&quot;RiskAnalysisJobConfig:source_table&quot;:{&quot;paramName&quot;:&quot;source_table&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Input dataset to compute metrics over.&quot;]},&quot;RiskAnalysisJobConfig:actions&quot;:{&quot;paramName&quot;:&quot;actions&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Actions to execute at the completion of the job. Are executed in the order&quot;,&quot; provided.&quot;]},&quot;QuasiId:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Required. Identifies the column.&quot;],&quot;fieldBehavior&quot;:2},&quot;QuasiId:info_type&quot;:{&quot;paramName&quot;:&quot;info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; A column can be tagged with a InfoType to use the relevant public&quot;,&quot; dataset as a statistical model of population, if available. We&quot;,&quot; currently support US ZIP codes, region codes, ages and genders.&quot;,&quot; To programmatically obtain the list of supported InfoTypes, use&quot;,&quot; ListInfoTypes with the supported_by=RISK_ANALYSIS filter.&quot;]},&quot;QuasiId:custom_tag&quot;:{&quot;paramName&quot;:&quot;custom_tag&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A column can be tagged with a custom tag. In this case, the user must&quot;,&quot; indicate an auxiliary table that contains statistical information on&quot;,&quot; the possible values of this column (below).&quot;]},&quot;QuasiId:inferred&quot;:{&quot;paramName&quot;:&quot;inferred&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Empty&quot;,&quot;comments&quot;:[&quot; If no semantic tag is indicated, we infer the statistical model from&quot;,&quot; the distribution of values in the input data&quot;]},&quot;StatisticalTable:table&quot;:{&quot;paramName&quot;:&quot;table&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Required. Auxiliary table location.&quot;],&quot;fieldBehavior&quot;:2},&quot;StatisticalTable:quasi_ids&quot;:{&quot;paramName&quot;:&quot;quasi_ids&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Required. Quasi-identifier columns.&quot;],&quot;fieldBehavior&quot;:2},&quot;StatisticalTable:relative_frequency&quot;:{&quot;paramName&quot;:&quot;relative_frequency&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Required. The relative frequency column must contain a floating-point number&quot;,&quot; between 0 and 1 (inclusive). Null values are assumed to be zero.&quot;],&quot;fieldBehavior&quot;:2},&quot;PrivacyMetric:numerical_stats_config&quot;:{&quot;paramName&quot;:&quot;numerical_stats_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric.NumericalStatsConfig&quot;,&quot;comments&quot;:[&quot; Numerical stats&quot;]},&quot;PrivacyMetric:categorical_stats_config&quot;:{&quot;paramName&quot;:&quot;categorical_stats_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric.CategoricalStatsConfig&quot;,&quot;comments&quot;:[&quot; Categorical stats&quot;]},&quot;PrivacyMetric:k_anonymity_config&quot;:{&quot;paramName&quot;:&quot;k_anonymity_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric.KAnonymityConfig&quot;,&quot;comments&quot;:[&quot; K-anonymity&quot;]},&quot;PrivacyMetric:l_diversity_config&quot;:{&quot;paramName&quot;:&quot;l_diversity_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric.LDiversityConfig&quot;,&quot;comments&quot;:[&quot; l-diversity&quot;]},&quot;PrivacyMetric:k_map_estimation_config&quot;:{&quot;paramName&quot;:&quot;k_map_estimation_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric.KMapEstimationConfig&quot;,&quot;comments&quot;:[&quot; k-map&quot;]},&quot;PrivacyMetric:delta_presence_estimation_config&quot;:{&quot;paramName&quot;:&quot;delta_presence_estimation_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric.DeltaPresenceEstimationConfig&quot;,&quot;comments&quot;:[&quot; delta-presence&quot;]},&quot;AnalyzeDataSourceRiskDetails:requested_privacy_metric&quot;:{&quot;paramName&quot;:&quot;requested_privacy_metric&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrivacyMetric&quot;,&quot;comments&quot;:[&quot; Privacy metric to compute.&quot;]},&quot;AnalyzeDataSourceRiskDetails:requested_source_table&quot;:{&quot;paramName&quot;:&quot;requested_source_table&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryTable&quot;,&quot;comments&quot;:[&quot; Input dataset to compute metrics over.&quot;]},&quot;AnalyzeDataSourceRiskDetails:numerical_stats_result&quot;:{&quot;paramName&quot;:&quot;numerical_stats_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails.NumericalStatsResult&quot;,&quot;comments&quot;:[&quot; Numerical stats result&quot;]},&quot;AnalyzeDataSourceRiskDetails:categorical_stats_result&quot;:{&quot;paramName&quot;:&quot;categorical_stats_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails.CategoricalStatsResult&quot;,&quot;comments&quot;:[&quot; Categorical stats result&quot;]},&quot;AnalyzeDataSourceRiskDetails:k_anonymity_result&quot;:{&quot;paramName&quot;:&quot;k_anonymity_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails.KAnonymityResult&quot;,&quot;comments&quot;:[&quot; K-anonymity result&quot;]},&quot;AnalyzeDataSourceRiskDetails:l_diversity_result&quot;:{&quot;paramName&quot;:&quot;l_diversity_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails.LDiversityResult&quot;,&quot;comments&quot;:[&quot; L-divesity result&quot;]},&quot;AnalyzeDataSourceRiskDetails:k_map_estimation_result&quot;:{&quot;paramName&quot;:&quot;k_map_estimation_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails.KMapEstimationResult&quot;,&quot;comments&quot;:[&quot; K-map result&quot;]},&quot;AnalyzeDataSourceRiskDetails:delta_presence_estimation_result&quot;:{&quot;paramName&quot;:&quot;delta_presence_estimation_result&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails.DeltaPresenceEstimationResult&quot;,&quot;comments&quot;:[&quot; Delta-presence result&quot;]},&quot;ValueFrequency:value&quot;:{&quot;paramName&quot;:&quot;value&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Value&quot;,&quot;comments&quot;:[&quot; A value contained in the field in question.&quot;]},&quot;ValueFrequency:count&quot;:{&quot;paramName&quot;:&quot;count&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; How many times the value is contained in the field.&quot;]},&quot;Value:integer_value&quot;:{&quot;paramName&quot;:&quot;integer_value&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; integer&quot;]},&quot;Value:float_value&quot;:{&quot;paramName&quot;:&quot;float_value&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[&quot; float&quot;]},&quot;Value:string_value&quot;:{&quot;paramName&quot;:&quot;string_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; string&quot;]},&quot;Value:boolean_value&quot;:{&quot;paramName&quot;:&quot;boolean_value&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; boolean&quot;]},&quot;Value:timestamp_value&quot;:{&quot;paramName&quot;:&quot;timestamp_value&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; timestamp&quot;]},&quot;Value:time_value&quot;:{&quot;paramName&quot;:&quot;time_value&quot;,&quot;paramType&quot;:&quot;.google.type.TimeOfDay&quot;,&quot;comments&quot;:[&quot; time of day&quot;]},&quot;Value:date_value&quot;:{&quot;paramName&quot;:&quot;date_value&quot;,&quot;paramType&quot;:&quot;.google.type.Date&quot;,&quot;comments&quot;:[&quot; date&quot;]},&quot;Value:day_of_week_value&quot;:{&quot;paramName&quot;:&quot;day_of_week_value&quot;,&quot;paramType&quot;:&quot;.google.type.DayOfWeek&quot;,&quot;comments&quot;:[&quot; day of week&quot;]},&quot;QuoteInfo:date_time&quot;:{&quot;paramName&quot;:&quot;date_time&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DateTime&quot;,&quot;comments&quot;:[&quot; The date time indicated by the quote.&quot;]},&quot;DateTime:date&quot;:{&quot;paramName&quot;:&quot;date&quot;,&quot;paramType&quot;:&quot;.google.type.Date&quot;,&quot;comments&quot;:[&quot; One or more of the following must be set.&quot;,&quot; Must be a valid date or time value.&quot;]},&quot;DateTime:day_of_week&quot;:{&quot;paramName&quot;:&quot;day_of_week&quot;,&quot;paramType&quot;:&quot;.google.type.DayOfWeek&quot;,&quot;comments&quot;:[&quot; Day of week&quot;]},&quot;DateTime:time&quot;:{&quot;paramName&quot;:&quot;time&quot;,&quot;paramType&quot;:&quot;.google.type.TimeOfDay&quot;,&quot;comments&quot;:[&quot; Time of day&quot;]},&quot;DateTime:time_zone&quot;:{&quot;paramName&quot;:&quot;time_zone&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DateTime.TimeZone&quot;,&quot;comments&quot;:[&quot; Time zone&quot;]},&quot;DeidentifyConfig:info_type_transformations&quot;:{&quot;paramName&quot;:&quot;info_type_transformations&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoTypeTransformations&quot;,&quot;comments&quot;:[&quot; Treat the dataset as free-form text and apply the same free text&quot;,&quot; transformation everywhere.&quot;]},&quot;DeidentifyConfig:record_transformations&quot;:{&quot;paramName&quot;:&quot;record_transformations&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordTransformations&quot;,&quot;comments&quot;:[&quot; Treat the dataset as structured. Transformations can be applied to&quot;,&quot; specific locations within structured datasets, such as transforming&quot;,&quot; a column within a table.&quot;]},&quot;PrimitiveTransformation:replace_config&quot;:{&quot;paramName&quot;:&quot;replace_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ReplaceValueConfig&quot;,&quot;comments&quot;:[&quot; Replace&quot;]},&quot;PrimitiveTransformation:redact_config&quot;:{&quot;paramName&quot;:&quot;redact_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RedactConfig&quot;,&quot;comments&quot;:[&quot; Redact&quot;]},&quot;PrimitiveTransformation:character_mask_config&quot;:{&quot;paramName&quot;:&quot;character_mask_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CharacterMaskConfig&quot;,&quot;comments&quot;:[&quot; Mask&quot;]},&quot;PrimitiveTransformation:crypto_replace_ffx_fpe_config&quot;:{&quot;paramName&quot;:&quot;crypto_replace_ffx_fpe_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoReplaceFfxFpeConfig&quot;,&quot;comments&quot;:[&quot; Ffx-Fpe&quot;]},&quot;PrimitiveTransformation:fixed_size_bucketing_config&quot;:{&quot;paramName&quot;:&quot;fixed_size_bucketing_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FixedSizeBucketingConfig&quot;,&quot;comments&quot;:[&quot; Fixed size bucketing&quot;]},&quot;PrimitiveTransformation:bucketing_config&quot;:{&quot;paramName&quot;:&quot;bucketing_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BucketingConfig&quot;,&quot;comments&quot;:[&quot; Bucketing&quot;]},&quot;PrimitiveTransformation:replace_with_info_type_config&quot;:{&quot;paramName&quot;:&quot;replace_with_info_type_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.ReplaceWithInfoTypeConfig&quot;,&quot;comments&quot;:[&quot; Replace with infotype&quot;]},&quot;PrimitiveTransformation:time_part_config&quot;:{&quot;paramName&quot;:&quot;time_part_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.TimePartConfig&quot;,&quot;comments&quot;:[&quot; Time extraction&quot;]},&quot;PrimitiveTransformation:crypto_hash_config&quot;:{&quot;paramName&quot;:&quot;crypto_hash_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoHashConfig&quot;,&quot;comments&quot;:[&quot; Crypto&quot;]},&quot;PrimitiveTransformation:date_shift_config&quot;:{&quot;paramName&quot;:&quot;date_shift_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DateShiftConfig&quot;,&quot;comments&quot;:[&quot; Date Shift&quot;]},&quot;PrimitiveTransformation:crypto_deterministic_config&quot;:{&quot;paramName&quot;:&quot;crypto_deterministic_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoDeterministicConfig&quot;,&quot;comments&quot;:[&quot; Deterministic Crypto&quot;]},&quot;TimePartConfig:part_to_extract&quot;:{&quot;paramName&quot;:&quot;part_to_extract&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.TimePartConfig.TimePart&quot;,&quot;comments&quot;:[&quot; The part of the time to keep.&quot;]},&quot;CryptoHashConfig:crypto_key&quot;:{&quot;paramName&quot;:&quot;crypto_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoKey&quot;,&quot;comments&quot;:[&quot; The key used by the hash function.&quot;]},&quot;CryptoDeterministicConfig:crypto_key&quot;:{&quot;paramName&quot;:&quot;crypto_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoKey&quot;,&quot;comments&quot;:[&quot; The key used by the encryption function.&quot;]},&quot;CryptoDeterministicConfig:surrogate_info_type&quot;:{&quot;paramName&quot;:&quot;surrogate_info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; The custom info type to annotate the surrogate with.&quot;,&quot; This annotation will be applied to the surrogate by prefixing it with&quot;,&quot; the name of the custom info type followed by the number of&quot;,&quot; characters comprising the surrogate. The following scheme defines the&quot;,&quot; format: {info type name}({surrogate character count}):{surrogate}&quot;,&quot;&quot;,&quot; For example, if the name of custom info type is &#39;MY_TOKEN_INFO_TYPE&#39; and&quot;,&quot; the surrogate is &#39;abc&#39;, the full replacement value&quot;,&quot; will be: &#39;MY_TOKEN_INFO_TYPE(3):abc&#39;&quot;,&quot;&quot;,&quot; This annotation identifies the surrogate when inspecting content using the&quot;,&quot; custom info type &#39;Surrogate&#39;. This facilitates reversal of the&quot;,&quot; surrogate when it occurs in free text.&quot;,&quot;&quot;,&quot; Note: For record transformations where the entire cell in a table is being&quot;,&quot; transformed, surrogates are not mandatory. Surrogates are used to denote&quot;,&quot; the location of the token and are necessary for re-identification in free&quot;,&quot; form text.&quot;,&quot;&quot;,&quot; In order for inspection to work properly, the name of this info type must&quot;,&quot; not occur naturally anywhere in your data; otherwise, inspection may either&quot;,&quot;&quot;,&quot; - reverse a surrogate that does not correspond to an actual identifier&quot;,&quot; - be unable to parse the surrogate and result in an error&quot;,&quot;&quot;,&quot; Therefore, choose your custom info type name carefully after considering&quot;,&quot; what your data looks like. One way to select a name that has a high chance&quot;,&quot; of yielding reliable detection is to include one or more unicode characters&quot;,&quot; that are highly improbable to exist in your data.&quot;,&quot; For example, assuming your data is entered from a regular ASCII keyboard,&quot;,&quot; the symbol with the hex code point 29DD might be used like so:&quot;,&quot; ⧝MY_TOKEN_TYPE.&quot;]},&quot;CryptoDeterministicConfig:context&quot;:{&quot;paramName&quot;:&quot;context&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; A context may be used for higher security and maintaining&quot;,&quot; referential integrity such that the same identifier in two different&quot;,&quot; contexts will be given a distinct surrogate. The context is appended to&quot;,&quot; plaintext value being encrypted. On decryption the provided context is&quot;,&quot; validated against the value used during encryption. If a context was&quot;,&quot; provided during encryption, same context must be provided during decryption&quot;,&quot; as well.&quot;,&quot;&quot;,&quot; If the context is not set, plaintext would be used as is for encryption.&quot;,&quot; If the context is set but:&quot;,&quot;&quot;,&quot; 1. there is no record present when transforming a given value or&quot;,&quot; 2. the field is not present when transforming a given value,&quot;,&quot;&quot;,&quot; plaintext would be used as is for encryption.&quot;,&quot;&quot;,&quot; Note that case (1) is expected when an `InfoTypeTransformation` is&quot;,&quot; applied to both structured and non-structured `ContentItem`s.&quot;]},&quot;ReplaceValueConfig:new_value&quot;:{&quot;paramName&quot;:&quot;new_value&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Value&quot;,&quot;comments&quot;:[&quot; Value to replace it with.&quot;]},&quot;CharsToIgnore:characters_to_skip&quot;:{&quot;paramName&quot;:&quot;characters_to_skip&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Characters to not transform when masking.&quot;]},&quot;CharsToIgnore:common_characters_to_ignore&quot;:{&quot;paramName&quot;:&quot;common_characters_to_ignore&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CharsToIgnore.CommonCharsToIgnore&quot;,&quot;comments&quot;:[&quot; Common characters to not transform when masking. Useful to avoid removing&quot;,&quot; punctuation.&quot;]},&quot;CharacterMaskConfig:masking_character&quot;:{&quot;paramName&quot;:&quot;masking_character&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Character to use to mask the sensitive values&amp;mdash;for example, `*` for an&quot;,&quot; alphabetic string such as a name, or `0` for a numeric string such as ZIP&quot;,&quot; code or credit card number. This string must have a length of 1. If not&quot;,&quot; supplied, this value defaults to `*` for strings, and `0` for digits.&quot;]},&quot;CharacterMaskConfig:number_to_mask&quot;:{&quot;paramName&quot;:&quot;number_to_mask&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Number of characters to mask. If not set, all matching chars will be&quot;,&quot; masked. Skipped characters do not count towards this tally.&quot;]},&quot;CharacterMaskConfig:reverse_order&quot;:{&quot;paramName&quot;:&quot;reverse_order&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Mask characters in reverse order. For example, if `masking_character` is&quot;,&quot; `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the&quot;,&quot; input string `1234-5678-9012-3456` is masked as `00000000000000-3456`.&quot;,&quot; If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order`&quot;,&quot; is `true`, then the string `12345` is masked as `12***`.&quot;]},&quot;CharacterMaskConfig:characters_to_ignore&quot;:{&quot;paramName&quot;:&quot;characters_to_ignore&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; When masking a string, items in this list will be skipped when replacing&quot;,&quot; characters. For example, if the input string is `555-555-5555` and you&quot;,&quot; instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP&quot;,&quot; returns `***-**5-5555`.&quot;]},&quot;FixedSizeBucketingConfig:lower_bound&quot;:{&quot;paramName&quot;:&quot;lower_bound&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Value&quot;,&quot;comments&quot;:[&quot; Required. Lower bound value of buckets. All values less than `lower_bound` are&quot;,&quot; grouped together into a single bucket; for example if `lower_bound` = 10,&quot;,&quot; then all values less than 10 are replaced with the value “-10”.&quot;],&quot;fieldBehavior&quot;:2},&quot;FixedSizeBucketingConfig:upper_bound&quot;:{&quot;paramName&quot;:&quot;upper_bound&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Value&quot;,&quot;comments&quot;:[&quot; Required. Upper bound value of buckets. All values greater than upper_bound are&quot;,&quot; grouped together into a single bucket; for example if `upper_bound` = 89,&quot;,&quot; then all values greater than 89 are replaced with the value “89+”.&quot;],&quot;fieldBehavior&quot;:2},&quot;FixedSizeBucketingConfig:bucket_size&quot;:{&quot;paramName&quot;:&quot;bucket_size&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[&quot; Required. Size of each bucket (except for minimum and maximum buckets). So if&quot;,&quot; `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the&quot;,&quot; following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,&quot;,&quot; 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.&quot;],&quot;fieldBehavior&quot;:2},&quot;BucketingConfig:buckets&quot;:{&quot;paramName&quot;:&quot;buckets&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Set of buckets. Ranges must be non-overlapping.&quot;]},&quot;CryptoReplaceFfxFpeConfig:crypto_key&quot;:{&quot;paramName&quot;:&quot;crypto_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoKey&quot;,&quot;comments&quot;:[&quot; Required. The key used by the encryption algorithm.&quot;],&quot;fieldBehavior&quot;:2},&quot;CryptoReplaceFfxFpeConfig:context&quot;:{&quot;paramName&quot;:&quot;context&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; The &#39;tweak&#39;, a context may be used for higher security since the same&quot;,&quot; identifier in two different contexts won&#39;t be given the same surrogate. If&quot;,&quot; the context is not set, a default tweak will be used.&quot;,&quot;&quot;,&quot; If the context is set but:&quot;,&quot;&quot;,&quot; 1. there is no record present when transforming a given value or&quot;,&quot; 1. the field is not present when transforming a given value,&quot;,&quot;&quot;,&quot; a default tweak will be used.&quot;,&quot;&quot;,&quot; Note that case (1) is expected when an `InfoTypeTransformation` is&quot;,&quot; applied to both structured and non-structured `ContentItem`s.&quot;,&quot; Currently, the referenced field may be of value type integer or string.&quot;,&quot;&quot;,&quot; The tweak is constructed as a sequence of bytes in big endian byte order&quot;,&quot; such that:&quot;,&quot;&quot;,&quot; - a 64 bit integer is encoded followed by a single byte of value 1&quot;,&quot; - a string is encoded in UTF-8 format followed by a single byte of value 2&quot;]},&quot;CryptoReplaceFfxFpeConfig:common_alphabet&quot;:{&quot;paramName&quot;:&quot;common_alphabet&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoReplaceFfxFpeConfig.FfxCommonNativeAlphabet&quot;,&quot;comments&quot;:[&quot; Common alphabets.&quot;]},&quot;CryptoReplaceFfxFpeConfig:custom_alphabet&quot;:{&quot;paramName&quot;:&quot;custom_alphabet&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; This is supported by mapping these to the alphanumeric characters&quot;,&quot; that the FFX mode natively supports. This happens before/after&quot;,&quot; encryption/decryption.&quot;,&quot; Each character listed must appear only once.&quot;,&quot; Number of characters must be in the range [2, 95].&quot;,&quot; This must be encoded as ASCII.&quot;,&quot; The order of characters does not matter.&quot;]},&quot;CryptoReplaceFfxFpeConfig:radix&quot;:{&quot;paramName&quot;:&quot;radix&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The native way to select the alphabet. Must be in the range [2, 95].&quot;]},&quot;CryptoReplaceFfxFpeConfig:surrogate_info_type&quot;:{&quot;paramName&quot;:&quot;surrogate_info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; The custom infoType to annotate the surrogate with.&quot;,&quot; This annotation will be applied to the surrogate by prefixing it with&quot;,&quot; the name of the custom infoType followed by the number of&quot;,&quot; characters comprising the surrogate. The following scheme defines the&quot;,&quot; format: info_type_name(surrogate_character_count):surrogate&quot;,&quot;&quot;,&quot; For example, if the name of custom infoType is &#39;MY_TOKEN_INFO_TYPE&#39; and&quot;,&quot; the surrogate is &#39;abc&#39;, the full replacement value&quot;,&quot; will be: &#39;MY_TOKEN_INFO_TYPE(3):abc&#39;&quot;,&quot;&quot;,&quot; This annotation identifies the surrogate when inspecting content using the&quot;,&quot; custom infoType&quot;,&quot; [`SurrogateType`](/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype).&quot;,&quot; This facilitates reversal of the surrogate when it occurs in free text.&quot;,&quot;&quot;,&quot; In order for inspection to work properly, the name of this infoType must&quot;,&quot; not occur naturally anywhere in your data; otherwise, inspection may&quot;,&quot; find a surrogate that does not correspond to an actual identifier.&quot;,&quot; Therefore, choose your custom infoType name carefully after considering&quot;,&quot; what your data looks like. One way to select a name that has a high chance&quot;,&quot; of yielding reliable detection is to include one or more unicode characters&quot;,&quot; that are highly improbable to exist in your data.&quot;,&quot; For example, assuming your data is entered from a regular ASCII keyboard,&quot;,&quot; the symbol with the hex code point 29DD might be used like so:&quot;,&quot; ⧝MY_TOKEN_TYPE&quot;]},&quot;CryptoKey:transient&quot;:{&quot;paramName&quot;:&quot;transient&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.TransientCryptoKey&quot;,&quot;comments&quot;:[&quot; Transient crypto key&quot;]},&quot;CryptoKey:unwrapped&quot;:{&quot;paramName&quot;:&quot;unwrapped&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.UnwrappedCryptoKey&quot;,&quot;comments&quot;:[&quot; Unwrapped crypto key&quot;]},&quot;CryptoKey:kms_wrapped&quot;:{&quot;paramName&quot;:&quot;kms_wrapped&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.KmsWrappedCryptoKey&quot;,&quot;comments&quot;:[&quot; Kms wrapped key&quot;]},&quot;TransientCryptoKey:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Name of the key.&quot;,&quot; This is an arbitrary string used to differentiate different keys.&quot;,&quot; A unique key is generated per name: two separate `TransientCryptoKey`&quot;,&quot; protos share the same generated key if their names are the same.&quot;,&quot; When the data crypto key is generated, this name is not used in any way&quot;,&quot; (repeating the api call will result in a different key being generated).&quot;],&quot;fieldBehavior&quot;:2},&quot;UnwrappedCryptoKey:key&quot;:{&quot;paramName&quot;:&quot;key&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; Required. A 128/192/256 bit key.&quot;],&quot;fieldBehavior&quot;:2},&quot;KmsWrappedCryptoKey:wrapped_key&quot;:{&quot;paramName&quot;:&quot;wrapped_key&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; Required. The wrapped data crypto key.&quot;],&quot;fieldBehavior&quot;:2},&quot;KmsWrappedCryptoKey:crypto_key_name&quot;:{&quot;paramName&quot;:&quot;crypto_key_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The resource name of the KMS CryptoKey to use for unwrapping.&quot;],&quot;fieldBehavior&quot;:2},&quot;DateShiftConfig:upper_bound_days&quot;:{&quot;paramName&quot;:&quot;upper_bound_days&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Required. Range of shift in days. Actual shift will be selected at random within this&quot;,&quot; range (inclusive ends). Negative means shift to earlier in time. Must not&quot;,&quot; be more than 365250 days (1000 years) each direction.&quot;,&quot;&quot;,&quot; For example, 3 means shift date to at most 3 days into the future.&quot;],&quot;fieldBehavior&quot;:2},&quot;DateShiftConfig:lower_bound_days&quot;:{&quot;paramName&quot;:&quot;lower_bound_days&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Required. For example, -5 means shift date to at most 5 days back in the past.&quot;],&quot;fieldBehavior&quot;:2},&quot;DateShiftConfig:context&quot;:{&quot;paramName&quot;:&quot;context&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Points to the field that contains the context, for example, an entity id.&quot;,&quot; If set, must also set cryptoKey. If set, shift will be consistent for the&quot;,&quot; given context.&quot;]},&quot;DateShiftConfig:crypto_key&quot;:{&quot;paramName&quot;:&quot;crypto_key&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CryptoKey&quot;,&quot;comments&quot;:[&quot; Causes the shift to be computed based on this key and the context. This&quot;,&quot; results in the same shift for the same context and crypto_key. If&quot;,&quot; set, must also set context. Can only be applied to table items.&quot;]},&quot;InfoTypeTransformations:transformations&quot;:{&quot;paramName&quot;:&quot;transformations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Required. Transformation for each infoType. Cannot specify more than one&quot;,&quot; for a given infoType.&quot;],&quot;fieldBehavior&quot;:2},&quot;FieldTransformation:fields&quot;:{&quot;paramName&quot;:&quot;fields&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Required. Input field(s) to apply the transformation to.&quot;],&quot;fieldBehavior&quot;:2},&quot;FieldTransformation:condition&quot;:{&quot;paramName&quot;:&quot;condition&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordCondition&quot;,&quot;comments&quot;:[&quot; Only apply the transformation if the condition evaluates to true for the&quot;,&quot; given `RecordCondition`. The conditions are allowed to reference fields&quot;,&quot; that are not used in the actual transformation.&quot;,&quot;&quot;,&quot; Example Use Cases:&quot;,&quot;&quot;,&quot; - Apply a different bucket transformation to an age column if the zip code&quot;,&quot; column for the same record is within a specific range.&quot;,&quot; - Redact a field if the date of birth field is greater than 85.&quot;]},&quot;FieldTransformation:primitive_transformation&quot;:{&quot;paramName&quot;:&quot;primitive_transformation&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrimitiveTransformation&quot;,&quot;comments&quot;:[&quot; Apply the transformation to the entire field.&quot;]},&quot;FieldTransformation:info_type_transformations&quot;:{&quot;paramName&quot;:&quot;info_type_transformations&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoTypeTransformations&quot;,&quot;comments&quot;:[&quot; Treat the contents of the field as free text, and selectively&quot;,&quot; transform content that matches an `InfoType`.&quot;]},&quot;RecordTransformations:field_transformations&quot;:{&quot;paramName&quot;:&quot;field_transformations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Transform the record by applying various field transformations.&quot;]},&quot;RecordTransformations:record_suppressions&quot;:{&quot;paramName&quot;:&quot;record_suppressions&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Configuration defining which records get suppressed entirely. Records that&quot;,&quot; match any suppression rule are omitted from the output.&quot;]},&quot;RecordSuppression:condition&quot;:{&quot;paramName&quot;:&quot;condition&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordCondition&quot;,&quot;comments&quot;:[&quot; A condition that when it evaluates to true will result in the record being&quot;,&quot; evaluated to be suppressed from the transformed content.&quot;]},&quot;RecordCondition:expressions&quot;:{&quot;paramName&quot;:&quot;expressions&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordCondition.Expressions&quot;,&quot;comments&quot;:[&quot; An expression.&quot;]},&quot;TransformationOverview:transformed_bytes&quot;:{&quot;paramName&quot;:&quot;transformed_bytes&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Total size in bytes that were transformed in some way.&quot;]},&quot;TransformationOverview:transformation_summaries&quot;:{&quot;paramName&quot;:&quot;transformation_summaries&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Transformations applied to the dataset.&quot;]},&quot;TransformationSummary:info_type&quot;:{&quot;paramName&quot;:&quot;info_type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InfoType&quot;,&quot;comments&quot;:[&quot; Set if the transformation was limited to a specific InfoType.&quot;]},&quot;TransformationSummary:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.FieldId&quot;,&quot;comments&quot;:[&quot; Set if the transformation was limited to a specific FieldId.&quot;]},&quot;TransformationSummary:transformation&quot;:{&quot;paramName&quot;:&quot;transformation&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.PrimitiveTransformation&quot;,&quot;comments&quot;:[&quot; The specific transformation these stats apply to.&quot;]},&quot;TransformationSummary:field_transformations&quot;:{&quot;paramName&quot;:&quot;field_transformations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The field transformation that was applied.&quot;,&quot; If multiple field transformations are requested for a single field,&quot;,&quot; this list will contain all of them; otherwise, only one is supplied.&quot;]},&quot;TransformationSummary:record_suppress&quot;:{&quot;paramName&quot;:&quot;record_suppress&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RecordSuppression&quot;,&quot;comments&quot;:[&quot; The specific suppression option these stats apply to.&quot;]},&quot;TransformationSummary:results&quot;:{&quot;paramName&quot;:&quot;results&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Collection of all transformations that took place or had an error.&quot;]},&quot;TransformationSummary:transformed_bytes&quot;:{&quot;paramName&quot;:&quot;transformed_bytes&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Total size in bytes that were transformed in some way.&quot;]},&quot;Schedule:recurrence_period_duration&quot;:{&quot;paramName&quot;:&quot;recurrence_period_duration&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Duration&quot;,&quot;comments&quot;:[&quot; With this option a job is started a regular periodic basis. For&quot;,&quot; example: every day (86400 seconds).&quot;,&quot;&quot;,&quot; A scheduled start time will be skipped if the previous&quot;,&quot; execution has not ended when its scheduled time occurs.&quot;,&quot;&quot;,&quot; This value must be set to a time duration greater than or equal&quot;,&quot; to 1 day and can be no longer than 60 days.&quot;]},&quot;InspectTemplate:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Output only. The template name.&quot;,&quot;&quot;,&quot; The template will have one of the following formats:&quot;,&quot; `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR&quot;,&quot; `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;&quot;],&quot;fieldBehavior&quot;:3},&quot;InspectTemplate:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Display name (max 256 chars).&quot;]},&quot;InspectTemplate:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Short description (max 256 chars).&quot;]},&quot;InspectTemplate:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The creation timestamp of an inspectTemplate.&quot;],&quot;fieldBehavior&quot;:3},&quot;InspectTemplate:update_time&quot;:{&quot;paramName&quot;:&quot;update_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The last update timestamp of an inspectTemplate.&quot;],&quot;fieldBehavior&quot;:3},&quot;InspectTemplate:inspect_config&quot;:{&quot;paramName&quot;:&quot;inspect_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig&quot;,&quot;comments&quot;:[&quot; The core content of the template. Configuration of the scanning process.&quot;]},&quot;DeidentifyTemplate:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Output only. The template name.&quot;,&quot;&quot;,&quot; The template will have one of the following formats:&quot;,&quot; `projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR&quot;,&quot; `organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`&quot;],&quot;fieldBehavior&quot;:3},&quot;DeidentifyTemplate:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Display name (max 256 chars).&quot;]},&quot;DeidentifyTemplate:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Short description (max 256 chars).&quot;]},&quot;DeidentifyTemplate:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The creation timestamp of an inspectTemplate.&quot;],&quot;fieldBehavior&quot;:3},&quot;DeidentifyTemplate:update_time&quot;:{&quot;paramName&quot;:&quot;update_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The last update timestamp of an inspectTemplate.&quot;],&quot;fieldBehavior&quot;:3},&quot;DeidentifyTemplate:deidentify_config&quot;:{&quot;paramName&quot;:&quot;deidentify_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DeidentifyConfig&quot;,&quot;comments&quot;:[&quot; ///////////// // The core content of the template  // ///////////////&quot;]},&quot;Error:details&quot;:{&quot;paramName&quot;:&quot;details&quot;,&quot;paramType&quot;:&quot;.google.rpc.Status&quot;,&quot;comments&quot;:[&quot; Detailed error codes and messages.&quot;]},&quot;Error:timestamps&quot;:{&quot;paramName&quot;:&quot;timestamps&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The times the error occurred.&quot;]},&quot;JobTrigger:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Unique resource name for the triggeredJob, assigned by the service when the&quot;,&quot; triggeredJob is created, for example&quot;,&quot; `projects/dlp-test-project/jobTriggers/53234423`.&quot;]},&quot;JobTrigger:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Display name (max 100 chars)&quot;]},&quot;JobTrigger:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; User provided description (max 256 chars)&quot;]},&quot;JobTrigger:inspect_job&quot;:{&quot;paramName&quot;:&quot;inspect_job&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectJobConfig&quot;,&quot;comments&quot;:[&quot; For inspect jobs, a snapshot of the configuration.&quot;]},&quot;JobTrigger:triggers&quot;:{&quot;paramName&quot;:&quot;triggers&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of triggers which will be OR&#39;ed together. Only one in the list&quot;,&quot; needs to trigger for a job to be started. The list may contain only&quot;,&quot; a single Schedule trigger and must have at least one object.&quot;]},&quot;JobTrigger:errors&quot;:{&quot;paramName&quot;:&quot;errors&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Output only. A stream of errors encountered when the trigger was activated. Repeated&quot;,&quot; errors may result in the JobTrigger automatically being paused.&quot;,&quot; Will return the last 100 errors. Whenever the JobTrigger is modified&quot;,&quot; this list will be cleared.&quot;],&quot;fieldBehavior&quot;:3},&quot;JobTrigger:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The creation timestamp of a triggeredJob.&quot;],&quot;fieldBehavior&quot;:3},&quot;JobTrigger:update_time&quot;:{&quot;paramName&quot;:&quot;update_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The last update timestamp of a triggeredJob.&quot;],&quot;fieldBehavior&quot;:3},&quot;JobTrigger:last_run_time&quot;:{&quot;paramName&quot;:&quot;last_run_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Output only. The timestamp of the last time this trigger executed.&quot;],&quot;fieldBehavior&quot;:3},&quot;JobTrigger:status&quot;:{&quot;paramName&quot;:&quot;status&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.JobTrigger.Status&quot;,&quot;comments&quot;:[&quot; Required. A status for this trigger.&quot;],&quot;fieldBehavior&quot;:2},&quot;Action:save_findings&quot;:{&quot;paramName&quot;:&quot;save_findings&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Action.SaveFindings&quot;,&quot;comments&quot;:[&quot; Save resulting findings in a provided location.&quot;]},&quot;Action:pub_sub&quot;:{&quot;paramName&quot;:&quot;pub_sub&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Action.PublishToPubSub&quot;,&quot;comments&quot;:[&quot; Publish a notification to a pubsub topic.&quot;]},&quot;Action:publish_summary_to_cscc&quot;:{&quot;paramName&quot;:&quot;publish_summary_to_cscc&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Action.PublishSummaryToCscc&quot;,&quot;comments&quot;:[&quot; Publish summary to Cloud Security Command Center (Alpha).&quot;]},&quot;Action:publish_findings_to_cloud_data_catalog&quot;:{&quot;paramName&quot;:&quot;publish_findings_to_cloud_data_catalog&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Action.PublishFindingsToCloudDataCatalog&quot;,&quot;comments&quot;:[&quot; Publish findings to Cloud Datahub.&quot;]},&quot;Action:job_notification_emails&quot;:{&quot;paramName&quot;:&quot;job_notification_emails&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Action.JobNotificationEmails&quot;,&quot;comments&quot;:[&quot; Enable email notification for project owners and editors on job&#39;s&quot;,&quot; completion/failure.&quot;]},&quot;Action:publish_to_stackdriver&quot;:{&quot;paramName&quot;:&quot;publish_to_stackdriver&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.Action.PublishToStackdriver&quot;,&quot;comments&quot;:[&quot; Enable Stackdriver metric dlp.googleapis.com/finding_count.&quot;]},&quot;CreateInspectTemplateRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id or&quot;,&quot; organizations/my-org-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateInspectTemplateRequest:inspect_template&quot;:{&quot;paramName&quot;:&quot;inspect_template&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectTemplate&quot;,&quot;comments&quot;:[&quot; Required. The InspectTemplate to create.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateInspectTemplateRequest:template_id&quot;:{&quot;paramName&quot;:&quot;template_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The template id can contain uppercase and lowercase letters,&quot;,&quot; numbers, and hyphens; that is, it must match the regular&quot;,&quot; expression: `[a-zA-Z&#92;&#92;&#92;&#92;d-_]+`. The maximum length is 100&quot;,&quot; characters. Can be empty to allow the system to generate one.&quot;]},&quot;CreateInspectTemplateRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to store the inspection template. Reserved for&quot;,&quot; future extensions.&quot;]},&quot;UpdateInspectTemplateRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of organization and inspectTemplate to be updated, for&quot;,&quot; example `organizations/433245324/inspectTemplates/432452342` or&quot;,&quot; projects/project-id/inspectTemplates/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateInspectTemplateRequest:inspect_template&quot;:{&quot;paramName&quot;:&quot;inspect_template&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectTemplate&quot;,&quot;comments&quot;:[&quot; New InspectTemplate value.&quot;]},&quot;UpdateInspectTemplateRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; Mask to control which fields get updated.&quot;]},&quot;GetInspectTemplateRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the organization and inspectTemplate to be read, for&quot;,&quot; example `organizations/433245324/inspectTemplates/432452342` or&quot;,&quot; projects/project-id/inspectTemplates/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListInspectTemplatesRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id or&quot;,&quot; organizations/my-org-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListInspectTemplatesRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Page token to continue retrieval. Comes from previous call&quot;,&quot; to `ListInspectTemplates`.&quot;]},&quot;ListInspectTemplatesRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Size of the page, can be limited by server. If zero server returns&quot;,&quot; a page of max size 100.&quot;]},&quot;ListInspectTemplatesRequest:order_by&quot;:{&quot;paramName&quot;:&quot;order_by&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Comma separated list of fields to order by,&quot;,&quot; followed by `asc` or `desc` postfix. This list is case-insensitive,&quot;,&quot; default sorting order is ascending, redundant space characters are&quot;,&quot; insignificant.&quot;,&quot;&quot;,&quot; Example: `name asc,update_time, create_time desc`&quot;,&quot;&quot;,&quot; Supported fields are:&quot;,&quot;&quot;,&quot; - `create_time`: corresponds to time the template was created.&quot;,&quot; - `update_time`: corresponds to time the template was last updated.&quot;,&quot; - `name`: corresponds to template&#39;s name.&quot;,&quot; - `display_name`: corresponds to template&#39;s display name.&quot;]},&quot;ListInspectTemplatesRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location where inspection templates will be retrieved from.&quot;,&quot; Use `-` for all locations. Reserved for future extensions.&quot;]},&quot;ListInspectTemplatesResponse:inspect_templates&quot;:{&quot;paramName&quot;:&quot;inspect_templates&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of inspectTemplates, up to page_size in ListInspectTemplatesRequest.&quot;]},&quot;ListInspectTemplatesResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If the next page is available then the next page token to be used&quot;,&quot; in following ListInspectTemplates request.&quot;]},&quot;DeleteInspectTemplateRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the organization and inspectTemplate to be deleted, for&quot;,&quot; example `organizations/433245324/inspectTemplates/432452342` or&quot;,&quot; projects/project-id/inspectTemplates/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateJobTriggerRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateJobTriggerRequest:job_trigger&quot;:{&quot;paramName&quot;:&quot;job_trigger&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.JobTrigger&quot;,&quot;comments&quot;:[&quot; Required. The JobTrigger to create.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateJobTriggerRequest:trigger_id&quot;:{&quot;paramName&quot;:&quot;trigger_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The trigger id can contain uppercase and lowercase letters,&quot;,&quot; numbers, and hyphens; that is, it must match the regular&quot;,&quot; expression: `[a-zA-Z&#92;&#92;&#92;&#92;d-_]+`. The maximum length is 100&quot;,&quot; characters. Can be empty to allow the system to generate one.&quot;]},&quot;CreateJobTriggerRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to store the job trigger. Reserved for&quot;,&quot; future extensions.&quot;]},&quot;ActivateJobTriggerRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the trigger to activate, for example&quot;,&quot; `projects/dlp-test-project/jobTriggers/53234423`.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateJobTriggerRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the project and the triggeredJob, for example&quot;,&quot; `projects/dlp-test-project/jobTriggers/53234423`.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateJobTriggerRequest:job_trigger&quot;:{&quot;paramName&quot;:&quot;job_trigger&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.JobTrigger&quot;,&quot;comments&quot;:[&quot; New JobTrigger value.&quot;]},&quot;UpdateJobTriggerRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; Mask to control which fields get updated.&quot;]},&quot;GetJobTriggerRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the project and the triggeredJob, for example&quot;,&quot; `projects/dlp-test-project/jobTriggers/53234423`.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateDlpJobRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateDlpJobRequest:inspect_job&quot;:{&quot;paramName&quot;:&quot;inspect_job&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectJobConfig&quot;,&quot;comments&quot;:[&quot; Set to control what and how to inspect.&quot;]},&quot;CreateDlpJobRequest:risk_job&quot;:{&quot;paramName&quot;:&quot;risk_job&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.RiskAnalysisJobConfig&quot;,&quot;comments&quot;:[&quot; Set to choose what metric to calculate.&quot;]},&quot;CreateDlpJobRequest:job_id&quot;:{&quot;paramName&quot;:&quot;job_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The job id can contain uppercase and lowercase letters,&quot;,&quot; numbers, and hyphens; that is, it must match the regular&quot;,&quot; expression: `[a-zA-Z&#92;&#92;&#92;&#92;d-_]+`. The maximum length is 100&quot;,&quot; characters. Can be empty to allow the system to generate one.&quot;]},&quot;CreateDlpJobRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to store and process the job. Reserved for&quot;,&quot; future extensions.&quot;]},&quot;ListJobTriggersRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example `projects/my-project-id`.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListJobTriggersRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Page token to continue retrieval. Comes from previous call&quot;,&quot; to ListJobTriggers. `order_by` field must not&quot;,&quot; change for subsequent calls.&quot;]},&quot;ListJobTriggersRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Size of the page, can be limited by a server.&quot;]},&quot;ListJobTriggersRequest:order_by&quot;:{&quot;paramName&quot;:&quot;order_by&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Comma separated list of triggeredJob fields to order by,&quot;,&quot; followed by `asc` or `desc` postfix. This list is case-insensitive,&quot;,&quot; default sorting order is ascending, redundant space characters are&quot;,&quot; insignificant.&quot;,&quot;&quot;,&quot; Example: `name asc,update_time, create_time desc`&quot;,&quot;&quot;,&quot; Supported fields are:&quot;,&quot;&quot;,&quot; - `create_time`: corresponds to time the JobTrigger was created.&quot;,&quot; - `update_time`: corresponds to time the JobTrigger was last updated.&quot;,&quot; - `last_run_time`: corresponds to the last time the JobTrigger ran.&quot;,&quot; - `name`: corresponds to JobTrigger&#39;s name.&quot;,&quot; - `display_name`: corresponds to JobTrigger&#39;s display name.&quot;,&quot; - `status`: corresponds to JobTrigger&#39;s status.&quot;]},&quot;ListJobTriggersRequest:filter&quot;:{&quot;paramName&quot;:&quot;filter&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Allows filtering.&quot;,&quot;&quot;,&quot; Supported syntax:&quot;,&quot;&quot;,&quot; * Filter expressions are made up of one or more restrictions.&quot;,&quot; * Restrictions can be combined by `AND` or `OR` logical operators. A&quot;,&quot; sequence of restrictions implicitly uses `AND`.&quot;,&quot; * A restriction has the form of `{field} {operator} {value}`.&quot;,&quot; * Supported fields/values for inspect jobs:&quot;,&quot;     - `status` - HEALTHY|PAUSED|CANCELLED&quot;,&quot;     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY&quot;,&quot;     - &#39;last_run_time` - RFC 3339 formatted timestamp, surrounded by&quot;,&quot;     quotation marks. Nanoseconds are ignored.&quot;,&quot;     - &#39;error_count&#39; - Number of errors that have occurred while running.&quot;,&quot; * The operator must be `=` or `!=` for status and inspected_storage.&quot;,&quot;&quot;,&quot; Examples:&quot;,&quot;&quot;,&quot; * inspected_storage = cloud_storage AND status = HEALTHY&quot;,&quot; * inspected_storage = cloud_storage OR inspected_storage = bigquery&quot;,&quot; * inspected_storage = cloud_storage AND (state = PAUSED OR state = HEALTHY)&quot;,&quot; * last_run_time &gt; &#92;&#92;&#92;&quot;2017-12-12T00:00:00+00:00&#92;&#92;&#92;&quot;&quot;,&quot;&quot;,&quot; The length of this field should be no more than 500 characters.&quot;]},&quot;ListJobTriggersRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location where job triggers will be retrieved from.&quot;,&quot; Use `-` for all locations. Reserved for future extensions.&quot;]},&quot;ListJobTriggersResponse:job_triggers&quot;:{&quot;paramName&quot;:&quot;job_triggers&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of triggeredJobs, up to page_size in ListJobTriggersRequest.&quot;]},&quot;ListJobTriggersResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If the next page is available then the next page token to be used&quot;,&quot; in following ListJobTriggers request.&quot;]},&quot;DeleteJobTriggerRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the project and the triggeredJob, for example&quot;,&quot; `projects/dlp-test-project/jobTriggers/53234423`.&quot;],&quot;fieldBehavior&quot;:2},&quot;InspectJobConfig:storage_config&quot;:{&quot;paramName&quot;:&quot;storage_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StorageConfig&quot;,&quot;comments&quot;:[&quot; The data to scan.&quot;]},&quot;InspectJobConfig:inspect_config&quot;:{&quot;paramName&quot;:&quot;inspect_config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectConfig&quot;,&quot;comments&quot;:[&quot; How and what to scan for.&quot;]},&quot;InspectJobConfig:inspect_template_name&quot;:{&quot;paramName&quot;:&quot;inspect_template_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If provided, will be used as the default for all values in InspectConfig.&quot;,&quot; `inspect_config` will be merged into the values persisted as part of the&quot;,&quot; template.&quot;]},&quot;InspectJobConfig:actions&quot;:{&quot;paramName&quot;:&quot;actions&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Actions to execute at the completion of the job.&quot;]},&quot;DlpJob:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The server-assigned name.&quot;]},&quot;DlpJob:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DlpJobType&quot;,&quot;comments&quot;:[&quot; The type of job.&quot;]},&quot;DlpJob:state&quot;:{&quot;paramName&quot;:&quot;state&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DlpJob.JobState&quot;,&quot;comments&quot;:[&quot; State of a job.&quot;]},&quot;DlpJob:risk_details&quot;:{&quot;paramName&quot;:&quot;risk_details&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.AnalyzeDataSourceRiskDetails&quot;,&quot;comments&quot;:[&quot; Results from analyzing risk of a data source.&quot;]},&quot;DlpJob:inspect_details&quot;:{&quot;paramName&quot;:&quot;inspect_details&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.InspectDataSourceDetails&quot;,&quot;comments&quot;:[&quot; Results from inspecting a data source.&quot;]},&quot;DlpJob:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Time when the job was created.&quot;]},&quot;DlpJob:start_time&quot;:{&quot;paramName&quot;:&quot;start_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Time when the job started.&quot;]},&quot;DlpJob:end_time&quot;:{&quot;paramName&quot;:&quot;end_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Time when the job finished.&quot;]},&quot;DlpJob:job_trigger_name&quot;:{&quot;paramName&quot;:&quot;job_trigger_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If created by a job trigger, the resource name of the trigger that&quot;,&quot; instantiated the job.&quot;]},&quot;DlpJob:errors&quot;:{&quot;paramName&quot;:&quot;errors&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A stream of errors encountered running the job.&quot;]},&quot;GetDlpJobRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The name of the DlpJob resource.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListDlpJobsRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListDlpJobsRequest:filter&quot;:{&quot;paramName&quot;:&quot;filter&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Allows filtering.&quot;,&quot;&quot;,&quot; Supported syntax:&quot;,&quot;&quot;,&quot; * Filter expressions are made up of one or more restrictions.&quot;,&quot; * Restrictions can be combined by `AND` or `OR` logical operators. A&quot;,&quot; sequence of restrictions implicitly uses `AND`.&quot;,&quot; * A restriction has the form of `{field} {operator} {value}`.&quot;,&quot; * Supported fields/values for inspect jobs:&quot;,&quot;     - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED&quot;,&quot;     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY&quot;,&quot;     - `trigger_name` - The resource name of the trigger that created job.&quot;,&quot;     - &#39;end_time` - Corresponds to time the job finished.&quot;,&quot;     - &#39;start_time` - Corresponds to time the job finished.&quot;,&quot; * Supported fields for risk analysis jobs:&quot;,&quot;     - `state` - RUNNING|CANCELED|FINISHED|FAILED&quot;,&quot;     - &#39;end_time` - Corresponds to time the job finished.&quot;,&quot;     - &#39;start_time` - Corresponds to time the job finished.&quot;,&quot; * The operator must be `=` or `!=`.&quot;,&quot;&quot;,&quot; Examples:&quot;,&quot;&quot;,&quot; * inspected_storage = cloud_storage AND state = done&quot;,&quot; * inspected_storage = cloud_storage OR inspected_storage = bigquery&quot;,&quot; * inspected_storage = cloud_storage AND (state = done OR state = canceled)&quot;,&quot; * end_time &gt; &#92;&#92;&#92;&quot;2017-12-12T00:00:00+00:00&#92;&#92;&#92;&quot;&quot;,&quot;&quot;,&quot; The length of this field should be no more than 500 characters.&quot;]},&quot;ListDlpJobsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The standard list page size.&quot;]},&quot;ListDlpJobsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The standard list page token.&quot;]},&quot;ListDlpJobsRequest:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DlpJobType&quot;,&quot;comments&quot;:[&quot; The type of job. Defaults to `DlpJobType.INSPECT`&quot;]},&quot;ListDlpJobsRequest:order_by&quot;:{&quot;paramName&quot;:&quot;order_by&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Comma separated list of fields to order by,&quot;,&quot; followed by `asc` or `desc` postfix. This list is case-insensitive,&quot;,&quot; default sorting order is ascending, redundant space characters are&quot;,&quot; insignificant.&quot;,&quot;&quot;,&quot; Example: `name asc, end_time asc, create_time desc`&quot;,&quot;&quot;,&quot; Supported fields are:&quot;,&quot;&quot;,&quot; - `create_time`: corresponds to time the job was created.&quot;,&quot; - `end_time`: corresponds to time the job ended.&quot;,&quot; - `name`: corresponds to job&#39;s name.&quot;,&quot; - `state`: corresponds to `state`&quot;]},&quot;ListDlpJobsRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location where jobs will be retrieved from.&quot;,&quot; Use `-` for all locations. Reserved for future extensions.&quot;]},&quot;ListDlpJobsResponse:jobs&quot;:{&quot;paramName&quot;:&quot;jobs&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of DlpJobs that matches the specified filter in the request.&quot;]},&quot;ListDlpJobsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The standard List next-page token.&quot;]},&quot;CancelDlpJobRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The name of the DlpJob resource to be cancelled.&quot;],&quot;fieldBehavior&quot;:2},&quot;DeleteDlpJobRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The name of the DlpJob resource to be deleted.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateDeidentifyTemplateRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id or&quot;,&quot; organizations/my-org-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateDeidentifyTemplateRequest:deidentify_template&quot;:{&quot;paramName&quot;:&quot;deidentify_template&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DeidentifyTemplate&quot;,&quot;comments&quot;:[&quot; Required. The DeidentifyTemplate to create.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateDeidentifyTemplateRequest:template_id&quot;:{&quot;paramName&quot;:&quot;template_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The template id can contain uppercase and lowercase letters,&quot;,&quot; numbers, and hyphens; that is, it must match the regular&quot;,&quot; expression: `[a-zA-Z&#92;&#92;&#92;&#92;d-_]+`. The maximum length is 100&quot;,&quot; characters. Can be empty to allow the system to generate one.&quot;]},&quot;CreateDeidentifyTemplateRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to store the deidentification template. Reserved&quot;,&quot; for future extensions.&quot;]},&quot;UpdateDeidentifyTemplateRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of organization and deidentify template to be updated, for&quot;,&quot; example `organizations/433245324/deidentifyTemplates/432452342` or&quot;,&quot; projects/project-id/deidentifyTemplates/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateDeidentifyTemplateRequest:deidentify_template&quot;:{&quot;paramName&quot;:&quot;deidentify_template&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.DeidentifyTemplate&quot;,&quot;comments&quot;:[&quot; New DeidentifyTemplate value.&quot;]},&quot;UpdateDeidentifyTemplateRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; Mask to control which fields get updated.&quot;]},&quot;GetDeidentifyTemplateRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the organization and deidentify template to be read, for&quot;,&quot; example `organizations/433245324/deidentifyTemplates/432452342` or&quot;,&quot; projects/project-id/deidentifyTemplates/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListDeidentifyTemplatesRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id or&quot;,&quot; organizations/my-org-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListDeidentifyTemplatesRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Page token to continue retrieval. Comes from previous call&quot;,&quot; to `ListDeidentifyTemplates`.&quot;]},&quot;ListDeidentifyTemplatesRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Size of the page, can be limited by server. If zero server returns&quot;,&quot; a page of max size 100.&quot;]},&quot;ListDeidentifyTemplatesRequest:order_by&quot;:{&quot;paramName&quot;:&quot;order_by&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Comma separated list of fields to order by,&quot;,&quot; followed by `asc` or `desc` postfix. This list is case-insensitive,&quot;,&quot; default sorting order is ascending, redundant space characters are&quot;,&quot; insignificant.&quot;,&quot;&quot;,&quot; Example: `name asc,update_time, create_time desc`&quot;,&quot;&quot;,&quot; Supported fields are:&quot;,&quot;&quot;,&quot; - `create_time`: corresponds to time the template was created.&quot;,&quot; - `update_time`: corresponds to time the template was last updated.&quot;,&quot; - `name`: corresponds to template&#39;s name.&quot;,&quot; - `display_name`: corresponds to template&#39;s display name.&quot;]},&quot;ListDeidentifyTemplatesRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location where deidentifications templates will be retrieved&quot;,&quot; from. Use `-` for all locations. Reserved for future extensions.&quot;]},&quot;ListDeidentifyTemplatesResponse:deidentify_templates&quot;:{&quot;paramName&quot;:&quot;deidentify_templates&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of deidentify templates, up to page_size in&quot;,&quot; ListDeidentifyTemplatesRequest.&quot;]},&quot;ListDeidentifyTemplatesResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If the next page is available then the next page token to be used&quot;,&quot; in following ListDeidentifyTemplates request.&quot;]},&quot;DeleteDeidentifyTemplateRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the organization and deidentify template to be deleted,&quot;,&quot; for example `organizations/433245324/deidentifyTemplates/432452342` or&quot;,&quot; projects/project-id/deidentifyTemplates/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;LargeCustomDictionaryConfig:output_path&quot;:{&quot;paramName&quot;:&quot;output_path&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CloudStoragePath&quot;,&quot;comments&quot;:[&quot; Location to store dictionary artifacts in Google Cloud Storage. These files&quot;,&quot; will only be accessible by project owners and the DLP API. If any of these&quot;,&quot; artifacts are modified, the dictionary is considered invalid and can no&quot;,&quot; longer be used.&quot;]},&quot;LargeCustomDictionaryConfig:cloud_storage_file_set&quot;:{&quot;paramName&quot;:&quot;cloud_storage_file_set&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.CloudStorageFileSet&quot;,&quot;comments&quot;:[&quot; Set of files containing newline-delimited lists of dictionary phrases.&quot;]},&quot;LargeCustomDictionaryConfig:big_query_field&quot;:{&quot;paramName&quot;:&quot;big_query_field&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.BigQueryField&quot;,&quot;comments&quot;:[&quot; Field in a BigQuery table where each cell represents a dictionary phrase.&quot;]},&quot;LargeCustomDictionaryStats:approx_num_phrases&quot;:{&quot;paramName&quot;:&quot;approx_num_phrases&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Approximate number of distinct phrases in the dictionary.&quot;]},&quot;StoredInfoTypeConfig:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Display name of the StoredInfoType (max 256 characters).&quot;]},&quot;StoredInfoTypeConfig:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Description of the StoredInfoType (max 256 characters).&quot;]},&quot;StoredInfoTypeConfig:large_custom_dictionary&quot;:{&quot;paramName&quot;:&quot;large_custom_dictionary&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.LargeCustomDictionaryConfig&quot;,&quot;comments&quot;:[&quot; StoredInfoType where findings are defined by a dictionary of phrases.&quot;]},&quot;StoredInfoTypeStats:large_custom_dictionary&quot;:{&quot;paramName&quot;:&quot;large_custom_dictionary&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.LargeCustomDictionaryStats&quot;,&quot;comments&quot;:[&quot; StoredInfoType where findings are defined by a dictionary of phrases.&quot;]},&quot;StoredInfoTypeVersion:config&quot;:{&quot;paramName&quot;:&quot;config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredInfoTypeConfig&quot;,&quot;comments&quot;:[&quot; StoredInfoType configuration.&quot;]},&quot;StoredInfoTypeVersion:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; Create timestamp of the version. Read-only, determined by the system&quot;,&quot; when the version is created.&quot;]},&quot;StoredInfoTypeVersion:state&quot;:{&quot;paramName&quot;:&quot;state&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredInfoTypeState&quot;,&quot;comments&quot;:[&quot; Stored info type version state. Read-only, updated by the system&quot;,&quot; during dictionary creation.&quot;]},&quot;StoredInfoTypeVersion:errors&quot;:{&quot;paramName&quot;:&quot;errors&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Errors that occurred when creating this storedInfoType version, or&quot;,&quot; anomalies detected in the storedInfoType data that render it unusable. Only&quot;,&quot; the five most recent errors will be displayed, with the most recent error&quot;,&quot; appearing first.&quot;,&quot;&quot;,&quot; For example, some of the data for stored custom dictionaries is put in&quot;,&quot; the user&#39;s Google Cloud Storage bucket, and if this data is modified or&quot;,&quot; deleted by the user or another system, the dictionary becomes invalid.&quot;,&quot;&quot;,&quot; If any errors occur, fix the problem indicated by the error message and&quot;,&quot; use the UpdateStoredInfoType API method to create another version of the&quot;,&quot; storedInfoType to continue using it, reusing the same `config` if it was&quot;,&quot; not the source of the error.&quot;]},&quot;StoredInfoTypeVersion:stats&quot;:{&quot;paramName&quot;:&quot;stats&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredInfoTypeStats&quot;,&quot;comments&quot;:[&quot; Statistics about this storedInfoType version.&quot;]},&quot;StoredInfoType:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Resource name.&quot;]},&quot;StoredInfoType:current_version&quot;:{&quot;paramName&quot;:&quot;current_version&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredInfoTypeVersion&quot;,&quot;comments&quot;:[&quot; Current version of the stored info type.&quot;]},&quot;StoredInfoType:pending_versions&quot;:{&quot;paramName&quot;:&quot;pending_versions&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Pending versions of the stored info type. Empty if no versions are&quot;,&quot; pending.&quot;]},&quot;CreateStoredInfoTypeRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id or&quot;,&quot; organizations/my-org-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateStoredInfoTypeRequest:config&quot;:{&quot;paramName&quot;:&quot;config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredInfoTypeConfig&quot;,&quot;comments&quot;:[&quot; Required. Configuration of the storedInfoType to create.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateStoredInfoTypeRequest:stored_info_type_id&quot;:{&quot;paramName&quot;:&quot;stored_info_type_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The storedInfoType ID can contain uppercase and lowercase letters,&quot;,&quot; numbers, and hyphens; that is, it must match the regular&quot;,&quot; expression: `[a-zA-Z&#92;&#92;&#92;&#92;d-_]+`. The maximum length is 100&quot;,&quot; characters. Can be empty to allow the system to generate one.&quot;]},&quot;CreateStoredInfoTypeRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location to store the stored infoType. Reserved for&quot;,&quot; future extensions.&quot;]},&quot;UpdateStoredInfoTypeRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of organization and storedInfoType to be updated, for&quot;,&quot; example `organizations/433245324/storedInfoTypes/432452342` or&quot;,&quot; projects/project-id/storedInfoTypes/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateStoredInfoTypeRequest:config&quot;:{&quot;paramName&quot;:&quot;config&quot;,&quot;paramType&quot;:&quot;.google.privacy.dlp.v2.StoredInfoTypeConfig&quot;,&quot;comments&quot;:[&quot; Updated configuration for the storedInfoType. If not provided, a new&quot;,&quot; version of the storedInfoType will be created with the existing&quot;,&quot; configuration.&quot;]},&quot;UpdateStoredInfoTypeRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; Mask to control which fields get updated.&quot;]},&quot;GetStoredInfoTypeRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the organization and storedInfoType to be read, for&quot;,&quot; example `organizations/433245324/storedInfoTypes/432452342` or&quot;,&quot; projects/project-id/storedInfoTypes/432452342.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListStoredInfoTypesRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The parent resource name, for example projects/my-project-id or&quot;,&quot; organizations/my-org-id.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListStoredInfoTypesRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Page token to continue retrieval. Comes from previous call&quot;,&quot; to `ListStoredInfoTypes`.&quot;]},&quot;ListStoredInfoTypesRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Size of the page, can be limited by server. If zero server returns&quot;,&quot; a page of max size 100.&quot;]},&quot;ListStoredInfoTypesRequest:order_by&quot;:{&quot;paramName&quot;:&quot;order_by&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Comma separated list of fields to order by,&quot;,&quot; followed by `asc` or `desc` postfix. This list is case-insensitive,&quot;,&quot; default sorting order is ascending, redundant space characters are&quot;,&quot; insignificant.&quot;,&quot;&quot;,&quot; Example: `name asc, display_name, create_time desc`&quot;,&quot;&quot;,&quot; Supported fields are:&quot;,&quot;&quot;,&quot; - `create_time`: corresponds to time the most recent version of the&quot;,&quot; resource was created.&quot;,&quot; - `state`: corresponds to the state of the resource.&quot;,&quot; - `name`: corresponds to resource name.&quot;,&quot; - `display_name`: corresponds to info type&#39;s display name.&quot;]},&quot;ListStoredInfoTypesRequest:location_id&quot;:{&quot;paramName&quot;:&quot;location_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The geographic location where stored infoTypes will be retrieved from.&quot;,&quot; Use `-` for all locations. Reserved for future extensions.&quot;]},&quot;ListStoredInfoTypesResponse:stored_info_types&quot;:{&quot;paramName&quot;:&quot;stored_info_types&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest.&quot;]},&quot;ListStoredInfoTypesResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; If the next page is available then the next page token to be used&quot;,&quot; in following ListStoredInfoTypes request.&quot;]},&quot;DeleteStoredInfoTypeRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. Resource name of the organization and storedInfoType to be deleted, for&quot;,&quot; example `organizations/433245324/storedInfoTypes/432452342` or&quot;,&quot; projects/project-id/storedInfoTypes/432452342.&quot;],&quot;fieldBehavior&quot;:2}}},&quot;retryableCodeMap&quot;:{&quot;codeEnumMapping&quot;:{&quot;0&quot;:&quot;OK&quot;,&quot;1&quot;:&quot;CANCELLED&quot;,&quot;2&quot;:&quot;UNKNOWN&quot;,&quot;3&quot;:&quot;INVALID_ARGUMENT&quot;,&quot;4&quot;:&quot;DEADLINE_EXCEEDED&quot;,&quot;5&quot;:&quot;NOT_FOUND&quot;,&quot;6&quot;:&quot;ALREADY_EXISTS&quot;,&quot;7&quot;:&quot;PERMISSION_DENIED&quot;,&quot;8&quot;:&quot;RESOURCE_EXHAUSTED&quot;,&quot;9&quot;:&quot;FAILED_PRECONDITION&quot;,&quot;10&quot;:&quot;ABORTED&quot;,&quot;11&quot;:&quot;OUT_OF_RANGE&quot;,&quot;12&quot;:&quot;UNIMPLEMENTED&quot;,&quot;13&quot;:&quot;INTERNAL&quot;,&quot;14&quot;:&quot;UNAVAILABLE&quot;,&quot;15&quot;:&quot;DATA_LOSS&quot;,&quot;16&quot;:&quot;UNAUTHENTICATED&quot;,&quot;OK&quot;:&quot;0&quot;,&quot;CANCELLED&quot;:&quot;1&quot;,&quot;UNKNOWN&quot;:&quot;2&quot;,&quot;INVALID_ARGUMENT&quot;:&quot;3&quot;,&quot;DEADLINE_EXCEEDED&quot;:&quot;4&quot;,&quot;NOT_FOUND&quot;:&quot;5&quot;,&quot;ALREADY_EXISTS&quot;:&quot;6&quot;,&quot;PERMISSION_DENIED&quot;:&quot;7&quot;,&quot;RESOURCE_EXHAUSTED&quot;:&quot;8&quot;,&quot;FAILED_PRECONDITION&quot;:&quot;9&quot;,&quot;ABORTED&quot;:&quot;10&quot;,&quot;OUT_OF_RANGE&quot;:&quot;11&quot;,&quot;UNIMPLEMENTED&quot;:&quot;12&quot;,&quot;INTERNAL&quot;:&quot;13&quot;,&quot;UNAVAILABLE&quot;:&quot;14&quot;,&quot;DATA_LOSS&quot;:&quot;15&quot;,&quot;UNAUTHENTICATED&quot;:&quot;16&quot;},&quot;uniqueCodesNamesMap&quot;:{&quot;&quot;:&quot;non_idempotent&quot;,&quot;deadline_exceeded_unavailable&quot;:&quot;idempotent&quot;},&quot;prettyCodesNamesMap&quot;:{&quot;non_idempotent&quot;:[],&quot;idempotent&quot;:[&quot;DEADLINE_EXCEEDED&quot;,&quot;UNAVAILABLE&quot;]},&quot;uniqueParamsNamesMap&quot;:{&quot;94312e9926796a52a8fcbbedaac41972e07ccd1c&quot;:&quot;default&quot;},&quot;prettyParamNamesMap&quot;:{&quot;default&quot;:{&quot;initial_retry_delay_millis&quot;:100,&quot;retry_delay_multiplier&quot;:1.3,&quot;max_retry_delay_millis&quot;:60000,&quot;initial_rpc_timeout_millis&quot;:60000,&quot;rpc_timeout_multiplier&quot;:1,&quot;max_rpc_timeout_millis&quot;:60000,&quot;total_timeout_millis&quot;:600000}}},&quot;grpcServiceConfig&quot;:{},&quot;bundleConfigs&quot;:[],&quot;internalMethods&quot;:[],&quot;bundleConfigsMethods&quot;:[],&quot;simpleMethods&quot;:[],&quot;longRunning&quot;:[],&quot;diregapicLRO&quot;:[],&quot;streaming&quot;:[],&quot;clientStreaming&quot;:[],&quot;serverStreaming&quot;:[],&quot;bidiStreaming&quot;:[],&quot;paging&quot;:[],&quot;hostname&quot;:&quot;&quot;,&quot;port&quot;:0,&quot;oauthScopes&quot;:[&quot;https://www.googleapis.com/auth/cloud-platform&quot;],&quot;pathTemplates&quot;:[{&quot;name&quot;:&quot;DlpJob&quot;,&quot;params&quot;:[&quot;project&quot;,&quot;dlp_job&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/DlpJob&quot;,&quot;pattern&quot;:[&quot;projects/{project}/dlpJobs/{dlp_job}&quot;]},{&quot;name&quot;:&quot;JobTrigger&quot;,&quot;params&quot;:[&quot;project&quot;,&quot;job_trigger&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/JobTrigger&quot;,&quot;pattern&quot;:[&quot;projects/{project}/jobTriggers/{job_trigger}&quot;]},{&quot;name&quot;:&quot;Organization&quot;,&quot;params&quot;:[&quot;organization&quot;],&quot;type&quot;:&quot;cloudresourcemanager.googleapis.com/Organization&quot;,&quot;pattern&quot;:[&quot;organizations/{organization}&quot;]},{&quot;name&quot;:&quot;organization_deidentify_template&quot;,&quot;params&quot;:[&quot;organization&quot;,&quot;deidentify_template&quot;],&quot;pattern&quot;:[&quot;organizations/{organization}/deidentifyTemplates/{deidentify_template}&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/DeidentifyTemplate&quot;},{&quot;name&quot;:&quot;organization_inspect_template&quot;,&quot;params&quot;:[&quot;organization&quot;,&quot;inspect_template&quot;],&quot;pattern&quot;:[&quot;organizations/{organization}/inspectTemplates/{inspect_template}&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/InspectTemplate&quot;},{&quot;name&quot;:&quot;organization_stored_info_type&quot;,&quot;params&quot;:[&quot;organization&quot;,&quot;stored_info_type&quot;],&quot;pattern&quot;:[&quot;organizations/{organization}/storedInfoTypes/{stored_info_type}&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/StoredInfoType&quot;},{&quot;name&quot;:&quot;Project&quot;,&quot;params&quot;:[&quot;project&quot;],&quot;type&quot;:&quot;cloudresourcemanager.googleapis.com/Project&quot;,&quot;pattern&quot;:[&quot;projects/{project}&quot;]},{&quot;name&quot;:&quot;project_deidentify_template&quot;,&quot;params&quot;:[&quot;project&quot;,&quot;deidentify_template&quot;],&quot;pattern&quot;:[&quot;projects/{project}/deidentifyTemplates/{deidentify_template}&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/DeidentifyTemplate&quot;},{&quot;name&quot;:&quot;project_inspect_template&quot;,&quot;params&quot;:[&quot;project&quot;,&quot;inspect_template&quot;],&quot;pattern&quot;:[&quot;projects/{project}/inspectTemplates/{inspect_template}&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/InspectTemplate&quot;},{&quot;name&quot;:&quot;project_stored_info_type&quot;,&quot;params&quot;:[&quot;project&quot;,&quot;stored_info_type&quot;],&quot;pattern&quot;:[&quot;projects/{project}/storedInfoTypes/{stored_info_type}&quot;],&quot;type&quot;:&quot;dlp.googleapis.com/StoredInfoType&quot;}]}

/**
 * Client JSON configuration object, loaded from
 * `src/v2/dlp_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './dlp_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  The Cloud Data Loss Prevention (DLP) API is a service that allows clients
 *  to detect the presence of Personally Identifiable Information (PII) and other
 *  privacy-sensitive data in user-supplied, unstructured data streams, like text
 *  blocks or images.
 *  The service also includes methods for sensitive data redaction and
 *  scheduling of data scans on Google Cloud Platform based data sets.
 *
 *  To learn more about concepts and find how-to guides see
 *  https://cloud.google.com/dlp/docs/.
 * @class
 * @memberof v2
 */
export class DlpServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  dlpServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of DlpServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new DlpServiceClient({fallback: true}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof DlpServiceClient;
    if (opts?.universe_domain && opts?.universeDomain && opts?.universe_domain !== opts?.universeDomain) {
      throw new Error('Please set either universe_domain or universeDomain, but not both.');
    }
    const universeDomainEnvVar = (typeof process === 'object' && typeof process.env === 'object') ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;
    this._universeDomain = opts?.universeDomain ?? opts?.universe_domain ?? universeDomainEnvVar ?? 'googleapis.com';
    this._servicePath = 'dlp.' + this._universeDomain;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      dlpJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/dlpJobs/{dlp_job}'
      ),
      jobTriggerPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/jobTriggers/{job_trigger}'
      ),
      organizationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}'
      ),
      organizationDeidentifyTemplatePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/deidentifyTemplates/{deidentify_template}'
      ),
      organizationInspectTemplatePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/inspectTemplates/{inspect_template}'
      ),
      organizationStoredInfoTypePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/storedInfoTypes/{stored_info_type}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      projectDeidentifyTemplatePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/deidentifyTemplates/{deidentify_template}'
      ),
      projectInspectTemplatePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/inspectTemplates/{inspect_template}'
      ),
      projectStoredInfoTypePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/storedInfoTypes/{stored_info_type}'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.privacy.dlp.v2.DlpService', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.dlpServiceStub) {
      return this.dlpServiceStub;
    }

    // Put together the "service stub" for
    // google.privacy.dlp.v2.DlpService.
    this.dlpServiceStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.privacy.dlp.v2.DlpService') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.privacy.dlp.v2.DlpService,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const dlpServiceStubMethods =
        [];
    for (const methodName of dlpServiceStubMethods) {
      const callPromise = this.dlpServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.dlpServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'dlp.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'dlp.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified dlpJob resource name string.
   *
   * @param {string} project
   * @param {string} dlp_job
   * @returns {string} Resource name string.
   */
  dlpJobPath(project:string,dlpJob:string) {
    return this.pathTemplates.dlpJobPathTemplate.render({
      project: project,
      dlp_job: dlpJob,
    });
  }

  /**
   * Parse the project from DlpJob resource.
   *
   * @param {string} dlpJobName
   *   A fully-qualified path representing DlpJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDlpJobName(dlpJobName: string) {
    return this.pathTemplates.dlpJobPathTemplate.match(dlpJobName).project;
  }

  /**
   * Parse the dlp_job from DlpJob resource.
   *
   * @param {string} dlpJobName
   *   A fully-qualified path representing DlpJob resource.
   * @returns {string} A string representing the dlp_job.
   */
  matchDlpJobFromDlpJobName(dlpJobName: string) {
    return this.pathTemplates.dlpJobPathTemplate.match(dlpJobName).dlp_job;
  }

  /**
   * Return a fully-qualified jobTrigger resource name string.
   *
   * @param {string} project
   * @param {string} job_trigger
   * @returns {string} Resource name string.
   */
  jobTriggerPath(project:string,jobTrigger:string) {
    return this.pathTemplates.jobTriggerPathTemplate.render({
      project: project,
      job_trigger: jobTrigger,
    });
  }

  /**
   * Parse the project from JobTrigger resource.
   *
   * @param {string} jobTriggerName
   *   A fully-qualified path representing JobTrigger resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromJobTriggerName(jobTriggerName: string) {
    return this.pathTemplates.jobTriggerPathTemplate.match(jobTriggerName).project;
  }

  /**
   * Parse the job_trigger from JobTrigger resource.
   *
   * @param {string} jobTriggerName
   *   A fully-qualified path representing JobTrigger resource.
   * @returns {string} A string representing the job_trigger.
   */
  matchJobTriggerFromJobTriggerName(jobTriggerName: string) {
    return this.pathTemplates.jobTriggerPathTemplate.match(jobTriggerName).job_trigger;
  }

  /**
   * Return a fully-qualified organization resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationPath(organization:string) {
    return this.pathTemplates.organizationPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from Organization resource.
   *
   * @param {string} organizationName
   *   A fully-qualified path representing Organization resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationName(organizationName: string) {
    return this.pathTemplates.organizationPathTemplate.match(organizationName).organization;
  }

  /**
   * Return a fully-qualified organizationDeidentifyTemplate resource name string.
   *
   * @param {string} organization
   * @param {string} deidentify_template
   * @returns {string} Resource name string.
   */
  organizationDeidentifyTemplatePath(organization:string,deidentifyTemplate:string) {
    return this.pathTemplates.organizationDeidentifyTemplatePathTemplate.render({
      organization: organization,
      deidentify_template: deidentifyTemplate,
    });
  }

  /**
   * Parse the organization from OrganizationDeidentifyTemplate resource.
   *
   * @param {string} organizationDeidentifyTemplateName
   *   A fully-qualified path representing organization_deidentify_template resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationDeidentifyTemplateName(organizationDeidentifyTemplateName: string) {
    return this.pathTemplates.organizationDeidentifyTemplatePathTemplate.match(organizationDeidentifyTemplateName).organization;
  }

  /**
   * Parse the deidentify_template from OrganizationDeidentifyTemplate resource.
   *
   * @param {string} organizationDeidentifyTemplateName
   *   A fully-qualified path representing organization_deidentify_template resource.
   * @returns {string} A string representing the deidentify_template.
   */
  matchDeidentifyTemplateFromOrganizationDeidentifyTemplateName(organizationDeidentifyTemplateName: string) {
    return this.pathTemplates.organizationDeidentifyTemplatePathTemplate.match(organizationDeidentifyTemplateName).deidentify_template;
  }

  /**
   * Return a fully-qualified organizationInspectTemplate resource name string.
   *
   * @param {string} organization
   * @param {string} inspect_template
   * @returns {string} Resource name string.
   */
  organizationInspectTemplatePath(organization:string,inspectTemplate:string) {
    return this.pathTemplates.organizationInspectTemplatePathTemplate.render({
      organization: organization,
      inspect_template: inspectTemplate,
    });
  }

  /**
   * Parse the organization from OrganizationInspectTemplate resource.
   *
   * @param {string} organizationInspectTemplateName
   *   A fully-qualified path representing organization_inspect_template resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationInspectTemplateName(organizationInspectTemplateName: string) {
    return this.pathTemplates.organizationInspectTemplatePathTemplate.match(organizationInspectTemplateName).organization;
  }

  /**
   * Parse the inspect_template from OrganizationInspectTemplate resource.
   *
   * @param {string} organizationInspectTemplateName
   *   A fully-qualified path representing organization_inspect_template resource.
   * @returns {string} A string representing the inspect_template.
   */
  matchInspectTemplateFromOrganizationInspectTemplateName(organizationInspectTemplateName: string) {
    return this.pathTemplates.organizationInspectTemplatePathTemplate.match(organizationInspectTemplateName).inspect_template;
  }

  /**
   * Return a fully-qualified organizationStoredInfoType resource name string.
   *
   * @param {string} organization
   * @param {string} stored_info_type
   * @returns {string} Resource name string.
   */
  organizationStoredInfoTypePath(organization:string,storedInfoType:string) {
    return this.pathTemplates.organizationStoredInfoTypePathTemplate.render({
      organization: organization,
      stored_info_type: storedInfoType,
    });
  }

  /**
   * Parse the organization from OrganizationStoredInfoType resource.
   *
   * @param {string} organizationStoredInfoTypeName
   *   A fully-qualified path representing organization_stored_info_type resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationStoredInfoTypeName(organizationStoredInfoTypeName: string) {
    return this.pathTemplates.organizationStoredInfoTypePathTemplate.match(organizationStoredInfoTypeName).organization;
  }

  /**
   * Parse the stored_info_type from OrganizationStoredInfoType resource.
   *
   * @param {string} organizationStoredInfoTypeName
   *   A fully-qualified path representing organization_stored_info_type resource.
   * @returns {string} A string representing the stored_info_type.
   */
  matchStoredInfoTypeFromOrganizationStoredInfoTypeName(organizationStoredInfoTypeName: string) {
    return this.pathTemplates.organizationStoredInfoTypePathTemplate.match(organizationStoredInfoTypeName).stored_info_type;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified projectDeidentifyTemplate resource name string.
   *
   * @param {string} project
   * @param {string} deidentify_template
   * @returns {string} Resource name string.
   */
  projectDeidentifyTemplatePath(project:string,deidentifyTemplate:string) {
    return this.pathTemplates.projectDeidentifyTemplatePathTemplate.render({
      project: project,
      deidentify_template: deidentifyTemplate,
    });
  }

  /**
   * Parse the project from ProjectDeidentifyTemplate resource.
   *
   * @param {string} projectDeidentifyTemplateName
   *   A fully-qualified path representing project_deidentify_template resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectDeidentifyTemplateName(projectDeidentifyTemplateName: string) {
    return this.pathTemplates.projectDeidentifyTemplatePathTemplate.match(projectDeidentifyTemplateName).project;
  }

  /**
   * Parse the deidentify_template from ProjectDeidentifyTemplate resource.
   *
   * @param {string} projectDeidentifyTemplateName
   *   A fully-qualified path representing project_deidentify_template resource.
   * @returns {string} A string representing the deidentify_template.
   */
  matchDeidentifyTemplateFromProjectDeidentifyTemplateName(projectDeidentifyTemplateName: string) {
    return this.pathTemplates.projectDeidentifyTemplatePathTemplate.match(projectDeidentifyTemplateName).deidentify_template;
  }

  /**
   * Return a fully-qualified projectInspectTemplate resource name string.
   *
   * @param {string} project
   * @param {string} inspect_template
   * @returns {string} Resource name string.
   */
  projectInspectTemplatePath(project:string,inspectTemplate:string) {
    return this.pathTemplates.projectInspectTemplatePathTemplate.render({
      project: project,
      inspect_template: inspectTemplate,
    });
  }

  /**
   * Parse the project from ProjectInspectTemplate resource.
   *
   * @param {string} projectInspectTemplateName
   *   A fully-qualified path representing project_inspect_template resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectInspectTemplateName(projectInspectTemplateName: string) {
    return this.pathTemplates.projectInspectTemplatePathTemplate.match(projectInspectTemplateName).project;
  }

  /**
   * Parse the inspect_template from ProjectInspectTemplate resource.
   *
   * @param {string} projectInspectTemplateName
   *   A fully-qualified path representing project_inspect_template resource.
   * @returns {string} A string representing the inspect_template.
   */
  matchInspectTemplateFromProjectInspectTemplateName(projectInspectTemplateName: string) {
    return this.pathTemplates.projectInspectTemplatePathTemplate.match(projectInspectTemplateName).inspect_template;
  }

  /**
   * Return a fully-qualified projectStoredInfoType resource name string.
   *
   * @param {string} project
   * @param {string} stored_info_type
   * @returns {string} Resource name string.
   */
  projectStoredInfoTypePath(project:string,storedInfoType:string) {
    return this.pathTemplates.projectStoredInfoTypePathTemplate.render({
      project: project,
      stored_info_type: storedInfoType,
    });
  }

  /**
   * Parse the project from ProjectStoredInfoType resource.
   *
   * @param {string} projectStoredInfoTypeName
   *   A fully-qualified path representing project_stored_info_type resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectStoredInfoTypeName(projectStoredInfoTypeName: string) {
    return this.pathTemplates.projectStoredInfoTypePathTemplate.match(projectStoredInfoTypeName).project;
  }

  /**
   * Parse the stored_info_type from ProjectStoredInfoType resource.
   *
   * @param {string} projectStoredInfoTypeName
   *   A fully-qualified path representing project_stored_info_type resource.
   * @returns {string} A string representing the stored_info_type.
   */
  matchStoredInfoTypeFromProjectStoredInfoTypeName(projectStoredInfoTypeName: string) {
    return this.pathTemplates.projectStoredInfoTypePathTemplate.match(projectStoredInfoTypeName).stored_info_type;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.dlpServiceStub && !this._terminated) {
      return this.dlpServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
