


'use strict';

function main() {
  // [START kms_decrypt_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the [CryptoKey][google.cloud.kms.v1.CryptoKey] to use for decryption.
   *  The server will choose the appropriate version.
   */
  // const name ='abc123'
  /**
   *  Required. The encrypted data originally returned in
   *  [EncryptResponse.ciphertext][google.cloud.kms.v1.EncryptResponse.ciphertext].
   */
  // const ciphertext ='Buffer'
  /**
   *  Optional data that must match the data originally supplied in
   *  [EncryptRequest.additional_authenticated_data][google.cloud.kms.v1.EncryptRequest.additional_authenticated_data].
   */
  // const additionalAuthenticatedData ='Buffer'

  // Imports the Kms library
  const {KeyManagementServiceClient} = require('kms');

  // Instantiates a client
  const kmsClient = new KeyManagementServiceClient();

  async function decrypt() {
    // Construct request
    const request = {
    };

    // Run request
    const response = await kmsClient.decrypt(request);
    console.log(`Response: ${response}`);
  }

  decrypt();
  // [END kms_decrypt_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
