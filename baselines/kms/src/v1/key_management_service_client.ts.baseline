// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import * as gax from 'google-gax';
import {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall, IamClient, IamProtos} from 'google-gax';

import { Transform } from 'stream';
import { RequestType } from 'google-gax/build/src/apitypes';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/key_management_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './key_management_service_client_config.json';

const version = require('../../../package.json').version;

/**
 *  Google Cloud Key Management Service
 *
 *  Manages cryptographic keys and operations using those keys. Implements a REST
 *  model with the following objects:
 *
 *  * {@link google.cloud.kms.v1.KeyRing|KeyRing}
 *  * {@link google.cloud.kms.v1.CryptoKey|CryptoKey}
 *  * {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}
 *
 *  If you are using manual gRPC libraries, see
 *  [Using gRPC with Cloud KMS](https://cloud.google.com/kms/docs/grpc).
 * @class
 * @memberof v1
 */
export class KeyManagementServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  keyManagementServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of KeyManagementServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP fallback mode.
   *     In fallback mode, a special browser-compatible transport implementation is used
   *     instead of gRPC transport. In browser context (if the `window` object is defined)
   *     the fallback mode is enabled automatically; set `options.fallback` to `false`
   *     if you need to override this behavior.
   */
  constructor(opts?: ClientOptions) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof KeyManagementServiceClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new IamClient(this._gaxGrpc, opts);
  

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest' ) {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listKeyRings:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'keyRings'),
      listCryptoKeys:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'cryptoKeys'),
      listCryptoKeyVersions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'cryptoKeyVersions'),
      listImportJobs:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'importJobs')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.kms.v1.KeyManagementService', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = gax.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.keyManagementServiceStub) {
      return this.keyManagementServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.kms.v1.KeyManagementService.
    this.keyManagementServiceStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.kms.v1.KeyManagementService') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.kms.v1.KeyManagementService,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const keyManagementServiceStubMethods =
        ['listKeyRings', 'listCryptoKeys', 'listCryptoKeyVersions', 'listImportJobs', 'getKeyRing', 'getCryptoKey', 'getCryptoKeyVersion', 'getPublicKey', 'getImportJob', 'createKeyRing', 'createCryptoKey', 'createCryptoKeyVersion', 'importCryptoKeyVersion', 'createImportJob', 'updateCryptoKey', 'updateCryptoKeyVersion', 'encrypt', 'decrypt', 'asymmetricSign', 'asymmetricDecrypt', 'updateCryptoKeyPrimaryVersion', 'destroyCryptoKeyVersion', 'restoreCryptoKeyVersion'];
    for (const methodName of keyManagementServiceStubMethods) {
      const callPromise = this.keyManagementServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.keyManagementServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'cloudkms.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'cloudkms.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform',
      'https://www.googleapis.com/auth/cloudkms'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Returns metadata for a given {@link google.cloud.kms.v1.KeyRing|KeyRing}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The {@link google.cloud.kms.v1.KeyRing.name|name} of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to get.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [KeyRing]{@link google.cloud.kms.v1.KeyRing}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.get_key_ring.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_GetKeyRing_async
 */
  getKeyRing(
      request?: protos.google.cloud.kms.v1.IGetKeyRingRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IKeyRing,
        protos.google.cloud.kms.v1.IGetKeyRingRequest|undefined, {}|undefined
      ]>;
  getKeyRing(
      request: protos.google.cloud.kms.v1.IGetKeyRingRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.IGetKeyRingRequest|null|undefined,
          {}|null|undefined>): void;
  getKeyRing(
      request: protos.google.cloud.kms.v1.IGetKeyRingRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.IGetKeyRingRequest|null|undefined,
          {}|null|undefined>): void;
  getKeyRing(
      request?: protos.google.cloud.kms.v1.IGetKeyRingRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.IGetKeyRingRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.IGetKeyRingRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IKeyRing,
        protos.google.cloud.kms.v1.IGetKeyRingRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getKeyRing(request, options, callback);
  }
/**
 * Returns metadata for a given {@link google.cloud.kms.v1.CryptoKey|CryptoKey}, as well as its
 * {@link google.cloud.kms.v1.CryptoKey.primary|primary} {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The {@link google.cloud.kms.v1.CryptoKey.name|name} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to get.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.get_crypto_key.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_GetCryptoKey_async
 */
  getCryptoKey(
      request?: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.IGetCryptoKeyRequest|undefined, {}|undefined
      ]>;
  getCryptoKey(
      request: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IGetCryptoKeyRequest|null|undefined,
          {}|null|undefined>): void;
  getCryptoKey(
      request: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IGetCryptoKeyRequest|null|undefined,
          {}|null|undefined>): void;
  getCryptoKey(
      request?: protos.google.cloud.kms.v1.IGetCryptoKeyRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IGetCryptoKeyRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IGetCryptoKeyRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.IGetCryptoKeyRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getCryptoKey(request, options, callback);
  }
/**
 * Returns metadata for a given {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The {@link google.cloud.kms.v1.CryptoKeyVersion.name|name} of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to get.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.get_crypto_key_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_GetCryptoKeyVersion_async
 */
  getCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest|undefined, {}|undefined
      ]>;
  getCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  getCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  getCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IGetCryptoKeyVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getCryptoKeyVersion(request, options, callback);
  }
/**
 * Returns the public key for the given {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}. The
 * {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} must be
 * {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN|ASYMMETRIC_SIGN} or
 * {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_DECRYPT|ASYMMETRIC_DECRYPT}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The {@link google.cloud.kms.v1.CryptoKeyVersion.name|name} of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} public key to
 *   get.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [PublicKey]{@link google.cloud.kms.v1.PublicKey}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.get_public_key.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_GetPublicKey_async
 */
  getPublicKey(
      request?: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IPublicKey,
        protos.google.cloud.kms.v1.IGetPublicKeyRequest|undefined, {}|undefined
      ]>;
  getPublicKey(
      request: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IPublicKey,
          protos.google.cloud.kms.v1.IGetPublicKeyRequest|null|undefined,
          {}|null|undefined>): void;
  getPublicKey(
      request: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IPublicKey,
          protos.google.cloud.kms.v1.IGetPublicKeyRequest|null|undefined,
          {}|null|undefined>): void;
  getPublicKey(
      request?: protos.google.cloud.kms.v1.IGetPublicKeyRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IPublicKey,
          protos.google.cloud.kms.v1.IGetPublicKeyRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IPublicKey,
          protos.google.cloud.kms.v1.IGetPublicKeyRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IPublicKey,
        protos.google.cloud.kms.v1.IGetPublicKeyRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getPublicKey(request, options, callback);
  }
/**
 * Returns metadata for a given {@link google.cloud.kms.v1.ImportJob|ImportJob}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The {@link google.cloud.kms.v1.ImportJob.name|name} of the {@link google.cloud.kms.v1.ImportJob|ImportJob} to get.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ImportJob]{@link google.cloud.kms.v1.ImportJob}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.get_import_job.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_GetImportJob_async
 */
  getImportJob(
      request?: protos.google.cloud.kms.v1.IGetImportJobRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IImportJob,
        protos.google.cloud.kms.v1.IGetImportJobRequest|undefined, {}|undefined
      ]>;
  getImportJob(
      request: protos.google.cloud.kms.v1.IGetImportJobRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.IGetImportJobRequest|null|undefined,
          {}|null|undefined>): void;
  getImportJob(
      request: protos.google.cloud.kms.v1.IGetImportJobRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.IGetImportJobRequest|null|undefined,
          {}|null|undefined>): void;
  getImportJob(
      request?: protos.google.cloud.kms.v1.IGetImportJobRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.IGetImportJobRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.IGetImportJobRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IImportJob,
        protos.google.cloud.kms.v1.IGetImportJobRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getImportJob(request, options, callback);
  }
/**
 * Create a new {@link google.cloud.kms.v1.KeyRing|KeyRing} in a given Project and Location.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the location associated with the
 *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
 * @param {string} request.keyRingId
 *   Required. It must be unique within a location and match the regular
 *   expression `[a-zA-Z0-9_-]{1,63}`
 * @param {google.cloud.kms.v1.KeyRing} request.keyRing
 *   A {@link google.cloud.kms.v1.KeyRing|KeyRing} with initial field values.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [KeyRing]{@link google.cloud.kms.v1.KeyRing}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.create_key_ring.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_CreateKeyRing_async
 */
  createKeyRing(
      request?: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IKeyRing,
        protos.google.cloud.kms.v1.ICreateKeyRingRequest|undefined, {}|undefined
      ]>;
  createKeyRing(
      request: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.ICreateKeyRingRequest|null|undefined,
          {}|null|undefined>): void;
  createKeyRing(
      request: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.ICreateKeyRingRequest|null|undefined,
          {}|null|undefined>): void;
  createKeyRing(
      request?: protos.google.cloud.kms.v1.ICreateKeyRingRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.ICreateKeyRingRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IKeyRing,
          protos.google.cloud.kms.v1.ICreateKeyRingRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IKeyRing,
        protos.google.cloud.kms.v1.ICreateKeyRingRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createKeyRing(request, options, callback);
  }
/**
 * Create a new {@link google.cloud.kms.v1.CryptoKey|CryptoKey} within a {@link google.cloud.kms.v1.KeyRing|KeyRing}.
 *
 * {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} and
 * {@link google.cloud.kms.v1.CryptoKeyVersionTemplate.algorithm|CryptoKey.version_template.algorithm}
 * are required.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The {@link google.cloud.kms.v1.KeyRing.name|name} of the KeyRing associated with the
 *   {@link google.cloud.kms.v1.CryptoKey|CryptoKeys}.
 * @param {string} request.cryptoKeyId
 *   Required. It must be unique within a KeyRing and match the regular
 *   expression `[a-zA-Z0-9_-]{1,63}`
 * @param {google.cloud.kms.v1.CryptoKey} request.cryptoKey
 *   A {@link google.cloud.kms.v1.CryptoKey|CryptoKey} with initial field values.
 * @param {boolean} request.skipInitialVersionCreation
 *   If set to true, the request will create a {@link google.cloud.kms.v1.CryptoKey|CryptoKey} without any
 *   {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions}. You must manually call
 *   {@link google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion|CreateCryptoKeyVersion} or
 *   {@link google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion|ImportCryptoKeyVersion}
 *   before you can use this {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.create_crypto_key.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_CreateCryptoKey_async
 */
  createCryptoKey(
      request?: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.ICreateCryptoKeyRequest|undefined, {}|undefined
      ]>;
  createCryptoKey(
      request: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.ICreateCryptoKeyRequest|null|undefined,
          {}|null|undefined>): void;
  createCryptoKey(
      request: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.ICreateCryptoKeyRequest|null|undefined,
          {}|null|undefined>): void;
  createCryptoKey(
      request?: protos.google.cloud.kms.v1.ICreateCryptoKeyRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.ICreateCryptoKeyRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.ICreateCryptoKeyRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.ICreateCryptoKeyRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createCryptoKey(request, options, callback);
  }
/**
 * Create a new {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} in a {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
 *
 * The server will assign the next sequential id. If unset,
 * {@link google.cloud.kms.v1.CryptoKeyVersion.state|state} will be set to
 * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED|ENABLED}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The {@link google.cloud.kms.v1.CryptoKey.name|name} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} associated with
 *   the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion} request.cryptoKeyVersion
 *   A {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with initial field values.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.create_crypto_key_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_CreateCryptoKeyVersion_async
 */
  createCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest|undefined, {}|undefined
      ]>;
  createCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  createCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  createCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.ICreateCryptoKeyVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createCryptoKeyVersion(request, options, callback);
  }
/**
 * Imports a new {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} into an existing {@link google.cloud.kms.v1.CryptoKey|CryptoKey} using the
 * wrapped key material provided in the request.
 *
 * The version ID will be assigned the next sequential id within the
 * {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The {@link google.cloud.kms.v1.CryptoKey.name|name} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to
 *   be imported into.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm} request.algorithm
 *   Required. The {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm|algorithm} of
 *   the key being imported. This does not need to match the
 *   {@link google.cloud.kms.v1.CryptoKey.version_template|version_template} of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} this
 *   version imports into.
 * @param {string} request.importJob
 *   Required. The {@link google.cloud.kms.v1.ImportJob.name|name} of the {@link google.cloud.kms.v1.ImportJob|ImportJob} that was used to
 *   wrap this key material.
 * @param {Buffer} request.rsaAesWrappedKey
 *   Wrapped key material produced with
 *   {@link google.cloud.kms.v1.ImportJob.ImportMethod.RSA_OAEP_3072_SHA1_AES_256|RSA_OAEP_3072_SHA1_AES_256}
 *   or
 *   {@link google.cloud.kms.v1.ImportJob.ImportMethod.RSA_OAEP_4096_SHA1_AES_256|RSA_OAEP_4096_SHA1_AES_256}.
 *
 *   This field contains the concatenation of two wrapped keys:
 *   <ol>
 *     <li>An ephemeral AES-256 wrapping key wrapped with the
 *         {@link google.cloud.kms.v1.ImportJob.public_key|public_key} using RSAES-OAEP with SHA-1,
 *         MGF1 with SHA-1, and an empty label.
 *     </li>
 *     <li>The key to be imported, wrapped with the ephemeral AES-256 key
 *         using AES-KWP (RFC 5649).
 *     </li>
 *   </ol>
 *
 *   This format is the same as the format produced by PKCS#11 mechanism
 *   CKM_RSA_AES_KEY_WRAP.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.import_crypto_key_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_ImportCryptoKeyVersion_async
 */
  importCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest|undefined, {}|undefined
      ]>;
  importCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  importCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  importCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IImportCryptoKeyVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.importCryptoKeyVersion(request, options, callback);
  }
/**
 * Create a new {@link google.cloud.kms.v1.ImportJob|ImportJob} within a {@link google.cloud.kms.v1.KeyRing|KeyRing}.
 *
 * {@link google.cloud.kms.v1.ImportJob.import_method|ImportJob.import_method} is required.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The {@link google.cloud.kms.v1.KeyRing.name|name} of the {@link google.cloud.kms.v1.KeyRing|KeyRing} associated with the
 *   {@link google.cloud.kms.v1.ImportJob|ImportJobs}.
 * @param {string} request.importJobId
 *   Required. It must be unique within a KeyRing and match the regular
 *   expression `[a-zA-Z0-9_-]{1,63}`
 * @param {google.cloud.kms.v1.ImportJob} request.importJob
 *   Required. An {@link google.cloud.kms.v1.ImportJob|ImportJob} with initial field values.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ImportJob]{@link google.cloud.kms.v1.ImportJob}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.create_import_job.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_CreateImportJob_async
 */
  createImportJob(
      request?: protos.google.cloud.kms.v1.ICreateImportJobRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IImportJob,
        protos.google.cloud.kms.v1.ICreateImportJobRequest|undefined, {}|undefined
      ]>;
  createImportJob(
      request: protos.google.cloud.kms.v1.ICreateImportJobRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.ICreateImportJobRequest|null|undefined,
          {}|null|undefined>): void;
  createImportJob(
      request: protos.google.cloud.kms.v1.ICreateImportJobRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.ICreateImportJobRequest|null|undefined,
          {}|null|undefined>): void;
  createImportJob(
      request?: protos.google.cloud.kms.v1.ICreateImportJobRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.ICreateImportJobRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IImportJob,
          protos.google.cloud.kms.v1.ICreateImportJobRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IImportJob,
        protos.google.cloud.kms.v1.ICreateImportJobRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createImportJob(request, options, callback);
  }
/**
 * Update a {@link google.cloud.kms.v1.CryptoKey|CryptoKey}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.kms.v1.CryptoKey} request.cryptoKey
 *   {@link google.cloud.kms.v1.CryptoKey|CryptoKey} with updated values.
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Required list of fields to be updated in this request.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.update_crypto_key.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_UpdateCryptoKey_async
 */
  updateCryptoKey(
      request?: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest|undefined, {}|undefined
      ]>;
  updateCryptoKey(
      request: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest|null|undefined,
          {}|null|undefined>): void;
  updateCryptoKey(
      request: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest|null|undefined,
          {}|null|undefined>): void;
  updateCryptoKey(
      request?: protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.IUpdateCryptoKeyRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'crypto_key.name': request.cryptoKey!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateCryptoKey(request, options, callback);
  }
/**
 * Update a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}'s metadata.
 *
 * {@link google.cloud.kms.v1.CryptoKeyVersion.state|state} may be changed between
 * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED|ENABLED} and
 * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED|DISABLED} using this
 * method. See {@link google.cloud.kms.v1.KeyManagementService.DestroyCryptoKeyVersion|DestroyCryptoKeyVersion} and {@link google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion|RestoreCryptoKeyVersion} to
 * move between other states.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.kms.v1.CryptoKeyVersion} request.cryptoKeyVersion
 *   {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with updated values.
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Required list of fields to be updated in this request.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.update_crypto_key_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_UpdateCryptoKeyVersion_async
 */
  updateCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest|undefined, {}|undefined
      ]>;
  updateCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  updateCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  updateCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IUpdateCryptoKeyVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'crypto_key_version.name': request.cryptoKeyVersion!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateCryptoKeyVersion(request, options, callback);
  }
/**
 * Encrypts data, so that it can only be recovered by a call to {@link google.cloud.kms.v1.KeyManagementService.Decrypt|Decrypt}.
 * The {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} must be
 * {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT|ENCRYPT_DECRYPT}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} or {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}
 *   to use for encryption.
 *
 *   If a {@link google.cloud.kms.v1.CryptoKey|CryptoKey} is specified, the server will use its
 *   {@link google.cloud.kms.v1.CryptoKey.primary|primary version}.
 * @param {Buffer} request.plaintext
 *   Required. The data to encrypt. Must be no larger than 64KiB.
 *
 *   The maximum size depends on the key version's
 *   {@link google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level|protection_level}. For
 *   {@link google.cloud.kms.v1.ProtectionLevel.SOFTWARE|SOFTWARE} keys, the plaintext must be no larger
 *   than 64KiB. For {@link google.cloud.kms.v1.ProtectionLevel.HSM|HSM} keys, the combined length of the
 *   plaintext and additional_authenticated_data fields must be no larger than
 *   8KiB.
 * @param {Buffer} request.additionalAuthenticatedData
 *   Optional data that, if specified, must also be provided during decryption
 *   through {@link google.cloud.kms.v1.DecryptRequest.additional_authenticated_data|DecryptRequest.additional_authenticated_data}.
 *
 *   The maximum size depends on the key version's
 *   {@link google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level|protection_level}. For
 *   {@link google.cloud.kms.v1.ProtectionLevel.SOFTWARE|SOFTWARE} keys, the AAD must be no larger than
 *   64KiB. For {@link google.cloud.kms.v1.ProtectionLevel.HSM|HSM} keys, the combined length of the
 *   plaintext and additional_authenticated_data fields must be no larger than
 *   8KiB.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [EncryptResponse]{@link google.cloud.kms.v1.EncryptResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.encrypt.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_Encrypt_async
 */
  encrypt(
      request?: protos.google.cloud.kms.v1.IEncryptRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IEncryptResponse,
        protos.google.cloud.kms.v1.IEncryptRequest|undefined, {}|undefined
      ]>;
  encrypt(
      request: protos.google.cloud.kms.v1.IEncryptRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IEncryptResponse,
          protos.google.cloud.kms.v1.IEncryptRequest|null|undefined,
          {}|null|undefined>): void;
  encrypt(
      request: protos.google.cloud.kms.v1.IEncryptRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IEncryptResponse,
          protos.google.cloud.kms.v1.IEncryptRequest|null|undefined,
          {}|null|undefined>): void;
  encrypt(
      request?: protos.google.cloud.kms.v1.IEncryptRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IEncryptResponse,
          protos.google.cloud.kms.v1.IEncryptRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IEncryptResponse,
          protos.google.cloud.kms.v1.IEncryptRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IEncryptResponse,
        protos.google.cloud.kms.v1.IEncryptRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.encrypt(request, options, callback);
  }
/**
 * Decrypts data that was protected by {@link google.cloud.kms.v1.KeyManagementService.Encrypt|Encrypt}. The {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose}
 * must be {@link google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT|ENCRYPT_DECRYPT}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to use for decryption.
 *   The server will choose the appropriate version.
 * @param {Buffer} request.ciphertext
 *   Required. The encrypted data originally returned in
 *   {@link google.cloud.kms.v1.EncryptResponse.ciphertext|EncryptResponse.ciphertext}.
 * @param {Buffer} request.additionalAuthenticatedData
 *   Optional data that must match the data originally supplied in
 *   {@link google.cloud.kms.v1.EncryptRequest.additional_authenticated_data|EncryptRequest.additional_authenticated_data}.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [DecryptResponse]{@link google.cloud.kms.v1.DecryptResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.decrypt.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_Decrypt_async
 */
  decrypt(
      request?: protos.google.cloud.kms.v1.IDecryptRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IDecryptResponse,
        protos.google.cloud.kms.v1.IDecryptRequest|undefined, {}|undefined
      ]>;
  decrypt(
      request: protos.google.cloud.kms.v1.IDecryptRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IDecryptResponse,
          protos.google.cloud.kms.v1.IDecryptRequest|null|undefined,
          {}|null|undefined>): void;
  decrypt(
      request: protos.google.cloud.kms.v1.IDecryptRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IDecryptResponse,
          protos.google.cloud.kms.v1.IDecryptRequest|null|undefined,
          {}|null|undefined>): void;
  decrypt(
      request?: protos.google.cloud.kms.v1.IDecryptRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IDecryptResponse,
          protos.google.cloud.kms.v1.IDecryptRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IDecryptResponse,
          protos.google.cloud.kms.v1.IDecryptRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IDecryptResponse,
        protos.google.cloud.kms.v1.IDecryptRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.decrypt(request, options, callback);
  }
/**
 * Signs data using a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose}
 * ASYMMETRIC_SIGN, producing a signature that can be verified with the public
 * key retrieved from {@link google.cloud.kms.v1.KeyManagementService.GetPublicKey|GetPublicKey}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to use for signing.
 * @param {google.cloud.kms.v1.Digest} request.digest
 *   Required. The digest of the data to sign. The digest must be produced with
 *   the same digest algorithm as specified by the key version's
 *   {@link google.cloud.kms.v1.CryptoKeyVersion.algorithm|algorithm}.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [AsymmetricSignResponse]{@link google.cloud.kms.v1.AsymmetricSignResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.asymmetric_sign.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_AsymmetricSign_async
 */
  asymmetricSign(
      request?: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IAsymmetricSignResponse,
        protos.google.cloud.kms.v1.IAsymmetricSignRequest|undefined, {}|undefined
      ]>;
  asymmetricSign(
      request: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IAsymmetricSignResponse,
          protos.google.cloud.kms.v1.IAsymmetricSignRequest|null|undefined,
          {}|null|undefined>): void;
  asymmetricSign(
      request: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IAsymmetricSignResponse,
          protos.google.cloud.kms.v1.IAsymmetricSignRequest|null|undefined,
          {}|null|undefined>): void;
  asymmetricSign(
      request?: protos.google.cloud.kms.v1.IAsymmetricSignRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IAsymmetricSignResponse,
          protos.google.cloud.kms.v1.IAsymmetricSignRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IAsymmetricSignResponse,
          protos.google.cloud.kms.v1.IAsymmetricSignRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IAsymmetricSignResponse,
        protos.google.cloud.kms.v1.IAsymmetricSignRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.asymmetricSign(request, options, callback);
  }
/**
 * Decrypts data that was encrypted with a public key retrieved from
 * {@link google.cloud.kms.v1.KeyManagementService.GetPublicKey|GetPublicKey} corresponding to a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} with
 * {@link google.cloud.kms.v1.CryptoKey.purpose|CryptoKey.purpose} ASYMMETRIC_DECRYPT.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to use for
 *   decryption.
 * @param {Buffer} request.ciphertext
 *   Required. The data encrypted with the named {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion}'s public
 *   key using OAEP.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [AsymmetricDecryptResponse]{@link google.cloud.kms.v1.AsymmetricDecryptResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.asymmetric_decrypt.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_AsymmetricDecrypt_async
 */
  asymmetricDecrypt(
      request?: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
        protos.google.cloud.kms.v1.IAsymmetricDecryptRequest|undefined, {}|undefined
      ]>;
  asymmetricDecrypt(
      request: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
          protos.google.cloud.kms.v1.IAsymmetricDecryptRequest|null|undefined,
          {}|null|undefined>): void;
  asymmetricDecrypt(
      request: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
          protos.google.cloud.kms.v1.IAsymmetricDecryptRequest|null|undefined,
          {}|null|undefined>): void;
  asymmetricDecrypt(
      request?: protos.google.cloud.kms.v1.IAsymmetricDecryptRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
          protos.google.cloud.kms.v1.IAsymmetricDecryptRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
          protos.google.cloud.kms.v1.IAsymmetricDecryptRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.IAsymmetricDecryptResponse,
        protos.google.cloud.kms.v1.IAsymmetricDecryptRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.asymmetricDecrypt(request, options, callback);
  }
/**
 * Update the version of a {@link google.cloud.kms.v1.CryptoKey|CryptoKey} that will be used in {@link google.cloud.kms.v1.KeyManagementService.Encrypt|Encrypt}.
 *
 * Returns an error if called on an asymmetric key.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to update.
 * @param {string} request.cryptoKeyVersionId
 *   The id of the child {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to use as primary.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.update_crypto_key_primary_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_UpdateCryptoKeyPrimaryVersion_async
 */
  updateCryptoKeyPrimaryVersion(
      request?: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest|undefined, {}|undefined
      ]>;
  updateCryptoKeyPrimaryVersion(
      request: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest|null|undefined,
          {}|null|undefined>): void;
  updateCryptoKeyPrimaryVersion(
      request: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest|null|undefined,
          {}|null|undefined>): void;
  updateCryptoKeyPrimaryVersion(
      request?: protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKey,
          protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey,
        protos.google.cloud.kms.v1.IUpdateCryptoKeyPrimaryVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateCryptoKeyPrimaryVersion(request, options, callback);
  }
/**
 * Schedule a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} for destruction.
 *
 * Upon calling this method, {@link google.cloud.kms.v1.CryptoKeyVersion.state|CryptoKeyVersion.state} will be set to
 * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED|DESTROY_SCHEDULED}
 * and {@link google.cloud.kms.v1.CryptoKeyVersion.destroy_time|destroy_time} will be set to a time 24
 * hours in the future, at which point the {@link google.cloud.kms.v1.CryptoKeyVersion.state|state}
 * will be changed to
 * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROYED|DESTROYED}, and the key
 * material will be irrevocably destroyed.
 *
 * Before the {@link google.cloud.kms.v1.CryptoKeyVersion.destroy_time|destroy_time} is reached,
 * {@link google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion|RestoreCryptoKeyVersion} may be called to reverse the process.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to destroy.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.destroy_crypto_key_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_DestroyCryptoKeyVersion_async
 */
  destroyCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest|undefined, {}|undefined
      ]>;
  destroyCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  destroyCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  destroyCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IDestroyCryptoKeyVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.destroyCryptoKeyVersion(request, options, callback);
  }
/**
 * Restore a {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} in the
 * {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED|DESTROY_SCHEDULED}
 * state.
 *
 * Upon restoration of the CryptoKeyVersion, {@link google.cloud.kms.v1.CryptoKeyVersion.state|state}
 * will be set to {@link google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED|DISABLED},
 * and {@link google.cloud.kms.v1.CryptoKeyVersion.destroy_time|destroy_time} will be cleared.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   The resource name of the {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersion} to restore.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.restore_crypto_key_version.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_RestoreCryptoKeyVersion_async
 */
  restoreCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest|undefined, {}|undefined
      ]>;
  restoreCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  restoreCryptoKeyVersion(
      request: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
      callback: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>): void;
  restoreCryptoKeyVersion(
      request?: protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.kms.v1.ICryptoKeyVersion,
          protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion,
        protos.google.cloud.kms.v1.IRestoreCryptoKeyVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.restoreCryptoKeyVersion(request, options, callback);
  }

 /**
 * Lists {@link google.cloud.kms.v1.KeyRing|KeyRings}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the location associated with the
 *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.KeyRing|KeyRings} to include in the
 *   response.  Further {@link google.cloud.kms.v1.KeyRing|KeyRings} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token} in a subsequent
 *   request.  If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token}.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [KeyRing]{@link google.cloud.kms.v1.KeyRing}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listKeyRingsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listKeyRings(
      request?: protos.google.cloud.kms.v1.IListKeyRingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IKeyRing[],
        protos.google.cloud.kms.v1.IListKeyRingsRequest|null,
        protos.google.cloud.kms.v1.IListKeyRingsResponse
      ]>;
  listKeyRings(
      request: protos.google.cloud.kms.v1.IListKeyRingsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListKeyRingsRequest,
          protos.google.cloud.kms.v1.IListKeyRingsResponse|null|undefined,
          protos.google.cloud.kms.v1.IKeyRing>): void;
  listKeyRings(
      request: protos.google.cloud.kms.v1.IListKeyRingsRequest,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListKeyRingsRequest,
          protos.google.cloud.kms.v1.IListKeyRingsResponse|null|undefined,
          protos.google.cloud.kms.v1.IKeyRing>): void;
  listKeyRings(
      request?: protos.google.cloud.kms.v1.IListKeyRingsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.kms.v1.IListKeyRingsRequest,
          protos.google.cloud.kms.v1.IListKeyRingsResponse|null|undefined,
          protos.google.cloud.kms.v1.IKeyRing>,
      callback?: PaginationCallback<
          protos.google.cloud.kms.v1.IListKeyRingsRequest,
          protos.google.cloud.kms.v1.IListKeyRingsResponse|null|undefined,
          protos.google.cloud.kms.v1.IKeyRing>):
      Promise<[
        protos.google.cloud.kms.v1.IKeyRing[],
        protos.google.cloud.kms.v1.IListKeyRingsRequest|null,
        protos.google.cloud.kms.v1.IListKeyRingsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listKeyRings(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the location associated with the
 *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.KeyRing|KeyRings} to include in the
 *   response.  Further {@link google.cloud.kms.v1.KeyRing|KeyRings} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token} in a subsequent
 *   request.  If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token}.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [KeyRing]{@link google.cloud.kms.v1.KeyRing} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listKeyRingsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listKeyRingsStream(
      request?: protos.google.cloud.kms.v1.IListKeyRingsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listKeyRings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listKeyRings.createStream(
      this.innerApiCalls.listKeyRings as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listKeyRings`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the location associated with the
 *   {@link google.cloud.kms.v1.KeyRing|KeyRings}, in the format `projects/* /locations/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.KeyRing|KeyRings} to include in the
 *   response.  Further {@link google.cloud.kms.v1.KeyRing|KeyRings} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token} in a subsequent
 *   request.  If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListKeyRingsResponse.next_page_token|ListKeyRingsResponse.next_page_token}.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [KeyRing]{@link google.cloud.kms.v1.KeyRing}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.list_key_rings.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_ListKeyRings_async
 */
  listKeyRingsAsync(
      request?: protos.google.cloud.kms.v1.IListKeyRingsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.kms.v1.IKeyRing>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listKeyRings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listKeyRings.asyncIterate(
      this.innerApiCalls['listKeyRings'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.IKeyRing>;
  }
 /**
 * Lists {@link google.cloud.kms.v1.CryptoKey|CryptoKeys}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
 *   `projects/* /locations/* /keyRings/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} to include in the
 *   response.  Further {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token} in a subsequent
 *   request.  If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.versionView
 *   The fields of the primary version to include in the response.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listCryptoKeysAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listCryptoKeys(
      request?: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey[],
        protos.google.cloud.kms.v1.IListCryptoKeysRequest|null,
        protos.google.cloud.kms.v1.IListCryptoKeysResponse
      ]>;
  listCryptoKeys(
      request: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeysRequest,
          protos.google.cloud.kms.v1.IListCryptoKeysResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKey>): void;
  listCryptoKeys(
      request: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeysRequest,
          protos.google.cloud.kms.v1.IListCryptoKeysResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKey>): void;
  listCryptoKeys(
      request?: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeysRequest,
          protos.google.cloud.kms.v1.IListCryptoKeysResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKey>,
      callback?: PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeysRequest,
          protos.google.cloud.kms.v1.IListCryptoKeysResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKey>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKey[],
        protos.google.cloud.kms.v1.IListCryptoKeysRequest|null,
        protos.google.cloud.kms.v1.IListCryptoKeysResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listCryptoKeys(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
 *   `projects/* /locations/* /keyRings/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} to include in the
 *   response.  Further {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token} in a subsequent
 *   request.  If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.versionView
 *   The fields of the primary version to include in the response.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [CryptoKey]{@link google.cloud.kms.v1.CryptoKey} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listCryptoKeysAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listCryptoKeysStream(
      request?: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listCryptoKeys'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeys.createStream(
      this.innerApiCalls.listCryptoKeys as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listCryptoKeys`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
 *   `projects/* /locations/* /keyRings/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} to include in the
 *   response.  Further {@link google.cloud.kms.v1.CryptoKey|CryptoKeys} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token} in a subsequent
 *   request.  If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token|ListCryptoKeysResponse.next_page_token}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.versionView
 *   The fields of the primary version to include in the response.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [CryptoKey]{@link google.cloud.kms.v1.CryptoKey}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.list_crypto_keys.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_ListCryptoKeys_async
 */
  listCryptoKeysAsync(
      request?: protos.google.cloud.kms.v1.IListCryptoKeysRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.kms.v1.ICryptoKey>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listCryptoKeys'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeys.asyncIterate(
      this.innerApiCalls['listCryptoKeys'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.ICryptoKey>;
  }
 /**
 * Lists {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to list, in the format
 *   `projects/* /locations/* /keyRings/* /cryptoKeys/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} to
 *   include in the response. Further {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} can
 *   subsequently be obtained by including the
 *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token} in a subsequent request.
 *   If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.view
 *   The fields to include in the response.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listCryptoKeyVersionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listCryptoKeyVersions(
      request?: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion[],
        protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest|null,
        protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
      ]>;
  listCryptoKeyVersions(
      request: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKeyVersion>): void;
  listCryptoKeyVersions(
      request: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKeyVersion>): void;
  listCryptoKeyVersions(
      request?: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKeyVersion>,
      callback?: PaginationCallback<
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
          protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse|null|undefined,
          protos.google.cloud.kms.v1.ICryptoKeyVersion>):
      Promise<[
        protos.google.cloud.kms.v1.ICryptoKeyVersion[],
        protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest|null,
        protos.google.cloud.kms.v1.IListCryptoKeyVersionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listCryptoKeyVersions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to list, in the format
 *   `projects/* /locations/* /keyRings/* /cryptoKeys/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} to
 *   include in the response. Further {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} can
 *   subsequently be obtained by including the
 *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token} in a subsequent request.
 *   If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.view
 *   The fields to include in the response.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listCryptoKeyVersionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listCryptoKeyVersionsStream(
      request?: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listCryptoKeyVersions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeyVersions.createStream(
      this.innerApiCalls.listCryptoKeyVersions as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listCryptoKeyVersions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.CryptoKey|CryptoKey} to list, in the format
 *   `projects/* /locations/* /keyRings/* /cryptoKeys/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} to
 *   include in the response. Further {@link google.cloud.kms.v1.CryptoKeyVersion|CryptoKeyVersions} can
 *   subsequently be obtained by including the
 *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token} in a subsequent request.
 *   If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token|ListCryptoKeyVersionsResponse.next_page_token}.
 * @param {google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionView} request.view
 *   The fields to include in the response.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [CryptoKeyVersion]{@link google.cloud.kms.v1.CryptoKeyVersion}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.list_crypto_key_versions.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_ListCryptoKeyVersions_async
 */
  listCryptoKeyVersionsAsync(
      request?: protos.google.cloud.kms.v1.IListCryptoKeyVersionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.kms.v1.ICryptoKeyVersion>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listCryptoKeyVersions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCryptoKeyVersions.asyncIterate(
      this.innerApiCalls['listCryptoKeyVersions'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.ICryptoKeyVersion>;
  }
 /**
 * Lists {@link google.cloud.kms.v1.ImportJob|ImportJobs}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
 *   `projects/* /locations/* /keyRings/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.ImportJob|ImportJobs} to include in the
 *   response. Further {@link google.cloud.kms.v1.ImportJob|ImportJobs} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token} in a subsequent
 *   request. If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token}.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ImportJob]{@link google.cloud.kms.v1.ImportJob}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listImportJobsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listImportJobs(
      request?: protos.google.cloud.kms.v1.IListImportJobsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.kms.v1.IImportJob[],
        protos.google.cloud.kms.v1.IListImportJobsRequest|null,
        protos.google.cloud.kms.v1.IListImportJobsResponse
      ]>;
  listImportJobs(
      request: protos.google.cloud.kms.v1.IListImportJobsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListImportJobsRequest,
          protos.google.cloud.kms.v1.IListImportJobsResponse|null|undefined,
          protos.google.cloud.kms.v1.IImportJob>): void;
  listImportJobs(
      request: protos.google.cloud.kms.v1.IListImportJobsRequest,
      callback: PaginationCallback<
          protos.google.cloud.kms.v1.IListImportJobsRequest,
          protos.google.cloud.kms.v1.IListImportJobsResponse|null|undefined,
          protos.google.cloud.kms.v1.IImportJob>): void;
  listImportJobs(
      request?: protos.google.cloud.kms.v1.IListImportJobsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.kms.v1.IListImportJobsRequest,
          protos.google.cloud.kms.v1.IListImportJobsResponse|null|undefined,
          protos.google.cloud.kms.v1.IImportJob>,
      callback?: PaginationCallback<
          protos.google.cloud.kms.v1.IListImportJobsRequest,
          protos.google.cloud.kms.v1.IListImportJobsResponse|null|undefined,
          protos.google.cloud.kms.v1.IImportJob>):
      Promise<[
        protos.google.cloud.kms.v1.IImportJob[],
        protos.google.cloud.kms.v1.IListImportJobsRequest|null,
        protos.google.cloud.kms.v1.IListImportJobsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listImportJobs(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
 *   `projects/* /locations/* /keyRings/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.ImportJob|ImportJobs} to include in the
 *   response. Further {@link google.cloud.kms.v1.ImportJob|ImportJobs} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token} in a subsequent
 *   request. If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token}.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ImportJob]{@link google.cloud.kms.v1.ImportJob} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listImportJobsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listImportJobsStream(
      request?: protos.google.cloud.kms.v1.IListImportJobsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listImportJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listImportJobs.createStream(
      this.innerApiCalls.listImportJobs as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listImportJobs`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The resource name of the {@link google.cloud.kms.v1.KeyRing|KeyRing} to list, in the format
 *   `projects/* /locations/* /keyRings/*`.
 * @param {number} request.pageSize
 *   Optional limit on the number of {@link google.cloud.kms.v1.ImportJob|ImportJobs} to include in the
 *   response. Further {@link google.cloud.kms.v1.ImportJob|ImportJobs} can subsequently be obtained by
 *   including the {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token} in a subsequent
 *   request. If unspecified, the server will pick an appropriate default.
 * @param {string} request.pageToken
 *   Optional pagination token, returned earlier via
 *   {@link google.cloud.kms.v1.ListImportJobsResponse.next_page_token|ListImportJobsResponse.next_page_token}.
 * @param {string} request.filter
 *   Optional. Only include resources that match the filter in the response.
 * @param {string} request.orderBy
 *   Optional. Specify how the results should be sorted. If not specified, the
 *   results will be sorted in the default order.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ImportJob]{@link google.cloud.kms.v1.ImportJob}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/key_management_service.list_import_jobs.js</caption>
 * region_tag:cloudkms_v1_generated_KeyManagementService_ListImportJobs_async
 */
  listImportJobsAsync(
      request?: protos.google.cloud.kms.v1.IListImportJobsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.kms.v1.IImportJob>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const defaultCallSettings = this._defaults['listImportJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listImportJobs.asyncIterate(
      this.innerApiCalls['listImportJobs'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.kms.v1.IImportJob>;
  }
/**
 * Gets the access control policy for a resource. Returns an empty policy
 * if the resource exists and does not have a policy set.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {Object} [request.options]
 *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *   `GetIamPolicy`. This field is only used by Cloud IAM.
 *
 *   This object should have the same structure as [GetPolicyOptions]{@link google.iam.v1.GetPolicyOptions}
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing [Policy]{@link google.iam.v1.Policy}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

/**
 * Returns permissions that a caller has on the specified resource. If the
 * resource does not exist, this will return an empty set of
 * permissions, not a NOT_FOUND error.
 *
 * Note: This operation is designed to be used for building
 * permission-aware UIs and command-line tools, not for authorization
 * checking. This operation may "fail open" without warning.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy detail is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {string[]} request.permissions
 *   The set of permissions to check for the `resource`. Permissions with
 *   wildcards (such as '*' or 'storage.*') are not allowed. For more
 *   information see
 *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

/**
 * Returns permissions that a caller has on the specified resource. If the
 * resource does not exist, this will return an empty set of
 * permissions, not a NOT_FOUND error.
 *
 * Note: This operation is designed to be used for building
 * permission-aware UIs and command-line tools, not for authorization
 * checking. This operation may "fail open" without warning.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy detail is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {string[]} request.permissions
 *   The set of permissions to check for the `resource`. Permissions with
 *   wildcards (such as '*' or 'storage.*') are not allowed. For more
 *   information see
 *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 *
 */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<IamProtos.google.iam.v1.TestIamPermissionsResponse> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }


  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.keyManagementServiceStub && !this._terminated) {
      return this.keyManagementServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.iamClient.close();
      });
    }
    return Promise.resolve();
  }
}
