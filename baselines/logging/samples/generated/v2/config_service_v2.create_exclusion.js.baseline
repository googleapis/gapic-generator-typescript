
'use strict';

function main() {
  // [START logging_create_exclusion_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent resource in which to create the exclusion:
   *      "projects/[PROJECT_ID]"
   *      "organizations/[ORGANIZATION_ID]"
   *      "billingAccounts/[BILLING_ACCOUNT_ID]"
   *      "folders/[FOLDER_ID]"
   *  Examples: `"projects/my-logging-project"`, `"organizations/123456789"`.
   */
  // const parent = 'abc123'
  /**
   *  Required. The new exclusion, whose `name` parameter is an exclusion name
   *  that is not already used in the parent resource.
   */
  // const exclusion = ''

  // Imports the Logging library
  const {ConfigServiceV2Client} = require('logging').v2;

  // Instantiates a client
  const loggingClient = new ConfigServiceV2Client();

  async function createExclusion() {
    // Construct request
    const request = {
      parent,
      exclusion,
    };

    // Run request
    const response = await loggingClient.createExclusion(request);
    console.log(`Response: ${JSON.stringify(response)}`);
  }

  createExclusion();
  // [END logging_create_exclusion_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
