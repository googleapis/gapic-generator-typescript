


'use strict';

function main() {
  // [START logging_update_log_metric_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the metric to update:
   *      "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
   *  The updated metric must be provided in the request and it's
   *  `name` field must be the same as `[METRIC_ID]` If the metric
   *  does not exist in `[PROJECT_ID]`, then a new metric is created.
   */
  // const metricName ='abc123'
  /**
   *  Required. The updated metric.
   */
  // const metric =''

  // Imports the Logging library
  const {MetricsServiceV2Client} = require('');

  // Instantiates a client
  const loggingClient = new MetricsServiceV2Client();

  async function updateLogMetric() {
    // Construct request
    const request = {
      metricName,
      metric,
    };

    // Run request
    const response = await loggingClient.updateLogMetric(request);
    console.log(`Response: ${response}`);
  }

  updateLogMetric();
  // [END logging_update_log_metric_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
