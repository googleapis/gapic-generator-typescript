


'use strict';

function main() {
  // [START monitoring_create_alert_policy_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The project in which to create the alerting policy. The format is
   *  `projects/[PROJECT_ID]`.
   *  Note that this field names the parent container in which the alerting
   *  policy will be written, not the name of the created policy. The alerting
   *  policy that is returned will have a name that contains a normalized
   *  representation of this name as a prefix but adds a suffix of the form
   *  `/alertPolicies/[POLICY_ID]`, identifying the policy in the container.
   */
  // const name ='abc123'
  /**
   *  Required. The requested alerting policy. You should omit the `name` field in this
   *  policy. The name will be returned in the new policy, including
   *  a new [ALERT_POLICY_ID] value.
   */
  // const alertPolicy =''

  // Imports the Monitoring library
  const {AlertPolicyServiceClient} = require('monitoring');

  // Instantiates a client
  const monitoringClient = new AlertPolicyServiceClient();

  async function createAlertPolicy() {
    // Construct request
    const request = {
      name,
      alertPolicy,
    };

    // Run request
    const response = await monitoringClient.createAlertPolicy(request);
    console.log(`Response: ${response}`);
  }

  createAlertPolicy();
  // [END monitoring_create_alert_policy_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
