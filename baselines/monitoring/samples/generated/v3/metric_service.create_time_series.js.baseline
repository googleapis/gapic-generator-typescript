// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


'use strict';

function main(name, timeSeries) {
  // [START monitoring_create_time_series_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The project on which to execute the request. The format is
   *  `"projects/{project_id_or_number}"`.
   */
  // const name = 'abc123'
  /**
   *  Required. The new data to be added to a list of time series.
   *  Adds at most one data point to each of several time series.  The new data
   *  point must be more recent than any other point in its time series.  Each
   *  `TimeSeries` value must fully specify a unique time series by supplying
   *  all label values for the metric and the monitored resource.
   *  The maximum number of `TimeSeries` objects per `Create` request is 200.
   */
  // const timeSeries = 1234

  // Imports the Monitoring library
  const {MetricServiceClient} = require('monitoring').v3;

  // Instantiates a client
  const monitoringClient = new MetricServiceClient();

  async function createTimeSeries() {
    // Construct request
    const request = {
      name,
      timeSeries,
    };

    // Run request
    const response = await monitoringClient.createTimeSeries(request);
    console.log(response);
  }

  createTimeSeries();
  // [END monitoring_create_time_series_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
