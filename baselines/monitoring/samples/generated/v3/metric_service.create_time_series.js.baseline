


'use strict';

function main() {
  // [START monitoring_create_time_series_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The project on which to execute the request. The format is
   *  `"projects/{project_id_or_number}"`.
   */
  // const name ='abc123'
  /**
   *  Required. The new data to be added to a list of time series.
   *  Adds at most one data point to each of several time series.  The new data
   *  point must be more recent than any other point in its time series.  Each
   *  `TimeSeries` value must fully specify a unique time series by supplying
   *  all label values for the metric and the monitored resource.
   *  The maximum number of `TimeSeries` objects per `Create` request is 200.
   */
  // const timeSeries =1234

  // Imports the Monitoring library
  const {MetricServiceClient} = require('monitoring');

  // Instantiates a client
  const monitoringClient = new MetricServiceClient();

  async function createTimeSeries() {
    // Construct request
    const request = {
      name,
      timeSeries,
    };

    // Run request
    const response = await monitoringClient.createTimeSeries(request);
    console.log(`Response: ${response}`);
  }

  createTimeSeries();
  // [END monitoring_create_time_series_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
