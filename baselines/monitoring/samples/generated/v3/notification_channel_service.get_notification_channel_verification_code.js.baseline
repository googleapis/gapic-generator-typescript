


'use strict';

function main() {
  // [START monitoring_get_notification_channel_verification_code_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The notification channel for which a verification code is to be generated
   *  and retrieved. This must name a channel that is already verified; if
   *  the specified channel is not verified, the request will fail.
   */
  // const name ='abc123'
  /**
   *  The desired expiration time. If specified, the API will guarantee that
   *  the returned code will not be valid after the specified timestamp;
   *  however, the API cannot guarantee that the returned code will be
   *  valid for at least as long as the requested time (the API puts an upper
   *  bound on the amount of time for which a code may be valid). If omitted,
   *  a default expiration will be used, which may be less than the max
   *  permissible expiration (so specifying an expiration may extend the
   *  code's lifetime over omitting an expiration, even though the API does
   *  impose an upper limit on the maximum expiration that is permitted).
   */
  // const expireTime =''

  // Imports the Monitoring library
  const {NotificationChannelServiceClient} = require('monitoring');

  // Instantiates a client
  const monitoringClient = new NotificationChannelServiceClient();

  async function getNotificationChannelVerificationCode() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await monitoringClient.getNotificationChannelVerificationCode(request);
    console.log(`Response: ${response}`);
  }

  getNotificationChannelVerificationCode();
  // [END monitoring_get_notification_channel_verification_code_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
