


'use strict';

function main() {
  // [START monitoring_create_service_level_objective_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Resource name of the parent `Service`.
   *  Of the form `projects/{project_id}/services/{service_id}`.
   */
  // const parent ='abc123'
  /**
   *  Optional. The ServiceLevelObjective id to use for this
   *  ServiceLevelObjective. If omitted, an id will be generated instead. Must
   *  match the pattern [a-z0-9\-]+
   */
  // const serviceLevelObjectiveId ='abc123'
  /**
   *  Required. The `ServiceLevelObjective` to create.
   *  The provided `name` will be respected if no `ServiceLevelObjective` exists
   *  with this name.
   */
  // const serviceLevelObjective =''

  // Imports the Monitoring library
  const {ServiceMonitoringServiceClient} = require('');

  // Instantiates a client
  const monitoringClient = new ServiceMonitoringServiceClient();

  async function createServiceLevelObjective() {
    // Construct request
    const request = {
      parent,
      serviceLevelObjective,
    };

    // Run request
    const response = await monitoringClient.createServiceLevelObjective(request);
    console.log(`Response: ${response}`);
  }

  createServiceLevelObjective();
  // [END monitoring_create_service_level_objective_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
