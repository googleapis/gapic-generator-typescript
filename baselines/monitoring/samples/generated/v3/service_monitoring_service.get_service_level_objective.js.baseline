
'use strict';

function main() {
  // [START monitoring_get_service_level_objective_sample]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Resource name of the `ServiceLevelObjective` to get.
   *  Of the form
   *  `projects/{project_id}/services/{service_id}/serviceLevelObjectives/{slo_name}`.
   */
  // const name = 'abc123'
  /**
   *  View of the `ServiceLevelObjective` to return. If `DEFAULT`, return the
   *  `ServiceLevelObjective` as originally defined. If `EXPLICIT` and the
   *  `ServiceLevelObjective` is defined in terms of a `BasicSli`, replace the
   *  `BasicSli` with a `RequestBasedSli` spelling out how the SLI is computed.
   */
  // const view = ''

  // Imports the Monitoring library
  const {ServiceMonitoringServiceClient} = require('monitoring').v3;

  // Instantiates a client
  const monitoringClient = new ServiceMonitoringServiceClient();

  async function getServiceLevelObjective() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await monitoringClient.getServiceLevelObjective(request);
    console.log(`Response: ${JSON.stringify(response)}`);
  }

  getServiceLevelObjective();
  // [END monitoring_get_service_level_objective_sample]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
