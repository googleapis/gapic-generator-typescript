{
  "clientLibrary": {
    "name": "nodejs-naming",
    "version": "0.1.0",
    "language": "TYPESCRIPT",
    "apis": [
      {
        "id": "Naming",
        "version": "v1beta1"
      }
    ]
  },
  "snippets": [
    {
      "regionTag": "localhost_v1beta1_generated_Naming_PaginatedMethod_async",
      "title": "Naming paginatedMethod Sample",
      "description": " Problem #1: paginated method generates extra methods *Stream() and *Async(), which might conflict with unary methods with the same names.",
      "canonical": true,
      "file": "naming.paginated_method.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "PaginatedMethod",
        "async": true,
        "parameters": [
          {
            "name": "content",
            "type": ".google.protobuf.Empty"
          },
          {
            "name": "page_size",
            "type": "TYPE_INT32"
          },
          {
            "name": "page_token",
            "type": "TYPE_STRING"
          }
        ],
        "resultType": ".google.naming.v1beta1.PaginatedMethodResponse",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "PaginatedMethod",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_PaginatedMethodStream_async",
      "title": "Naming paginatedMethodStream Sample",
      "description": "",
      "canonical": true,
      "file": "naming.paginated_method_stream.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "PaginatedMethodStream",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "PaginatedMethodStream",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_PaginatedMethodAsync_async",
      "title": "Naming paginatedMethodAsync Sample",
      "description": "",
      "canonical": true,
      "file": "naming.paginated_method_async.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "PaginatedMethodAsync",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "PaginatedMethodAsync",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_LongRunning_async",
      "title": "Naming longRunning Sample",
      "description": " Problem #2: long running method generates extra method check*Progress()",
      "canonical": true,
      "file": "naming.long_running.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "LongRunning",
        "async": true,
        "parameters": [],
        "resultType": ".google.longrunning.Operation",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "LongRunning",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_CheckLongRunningProgress_async",
      "title": "Naming checkLongRunningProgress Sample",
      "description": "",
      "canonical": true,
      "file": "naming.check_long_running_progress.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "CheckLongRunningProgress",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "CheckLongRunningProgress",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_Initialize_async",
      "title": "Naming initialize Sample",
      "description": " Problem #3: RPCs that conflict with auto-generated methods",
      "canonical": true,
      "file": "naming.initialize.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "Initialize",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "Initialize",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_ServicePath_async",
      "title": "Naming servicePath Sample",
      "description": "",
      "canonical": true,
      "file": "naming.service_path.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "ServicePath",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "ServicePath",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_ApiEndpoint_async",
      "title": "Naming apiEndpoint Sample",
      "description": "",
      "canonical": true,
      "file": "naming.api_endpoint.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "ApiEndpoint",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "ApiEndpoint",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_Port_async",
      "title": "Naming port Sample",
      "description": "",
      "canonical": true,
      "file": "naming.port.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "Port",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "Port",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_Scopes_async",
      "title": "Naming scopes Sample",
      "description": "",
      "canonical": true,
      "file": "naming.scopes.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "Scopes",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "Scopes",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    },
    {
      "regionTag": "localhost_v1beta1_generated_Naming_getProjectId_async",
      "title": "Naming getProjectId Sample",
      "description": "",
      "canonical": true,
      "file": "naming.get_project_id.js",
      "language": "JAVASCRIPT",
      "clientMethod": {
        "fullName": "getProjectId",
        "async": true,
        "parameters": [],
        "resultType": ".google.protobuf.Empty",
        "client": {
          "shortName": "Naming"
        },
        "method": {
          "shortName": "getProjectId",
          "service": {
            "shortName": "Naming"
          }
        }
      }
    }
  ]
}
