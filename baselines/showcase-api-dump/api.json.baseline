{
  "packageName": "google.showcase.v1beta1",
  "publishName": "showcase",
  "naming": {
    "name": "Showcase",
    "namespace": [
      "google"
    ],
    "version": "v1beta1",
    "productName": "Showcase",
    "protoPackage": "google.showcase.v1beta1"
  },
  "hostname": "localhost",
  "port": "7469",
  "services": [
    {
      "name": "Compliance",
      "method": [
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending the entire request object in the REST body.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBody",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/repeat:body",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending the a message-type field in the REST body. Per AIP-127, only",
            " top-level, non-repeated fields can be sent this way.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBodyInfo",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/repeat:bodyinfo",
              "body": "info",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending all request fields as query parameters.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataQuery",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat:query",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending some parameters as \"simple\" path variables (i.e., of the form",
            " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataSimplePath",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat/{info.f_string}/{info.f_int32}/{info.f_double}/{info.f_bool}/{info.f_kingdom}:simplepath",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": [
            [
              "info",
              "f_string"
            ],
            [
              "info",
              "f_int32"
            ],
            [
              "info",
              "f_double"
            ],
            [
              "info",
              "f_bool"
            ],
            [
              "info",
              "f_kingdom"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " Same as RepeatDataSimplePath, but with a path resource.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataPathResource",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat/{info.f_string=first/*}/{info.f_child.f_string=second/*}/bool/{info.f_bool}:pathresource",
              "additionalBindings": [
                {
                  "get": "/v1beta1/repeat/{info.f_child.f_string=first/*}/{info.f_string=second/*}/bool/{info.f_bool}:childfirstpathresource"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": [
            [
              "info",
              "f_string"
            ],
            [
              "info",
              "f_child",
              "f_string"
            ],
            [
              "info",
              "f_bool"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " Same as RepeatDataSimplePath, but with a trailing resource.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataPathTrailingResource",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat/{info.f_string=first/*}/{info.f_child.f_string=second/**}:pathtrailingresource",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": [
            [
              "info",
              "f_string"
            ],
            [
              "info",
              "f_child",
              "f_string"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request, using the HTTP PUT method.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBodyPut",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "put": "/v1beta1/repeat:bodyput",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request, using the HTTP PATCH method.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBodyPatch",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/repeat:bodypatch",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.EnumRequest",
          "outputInterface": ".google.showcase.v1beta1.EnumResponse",
          "comments": [
            " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
            " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
            " response from this RPC as the request to VerifyEnum()",
            "",
            " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
            " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetEnum",
          "inputType": ".google.showcase.v1beta1.EnumRequest",
          "outputType": ".google.showcase.v1beta1.EnumResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/compliance/enum",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "unknown_enum",
              "paramType": "TYPE_BOOL",
              "comments": [
                " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.EnumResponse",
          "outputInterface": ".google.showcase.v1beta1.EnumResponse",
          "comments": [
            " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
            " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
            " with the same EnumResponse; otherwise, the RPC errors.",
            "",
            " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
            " although they are not guaranteed to be the same across separate Showcase server runs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "VerifyEnum",
          "inputType": ".google.showcase.v1beta1.EnumResponse",
          "outputType": ".google.showcase.v1beta1.EnumResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/compliance/enum",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "request",
              "paramType": ".google.showcase.v1beta1.EnumRequest",
              "comments": [
                " The original request for a known or unknown enum from the server."
              ]
            },
            {
              "paramName": "continent",
              "paramType": ".google.showcase.v1beta1.Continent",
              "comments": [
                " The actual enum the server provided."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "options": {
        ".google.api.defaultHost": "localhost:7469"
      },
      "packageName": "google.showcase.v1beta1",
      "protoFile": "google/showcase/v1beta1/compliance.proto",
      "IAMPolicyMixin": 0,
      "LocationMixin": 0,
      "comments": [
        " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
        " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
        " correctly."
      ],
      "commentsMap": {
        "comments": {
          "Http:rules": {
            "paramName": "rules",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of HTTP configuration rules that apply to individual API methods.",
              "",
              " **NOTE:** All service configuration rules follow \"last one wins\" order."
            ]
          },
          "Http:fully_decode_reserved_expansion": {
            "paramName": "fully_decode_reserved_expansion",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When set to true, URL path parameters will be fully URI-decoded except in",
              " cases of single segment matches in reserved expansion, where \"%2F\" will be",
              " left encoded.",
              "",
              " The default behavior is to not decode RFC 6570 reserved characters in multi",
              " segment matches."
            ]
          },
          "HttpRule:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " Selects a method to which this rule applies.",
              "",
              " Refer to [selector][google.api.DocumentationRule.selector] for syntax",
              " details."
            ]
          },
          "HttpRule:get": {
            "paramName": "get",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP GET. Used for listing and getting information about",
              " resources."
            ]
          },
          "HttpRule:put": {
            "paramName": "put",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PUT. Used for replacing a resource."
            ]
          },
          "HttpRule:post": {
            "paramName": "post",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP POST. Used for creating a resource or performing an action."
            ]
          },
          "HttpRule:delete": {
            "paramName": "delete",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP DELETE. Used for deleting a resource."
            ]
          },
          "HttpRule:patch": {
            "paramName": "patch",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PATCH. Used for updating a resource."
            ]
          },
          "HttpRule:custom": {
            "paramName": "custom",
            "paramType": ".google.api.CustomHttpPattern",
            "comments": [
              " The custom pattern is used for specifying an HTTP method that is not",
              " included in the `pattern` field, such as HEAD, or \"*\" to leave the",
              " HTTP method unspecified for this rule. The wild-card rule is useful",
              " for services that provide content to Web (HTML) clients."
            ]
          },
          "HttpRule:body": {
            "paramName": "body",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the request field whose value is mapped to the HTTP request",
              " body, or `*` for mapping all request fields not captured by the path",
              " pattern to the HTTP body, or omitted for not having any HTTP request body.",
              "",
              " NOTE: the referred field must be present at the top-level of the request",
              " message type."
            ]
          },
          "HttpRule:response_body": {
            "paramName": "response_body",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The name of the response field whose value is mapped to the HTTP",
              " response body. When omitted, the entire response message will be used",
              " as the HTTP response body.",
              "",
              " NOTE: The referred field must be present at the top-level of the response",
              " message type."
            ]
          },
          "HttpRule:additional_bindings": {
            "paramName": "additional_bindings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional HTTP bindings for the selector. Nested bindings must",
              " not contain an `additional_bindings` field themselves (that is,",
              " the nesting may only be one level deep)."
            ]
          },
          "CustomHttpPattern:kind": {
            "paramName": "kind",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of this custom HTTP verb."
            ]
          },
          "CustomHttpPattern:path": {
            "paramName": "path",
            "paramType": "TYPE_STRING",
            "comments": [
              " The path matched by this custom verb."
            ]
          },
          "FileDescriptorSet:file": {
            "paramName": "file",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:package": {
            "paramName": "package",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:dependency": {
            "paramName": "dependency",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Names of files imported by this file."
            ]
          },
          "FileDescriptorProto:public_dependency": {
            "paramName": "public_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the public imported files in the dependency list above."
            ]
          },
          "FileDescriptorProto:weak_dependency": {
            "paramName": "weak_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the weak imported files in the dependency list.",
              " For Google-internal migration only. Do not use."
            ]
          },
          "FileDescriptorProto:message_type": {
            "paramName": "message_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " All top-level definitions in this file."
            ]
          },
          "FileDescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:service": {
            "paramName": "service",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FileOptions",
            "comments": []
          },
          "FileDescriptorProto:source_code_info": {
            "paramName": "source_code_info",
            "paramType": ".google.protobuf.SourceCodeInfo",
            "comments": [
              " This field contains optional information about the original source code.",
              " You may safely remove this entire field without harming runtime",
              " functionality of the descriptors -- the information is needed only by",
              " development tools."
            ]
          },
          "FileDescriptorProto:syntax": {
            "paramName": "syntax",
            "paramType": "TYPE_STRING",
            "comments": [
              " The syntax of the proto file.",
              " The supported values are \"proto2\", \"proto3\", and \"editions\".",
              "",
              " If `edition` is present, this value must be \"editions\"."
            ]
          },
          "FileDescriptorProto:edition": {
            "paramName": "edition",
            "paramType": "TYPE_STRING",
            "comments": [
              " The edition of the proto file, which is an opaque string."
            ]
          },
          "DescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "DescriptorProto:field": {
            "paramName": "field",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:nested_type": {
            "paramName": "nested_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension_range": {
            "paramName": "extension_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:oneof_decl": {
            "paramName": "oneof_decl",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MessageOptions",
            "comments": []
          },
          "DescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved field names, which may not be used by fields in the same message.",
              " A given name may only be reserved once."
            ]
          },
          "ExtensionRangeOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ExtensionRangeOptions:declaration": {
            "paramName": "declaration",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " For external users: DO NOT USE. We are in the process of open sourcing",
              " extension declaration and executing internal cleanups before it can be",
              " used externally."
            ]
          },
          "ExtensionRangeOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ExtensionRangeOptions:verification": {
            "paramName": "verification",
            "paramType": ".google.protobuf.ExtensionRangeOptions.VerificationState",
            "comments": [
              " The verification state of the range.",
              " TODO(b/278783756): flip the default to DECLARATION once all empty ranges",
              " are marked as UNVERIFIED."
            ]
          },
          "FieldDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FieldDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "FieldDescriptorProto:label": {
            "paramName": "label",
            "paramType": ".google.protobuf.FieldDescriptorProto.Label",
            "comments": []
          },
          "FieldDescriptorProto:type": {
            "paramName": "type",
            "paramType": ".google.protobuf.FieldDescriptorProto.Type",
            "comments": [
              " If type_name is set, this need not be set.  If both this and type_name",
              " are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
            ]
          },
          "FieldDescriptorProto:type_name": {
            "paramName": "type_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " For message and enum types, this is the name of the type.  If the name",
              " starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping",
              " rules are used to find the type (i.e. first the nested types within this",
              " message are searched, then within the parent, on up to the root",
              " namespace)."
            ]
          },
          "FieldDescriptorProto:extendee": {
            "paramName": "extendee",
            "paramType": "TYPE_STRING",
            "comments": [
              " For extensions, this is the name of the type being extended.  It is",
              " resolved in the same manner as type_name."
            ]
          },
          "FieldDescriptorProto:default_value": {
            "paramName": "default_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " For numeric types, contains the original text representation of the value.",
              " For booleans, \"true\" or \"false\".",
              " For strings, contains the default text contents (not escaped in any way).",
              " For bytes, contains the C escaped value.  All bytes >= 128 are escaped."
            ]
          },
          "FieldDescriptorProto:oneof_index": {
            "paramName": "oneof_index",
            "paramType": "TYPE_INT32",
            "comments": [
              " If set, gives the index of a oneof in the containing type's oneof_decl",
              " list.  This field is a member of that oneof."
            ]
          },
          "FieldDescriptorProto:json_name": {
            "paramName": "json_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " JSON name of this field. The value is set by protocol compiler. If the",
              " user has set a \"json_name\" option on this field, that option's value",
              " will be used. Otherwise, it's deduced from the field's name by converting",
              " it to camelCase."
            ]
          },
          "FieldDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FieldOptions",
            "comments": []
          },
          "FieldDescriptorProto:proto3_optional": {
            "paramName": "proto3_optional",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, this is a proto3 \"optional\". When a proto3 field is optional, it",
              " tracks presence regardless of field type.",
              "",
              " When proto3_optional is true, this field must be belong to a oneof to",
              " signal to old proto3 clients that presence is tracked for this field. This",
              " oneof is known as a \"synthetic\" oneof, and this field must be its sole",
              " member (each proto3 optional field gets its own synthetic oneof). Synthetic",
              " oneofs exist in the descriptor only, and do not generate any API. Synthetic",
              " oneofs must be ordered after all \"real\" oneofs.",
              "",
              " For message fields, proto3_optional doesn't create any semantic change,",
              " since non-repeated message fields always track presence. However it still",
              " indicates the semantic detail of whether the user wrote \"optional\" or not.",
              " This can be useful for round-tripping the .proto file. For consistency we",
              " give message fields a synthetic oneof also, even though it is not required",
              " to track presence. This is especially important because the parser can't",
              " tell if a field is a message or an enum, so it must always create a",
              " synthetic oneof.",
              "",
              " Proto2 optional fields do not set this flag, because they already indicate",
              " optional with `LABEL_OPTIONAL`."
            ]
          },
          "OneofDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "OneofDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.OneofOptions",
            "comments": []
          },
          "EnumDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumDescriptorProto:value": {
            "paramName": "value",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "EnumDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumOptions",
            "comments": []
          },
          "EnumDescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Range of reserved numeric values. Reserved numeric values may not be used",
              " by enum values in the same enum declaration. Reserved ranges may not",
              " overlap."
            ]
          },
          "EnumDescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved enum value names, which may not be reused. A given name may only",
              " be reserved once."
            ]
          },
          "EnumValueDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumValueDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "EnumValueDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumValueOptions",
            "comments": []
          },
          "ServiceDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ServiceDescriptorProto:method": {
            "paramName": "method",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ServiceDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.ServiceOptions",
            "comments": []
          },
          "MethodDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:input_type": {
            "paramName": "input_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Input and output type names.  These are resolved in the same way as",
              " FieldDescriptorProto.type_name, but must refer to a message type."
            ]
          },
          "MethodDescriptorProto:output_type": {
            "paramName": "output_type",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MethodOptions",
            "comments": []
          },
          "MethodDescriptorProto:client_streaming": {
            "paramName": "client_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if client streams multiple client messages"
            ]
          },
          "MethodDescriptorProto:server_streaming": {
            "paramName": "server_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if server streams multiple server messages"
            ]
          },
          "FileOptions:java_package": {
            "paramName": "java_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Java package where classes generated from this .proto will be",
              " placed.  By default, the proto package is used, but this is often",
              " inappropriate because proto packages do not normally start with backwards",
              " domain names."
            ]
          },
          "FileOptions:java_outer_classname": {
            "paramName": "java_outer_classname",
            "paramType": "TYPE_STRING",
            "comments": [
              " Controls the name of the wrapper Java class generated for the .proto file.",
              " That class will always contain the .proto file's getDescriptor() method as",
              " well as any top-level extensions defined in the .proto file.",
              " If java_multiple_files is disabled, then all the other classes from the",
              " .proto file will be nested inside the single wrapper outer class."
            ]
          },
          "FileOptions:java_multiple_files": {
            "paramName": "java_multiple_files",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If enabled, then the Java code generator will generate a separate .java",
              " file for each top-level message, enum, and service defined in the .proto",
              " file.  Thus, these types will *not* be nested inside the wrapper class",
              " named by java_outer_classname.  However, the wrapper class will still be",
              " generated to contain the file's getDescriptor() method as well as any",
              " top-level extensions defined in the file."
            ]
          },
          "FileOptions:java_generate_equals_and_hash": {
            "paramName": "java_generate_equals_and_hash",
            "paramType": "TYPE_BOOL",
            "comments": [
              " This option does nothing."
            ]
          },
          "FileOptions:java_string_check_utf8": {
            "paramName": "java_string_check_utf8",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If set true, then the Java2 code generator will generate code that",
              " throws an exception whenever an attempt is made to assign a non-UTF-8",
              " byte sequence to a string field.",
              " Message reflection will do the same.",
              " However, an extension field still accepts non-UTF-8 byte sequences.",
              " This option has no effect on when used with the lite runtime."
            ]
          },
          "FileOptions:optimize_for": {
            "paramName": "optimize_for",
            "paramType": ".google.protobuf.FileOptions.OptimizeMode",
            "comments": []
          },
          "FileOptions:go_package": {
            "paramName": "go_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Go package where structs generated from this .proto will be",
              " placed. If omitted, the Go package will be derived from the following:",
              "   - The basename of the package import path, if provided.",
              "   - Otherwise, the package statement in the .proto file, if present.",
              "   - Otherwise, the basename of the .proto file, without extension."
            ]
          },
          "FileOptions:cc_generic_services": {
            "paramName": "cc_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should generic services be generated in each language?  \"Generic\" services",
              " are not specific to any particular RPC system.  They are generated by the",
              " main code generators in each language (without additional plugins).",
              " Generic services were the only kind of service generation supported by",
              " early versions of google.protobuf.",
              "",
              " Generic services are now considered deprecated in favor of using plugins",
              " that generate code specific to your particular RPC system.  Therefore,",
              " these default to false.  Old code which depends on generic services should",
              " explicitly set them to true."
            ]
          },
          "FileOptions:java_generic_services": {
            "paramName": "java_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:py_generic_services": {
            "paramName": "py_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:php_generic_services": {
            "paramName": "php_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this file deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for everything in the file, or it will be completely ignored; in the very",
              " least, this is a formalization for deprecating files."
            ]
          },
          "FileOptions:cc_enable_arenas": {
            "paramName": "cc_enable_arenas",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the use of arenas for the proto messages in this file. This applies",
              " only to generated classes for C++."
            ]
          },
          "FileOptions:objc_class_prefix": {
            "paramName": "objc_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the objective c class prefix which is prepended to all objective c",
              " generated classes from this .proto. There is no default."
            ]
          },
          "FileOptions:csharp_namespace": {
            "paramName": "csharp_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Namespace for generated classes; defaults to the package."
            ]
          },
          "FileOptions:swift_prefix": {
            "paramName": "swift_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " By default Swift generators will take the proto package and CamelCase it",
              " replacing '.' with underscore and use that to prefix the types/symbols",
              " defined. When this options is provided, they will use this value instead",
              " to prefix the types/symbols defined."
            ]
          },
          "FileOptions:php_class_prefix": {
            "paramName": "php_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the php class prefix which is prepended to all php generated classes",
              " from this .proto. Default is empty."
            ]
          },
          "FileOptions:php_namespace": {
            "paramName": "php_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated classes. Default",
              " is empty. When this option is empty, the package name will be used for",
              " determining the namespace."
            ]
          },
          "FileOptions:php_metadata_namespace": {
            "paramName": "php_metadata_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated metadata classes.",
              " Default is empty. When this option is empty, the proto file name will be",
              " used for determining the namespace."
            ]
          },
          "FileOptions:ruby_package": {
            "paramName": "ruby_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the package of ruby generated classes. Default",
              " is empty. When this option is not set, the package name will be used for",
              " determining the ruby package."
            ]
          },
          "FileOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FileOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here.",
              " See the documentation for the \"Options\" section above."
            ]
          },
          "MessageOptions:message_set_wire_format": {
            "paramName": "message_set_wire_format",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set true to use the old proto1 MessageSet wire format for extensions.",
              " This is provided for backwards-compatibility with the MessageSet wire",
              " format.  You should not use this for any other reason:  It's less",
              " efficient, has fewer features, and is more complicated.",
              "",
              " The message must be defined exactly as follows:",
              "   message Foo {",
              "     option message_set_wire_format = true;",
              "     extensions 4 to max;",
              "   }",
              " Note that the message cannot have any defined fields; MessageSets only",
              " have extensions.",
              "",
              " All extensions of your type must be singular messages; e.g. they cannot",
              " be int32s, enums, or repeated messages.",
              "",
              " Because this is an option, the above two restrictions are not enforced by",
              " the protocol compiler."
            ]
          },
          "MessageOptions:no_standard_descriptor_accessor": {
            "paramName": "no_standard_descriptor_accessor",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Disables the generation of the standard \"descriptor()\" accessor, which can",
              " conflict with a field of the same name.  This is meant to make migration",
              " from proto1 easier; new code should avoid fields named \"descriptor\"."
            ]
          },
          "MessageOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this message deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the message, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating messages."
            ]
          },
          "MessageOptions:map_entry": {
            "paramName": "map_entry",
            "paramType": "TYPE_BOOL",
            "comments": [
              " NOTE: Do not set the option in .proto files. Always use the maps syntax",
              " instead. The option should only be implicitly set by the proto compiler",
              " parser.",
              "",
              " Whether the message is an automatically generated map entry type for the",
              " maps field.",
              "",
              " For maps fields:",
              "     map<KeyType, ValueType> map_field = 1;",
              " The parsed descriptor looks like:",
              "     message MapFieldEntry {",
              "         option map_entry = true;",
              "         optional KeyType key = 1;",
              "         optional ValueType value = 2;",
              "     }",
              "     repeated MapFieldEntry map_field = 1;",
              "",
              " Implementations may choose not to generate the map_entry=true message, but",
              " use a native map in the target language to hold the keys and values.",
              " The reflection APIs in such implementations still need to work as",
              " if the field is a repeated message field."
            ]
          },
          "MessageOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              "",
              " This should only be used as a temporary measure against broken builds due",
              " to the change in behavior for JSON field name conflicts.",
              "",
              " TODO(b/261750190) This is legacy behavior we plan to remove once downstream",
              " teams have had time to migrate."
            ]
          },
          "MessageOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MessageOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "FieldOptions:ctype": {
            "paramName": "ctype",
            "paramType": ".google.protobuf.FieldOptions.CType",
            "comments": [
              " The ctype option instructs the C++ code generator to use a different",
              " representation of the field than it normally would.  See the specific",
              " options below.  This option is only implemented to support use of",
              " [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of",
              " type \"bytes\" in the open source release -- sorry, we'll try to include",
              " other types in a future version!"
            ]
          },
          "FieldOptions:packed": {
            "paramName": "packed",
            "paramType": "TYPE_BOOL",
            "comments": [
              " The packed option can be enabled for repeated primitive fields to enable",
              " a more efficient representation on the wire. Rather than repeatedly",
              " writing the tag and type for each element, the entire array is encoded as",
              " a single length-delimited blob. In proto3, only explicit setting it to",
              " false will avoid using packed encoding."
            ]
          },
          "FieldOptions:jstype": {
            "paramName": "jstype",
            "paramType": ".google.protobuf.FieldOptions.JSType",
            "comments": [
              " The jstype option determines the JavaScript type used for values of the",
              " field.  The option is permitted only for 64 bit integral and fixed types",
              " (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING",
              " is represented as JavaScript string, which avoids loss of precision that",
              " can happen when a large value is converted to a floating point JavaScript.",
              " Specifying JS_NUMBER for the jstype causes the generated JavaScript code to",
              " use the JavaScript \"number\" type.  The behavior of the default option",
              " JS_NORMAL is implementation dependent.",
              "",
              " This option is an enum to permit additional types to be added, e.g.",
              " goog.math.Integer."
            ]
          },
          "FieldOptions:lazy": {
            "paramName": "lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should this field be parsed lazily?  Lazy applies only to message-type",
              " fields.  It means that when the outer message is initially parsed, the",
              " inner message's contents will not be parsed but instead stored in encoded",
              " form.  The inner message will actually be parsed when it is first accessed.",
              "",
              " This is only a hint.  Implementations are free to choose whether to use",
              " eager or lazy parsing regardless of the value of this option.  However,",
              " setting this option true suggests that the protocol author believes that",
              " using lazy parsing on this field is worth the additional bookkeeping",
              " overhead typically needed to implement it.",
              "",
              " This option does not affect the public interface of any generated code;",
              " all method signatures remain the same.  Furthermore, thread-safety of the",
              " interface is not affected by this option; const methods remain safe to",
              " call from multiple threads concurrently, while non-const methods continue",
              " to require exclusive access.",
              "",
              " Note that implementations may choose not to check required fields within",
              " a lazy sub-message.  That is, calling IsInitialized() on the outer message",
              " may return true even if the inner message has missing required fields.",
              " This is necessary because otherwise the inner message would have to be",
              " parsed in order to perform the check, defeating the purpose of lazy",
              " parsing.  An implementation which chooses not to check required fields",
              " must be consistent about it.  That is, for any particular sub-message, the",
              " implementation must either *always* check its required fields, or *never*",
              " check its required fields, regardless of whether or not the message has",
              " been parsed.",
              "",
              " As of May 2022, lazy verifies the contents of the byte stream during",
              " parsing.  An invalid byte stream will cause the overall parsing to fail."
            ]
          },
          "FieldOptions:unverified_lazy": {
            "paramName": "unverified_lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " unverified_lazy does no correctness checks on the byte stream. This should",
              " only be used where lazy with verification is prohibitive for performance",
              " reasons."
            ]
          },
          "FieldOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this field deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for accessors, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating fields."
            ]
          },
          "FieldOptions:weak": {
            "paramName": "weak",
            "paramType": "TYPE_BOOL",
            "comments": [
              " For Google-internal migration only. Do not use."
            ]
          },
          "FieldOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that the field value should not be printed out when using debug",
              " formats, e.g. when the field contains sensitive credentials."
            ]
          },
          "FieldOptions:retention": {
            "paramName": "retention",
            "paramType": ".google.protobuf.FieldOptions.OptionRetention",
            "comments": []
          },
          "FieldOptions:targets": {
            "paramName": "targets",
            "paramType": "TYPE_ENUM[]",
            "comments": []
          },
          "FieldOptions:edition_defaults": {
            "paramName": "edition_defaults",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FieldOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FieldOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "OneofOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "OneofOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumOptions:allow_alias": {
            "paramName": "allow_alias",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set this option to true to allow mapping different tag names to the same",
              " value."
            ]
          },
          "EnumOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating enums."
            ]
          },
          "EnumOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              " TODO(b/261750190) Remove this legacy behavior once downstream teams have",
              " had time to migrate."
            ]
          },
          "EnumOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumValueOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum value deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum value, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating enum values."
            ]
          },
          "EnumValueOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumValueOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that fields annotated with this enum value should not be printed",
              " out when using debug formats, e.g. when the field contains sensitive",
              " credentials."
            ]
          },
          "EnumValueOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ServiceOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ServiceOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this service deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the service, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating services."
            ]
          },
          "ServiceOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "MethodOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this method deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the method, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating methods."
            ]
          },
          "MethodOptions:idempotency_level": {
            "paramName": "idempotency_level",
            "paramType": ".google.protobuf.MethodOptions.IdempotencyLevel",
            "comments": []
          },
          "MethodOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MethodOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "UninterpretedOption:name": {
            "paramName": "name",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "UninterpretedOption:identifier_value": {
            "paramName": "identifier_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of the uninterpreted option, in whatever type the tokenizer",
              " identified it as during parsing. Exactly one of these should be set."
            ]
          },
          "UninterpretedOption:positive_int_value": {
            "paramName": "positive_int_value",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "UninterpretedOption:negative_int_value": {
            "paramName": "negative_int_value",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "UninterpretedOption:double_value": {
            "paramName": "double_value",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "UninterpretedOption:string_value": {
            "paramName": "string_value",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "UninterpretedOption:aggregate_value": {
            "paramName": "aggregate_value",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FeatureSet:field_presence": {
            "paramName": "field_presence",
            "paramType": ".google.protobuf.FeatureSet.FieldPresence",
            "comments": []
          },
          "FeatureSet:enum_type": {
            "paramName": "enum_type",
            "paramType": ".google.protobuf.FeatureSet.EnumType",
            "comments": []
          },
          "FeatureSet:repeated_field_encoding": {
            "paramName": "repeated_field_encoding",
            "paramType": ".google.protobuf.FeatureSet.RepeatedFieldEncoding",
            "comments": []
          },
          "FeatureSet:string_field_validation": {
            "paramName": "string_field_validation",
            "paramType": ".google.protobuf.FeatureSet.StringFieldValidation",
            "comments": []
          },
          "FeatureSet:message_encoding": {
            "paramName": "message_encoding",
            "paramType": ".google.protobuf.FeatureSet.MessageEncoding",
            "comments": []
          },
          "FeatureSet:json_format": {
            "paramName": "json_format",
            "paramType": ".google.protobuf.FeatureSet.JsonFormat",
            "comments": []
          },
          "FeatureSet:raw_features": {
            "paramName": "raw_features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": []
          },
          "SourceCodeInfo:location": {
            "paramName": "location",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A Location identifies a piece of source code in a .proto file which",
              " corresponds to a particular definition.  This information is intended",
              " to be useful to IDEs, code indexers, documentation generators, and similar",
              " tools.",
              "",
              " For example, say we have a file like:",
              "   message Foo {",
              "     optional string foo = 1;",
              "   }",
              " Let's look at just the field definition:",
              "   optional string foo = 1;",
              "   ^       ^^     ^^  ^  ^^^",
              "   a       bc     de  f  ghi",
              " We have the following locations:",
              "   span   path               represents",
              "   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.",
              "   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).",
              "   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).",
              "   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).",
              "   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).",
              "",
              " Notes:",
              " - A location may refer to a repeated field itself (i.e. not to any",
              "   particular index within it).  This is used whenever a set of elements are",
              "   logically enclosed in a single code segment.  For example, an entire",
              "   extend block (possibly containing multiple extension definitions) will",
              "   have an outer location whose path refers to the \"extensions\" repeated",
              "   field without an index.",
              " - Multiple locations may have the same path.  This happens when a single",
              "   logical declaration is spread out across multiple places.  The most",
              "   obvious example is the \"extend\" block again -- there may be multiple",
              "   extend blocks in the same scope, each of which will have the same path.",
              " - A location's span is not always a subset of its parent's span.  For",
              "   example, the \"extendee\" of an extension declaration appears at the",
              "   beginning of the \"extend\" block and is shared by all extensions within",
              "   the block.",
              " - Just because a location's span is a subset of some other location's span",
              "   does not mean that it is a descendant.  For example, a \"group\" defines",
              "   both a type and a field in a single declaration.  Thus, the locations",
              "   corresponding to the type and field and their components will overlap.",
              " - Code which tries to interpret locations should probably be designed to",
              "   ignore those that it doesn't understand, as more types of locations could",
              "   be recorded in the future."
            ]
          },
          "GeneratedCodeInfo:annotation": {
            "paramName": "annotation",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " An Annotation connects some span of text in generated code to an element",
              " of its generating .proto file."
            ]
          },
          "Duration:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Signed seconds of the span of time. Must be from -315,576,000,000",
              " to +315,576,000,000 inclusive. Note: these bounds are computed from:",
              " 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
            ]
          },
          "Duration:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Signed fractions of a second at nanosecond resolution of the span",
              " of time. Durations less than one second are represented with a 0",
              " `seconds` field and a positive or negative `nanos` field. For durations",
              " of one second or more, a non-zero value for the `nanos` field must be",
              " of the same sign as the `seconds` field. Must be from -999,999,999",
              " to +999,999,999 inclusive."
            ]
          },
          "CommonLanguageSettings:reference_docs_uri": {
            "paramName": "reference_docs_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to automatically generated reference documentation.  Example:",
              " https://cloud.google.com/nodejs/docs/reference/asset/latest"
            ]
          },
          "CommonLanguageSettings:destinations": {
            "paramName": "destinations",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " The destination where API teams want this client library to be published."
            ]
          },
          "ClientLibrarySettings:version": {
            "paramName": "version",
            "paramType": "TYPE_STRING",
            "comments": [
              " Version of the API to apply these settings to. This is the full protobuf",
              " package for the API, ending in the version element.",
              " Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\"."
            ]
          },
          "ClientLibrarySettings:launch_stage": {
            "paramName": "launch_stage",
            "paramType": ".google.api.LaunchStage",
            "comments": [
              " Launch stage of this version of the API."
            ]
          },
          "ClientLibrarySettings:rest_numeric_enums": {
            "paramName": "rest_numeric_enums",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When using transport=rest, the client request will encode enums as",
              " numbers rather than strings."
            ]
          },
          "ClientLibrarySettings:java_settings": {
            "paramName": "java_settings",
            "paramType": ".google.api.JavaSettings",
            "comments": [
              " Settings for legacy Java features, supported in the Service YAML."
            ]
          },
          "ClientLibrarySettings:cpp_settings": {
            "paramName": "cpp_settings",
            "paramType": ".google.api.CppSettings",
            "comments": [
              " Settings for C++ client libraries."
            ]
          },
          "ClientLibrarySettings:php_settings": {
            "paramName": "php_settings",
            "paramType": ".google.api.PhpSettings",
            "comments": [
              " Settings for PHP client libraries."
            ]
          },
          "ClientLibrarySettings:python_settings": {
            "paramName": "python_settings",
            "paramType": ".google.api.PythonSettings",
            "comments": [
              " Settings for Python client libraries."
            ]
          },
          "ClientLibrarySettings:node_settings": {
            "paramName": "node_settings",
            "paramType": ".google.api.NodeSettings",
            "comments": [
              " Settings for Node client libraries."
            ]
          },
          "ClientLibrarySettings:dotnet_settings": {
            "paramName": "dotnet_settings",
            "paramType": ".google.api.DotnetSettings",
            "comments": [
              " Settings for .NET client libraries."
            ]
          },
          "ClientLibrarySettings:ruby_settings": {
            "paramName": "ruby_settings",
            "paramType": ".google.api.RubySettings",
            "comments": [
              " Settings for Ruby client libraries."
            ]
          },
          "ClientLibrarySettings:go_settings": {
            "paramName": "go_settings",
            "paramType": ".google.api.GoSettings",
            "comments": [
              " Settings for Go client libraries."
            ]
          },
          "Publishing:method_settings": {
            "paramName": "method_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of API method settings, e.g. the behavior for methods that use the",
              " long-running operation pattern."
            ]
          },
          "Publishing:new_issue_uri": {
            "paramName": "new_issue_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to a *public* URI where users can report issues.  Example:",
              " https://issuetracker.google.com/issues/new?component=190865&template=1161103"
            ]
          },
          "Publishing:documentation_uri": {
            "paramName": "documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to product home page.  Example:",
              " https://cloud.google.com/asset-inventory/docs/overview"
            ]
          },
          "Publishing:api_short_name": {
            "paramName": "api_short_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " Used as a tracking tag when collecting data about the APIs developer",
              " relations artifacts like docs, packages delivered to package managers,",
              " etc.  Example: \"speech\"."
            ]
          },
          "Publishing:github_label": {
            "paramName": "github_label",
            "paramType": "TYPE_STRING",
            "comments": [
              " GitHub label to apply to issues and pull requests opened for this API."
            ]
          },
          "Publishing:codeowner_github_teams": {
            "paramName": "codeowner_github_teams",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " GitHub teams to be added to CODEOWNERS in the directory in GitHub",
              " containing source code for the client libraries for this API."
            ]
          },
          "Publishing:doc_tag_prefix": {
            "paramName": "doc_tag_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " A prefix used in sample code when demarking regions to be included in",
              " documentation."
            ]
          },
          "Publishing:organization": {
            "paramName": "organization",
            "paramType": ".google.api.ClientLibraryOrganization",
            "comments": [
              " For whom the client library is being published."
            ]
          },
          "Publishing:library_settings": {
            "paramName": "library_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Client library settings.  If the same version string appears multiple",
              " times in this list, then the last one wins.  Settings from earlier",
              " settings with the same version string are discarded."
            ]
          },
          "Publishing:proto_reference_documentation_uri": {
            "paramName": "proto_reference_documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional link to proto reference documentation.  Example:",
              " https://cloud.google.com/pubsub/lite/docs/reference/rpc"
            ]
          },
          "JavaSettings:library_package": {
            "paramName": "library_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " The package name to use in Java. Clobbers the java_package option",
              " set in the protobuf. This should be used **only** by APIs",
              " who have already set the language_settings.java.package_name\" field",
              " in gapic.yaml. API teams should use the protobuf java_package option",
              " where possible.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      library_package: com.google.cloud.pubsub.v1"
            ]
          },
          "JavaSettings:service_class_names": {
            "paramName": "service_class_names",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Configure the Java class name to use instead of the service's for its",
              " corresponding generated GAPIC client. Keys are fully-qualified",
              " service names as they appear in the protobuf (including the full",
              " the language_settings.java.interface_names\" field in gapic.yaml. API",
              " teams should otherwise use the service name as it appears in the",
              " protobuf.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      service_class_names:",
              "        - google.pubsub.v1.Publisher: TopicAdmin",
              "        - google.pubsub.v1.Subscriber: SubscriptionAdmin"
            ]
          },
          "JavaSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "CppSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PhpSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PythonSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "NodeSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:renamed_services": {
            "paramName": "renamed_services",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from original service names to renamed versions.",
              " This is used when the default generated types",
              " would cause a naming conflict. (Neither name is",
              " fully-qualified.)",
              " Example: Subscriber to SubscriberServiceApi."
            ]
          },
          "DotnetSettings:renamed_resources": {
            "paramName": "renamed_resources",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from full resource types to the effective short name",
              " for the resource. This is used when otherwise resource",
              " named from different services would cause naming collisions.",
              " Example entry:",
              " \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\""
            ]
          },
          "DotnetSettings:ignored_resources": {
            "paramName": "ignored_resources",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " List of full resource types to ignore during generation.",
              " This is typically used for API-specific Location resources,",
              " which should be handled by the generator as if they were actually",
              " the common Location resources.",
              " Example entry: \"documentai.googleapis.com/Location\""
            ]
          },
          "DotnetSettings:forced_namespace_aliases": {
            "paramName": "forced_namespace_aliases",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Namespaces which must be aliased in snippets due to",
              " a known (but non-generator-predictable) naming collision"
            ]
          },
          "DotnetSettings:handwritten_signatures": {
            "paramName": "handwritten_signatures",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Method signatures (in the form \"service.method(signature)\")",
              " which are provided separately, so shouldn't be generated.",
              " Snippets *calling* these methods are still generated, however."
            ]
          },
          "RubySettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "GoSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "MethodSettings:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " The fully qualified name of the method, for which the options below apply.",
              " This is used to find the method to apply the options."
            ]
          },
          "MethodSettings:long_running": {
            "paramName": "long_running",
            "paramType": ".google.api.MethodSettings.LongRunning",
            "comments": [
              " Describes settings to use for long-running operations when generating",
              " API methods for RPCs. Complements RPCs that use the annotations in",
              " google/longrunning/operations.proto.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    method_settings:",
              "      - selector: google.cloud.speech.v2.Speech.BatchRecognize",
              "        long_running:",
              "          initial_poll_delay:",
              "            seconds: 60 # 1 minute",
              "          poll_delay_multiplier: 1.5",
              "          max_poll_delay:",
              "            seconds: 360 # 6 minutes",
              "          total_poll_timeout:",
              "             seconds: 54000 # 90 minutes"
            ]
          },
          "Compliance": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
              " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
              " correctly."
            ]
          },
          "Compliance:RepeatDataBody": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the entire request object in the REST body.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyInfo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the a message-type field in the REST body. Per AIP-127, only",
              " top-level, non-repeated fields can be sent this way.",
              ""
            ]
          },
          "Compliance:RepeatDataQuery": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending all request fields as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataSimplePath": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending some parameters as \"simple\" path variables (i.e., of the form",
              " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataPathResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a path resource.",
              ""
            ]
          },
          "Compliance:RepeatDataPathTrailingResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a trailing resource.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPut": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PUT method.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPatch": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PATCH method.",
              ""
            ]
          },
          "Compliance:GetEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
              " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
              " response from this RPC as the request to VerifyEnum()",
              "",
              " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
              " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "Compliance:VerifyEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
              " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
              " with the same EnumResponse; otherwise, the RPC errors.",
              "",
              " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
              " although they are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "RepeatRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "RepeatRequest:info": {
            "paramName": "info",
            "paramType": ".google.showcase.v1beta1.ComplianceData",
            "comments": []
          },
          "RepeatRequest:server_verify": {
            "paramName": "server_verify",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, the server will verify that the received request matches",
              " the request with the same name in the compliance test suite."
            ]
          },
          "RepeatRequest:intended_binding_uri": {
            "paramName": "intended_binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template this request is expected to be bound to server-side."
            ]
          },
          "RepeatRequest:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": [
              " Some top level fields, to test that these are encoded correctly",
              " in query params."
            ]
          },
          "RepeatRequest:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatRequest:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "RepeatRequest:p_int64": {
            "paramName": "p_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.RepeatRequest",
            "comments": []
          },
          "RepeatResponse:binding_uri": {
            "paramName": "binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template the request was bound to server-side."
            ]
          },
          "ComplianceSuite:group": {
            "paramName": "group",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceGroup:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceGroup:rpcs": {
            "paramName": "rpcs",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "ComplianceGroup:requests": {
            "paramName": "requests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceData:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:f_sint32": {
            "paramName": "f_sint32",
            "paramType": "TYPE_SINT32",
            "comments": []
          },
          "ComplianceData:f_sfixed32": {
            "paramName": "f_sfixed32",
            "paramType": "TYPE_SFIXED32",
            "comments": []
          },
          "ComplianceData:f_uint32": {
            "paramName": "f_uint32",
            "paramType": "TYPE_UINT32",
            "comments": []
          },
          "ComplianceData:f_fixed32": {
            "paramName": "f_fixed32",
            "paramType": "TYPE_FIXED32",
            "comments": []
          },
          "ComplianceData:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "ComplianceData:f_sint64": {
            "paramName": "f_sint64",
            "paramType": "TYPE_SINT64",
            "comments": []
          },
          "ComplianceData:f_sfixed64": {
            "paramName": "f_sfixed64",
            "paramType": "TYPE_SFIXED64",
            "comments": []
          },
          "ComplianceData:f_uint64": {
            "paramName": "f_uint64",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "ComplianceData:f_fixed64": {
            "paramName": "f_fixed64",
            "paramType": "TYPE_FIXED64",
            "comments": []
          },
          "ComplianceData:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceData:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:f_bytes": {
            "paramName": "f_bytes",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "ComplianceData:f_kingdom": {
            "paramName": "f_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceData:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:p_kingdom": {
            "paramName": "p_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceDataChild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:f_continent": {
            "paramName": "f_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataChild:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:p_float": {
            "paramName": "p_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:p_continent": {
            "paramName": "p_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataGrandchild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataGrandchild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataGrandchild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "EnumRequest:unknown_enum": {
            "paramName": "unknown_enum",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
            ]
          },
          "EnumResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.EnumRequest",
            "comments": [
              " The original request for a known or unknown enum from the server."
            ]
          },
          "EnumResponse:continent": {
            "paramName": "continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": [
              " The actual enum the server provided."
            ]
          },
          "RoutingRule:routing_parameters": {
            "paramName": "routing_parameters",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A collection of Routing Parameter specifications.",
              " **NOTE:** If multiple Routing Parameters describe the same key",
              " (via the `path_template` field or via the `field` field when",
              " `path_template` is not provided), \"last one wins\" rule",
              " determines which Parameter gets used.",
              " See the examples for more details."
            ]
          },
          "RoutingParameter:field": {
            "paramName": "field",
            "paramType": "TYPE_STRING",
            "comments": [
              " A request field to extract the header key-value pair from."
            ]
          },
          "RoutingParameter:path_template": {
            "paramName": "path_template",
            "paramType": "TYPE_STRING",
            "comments": [
              " A pattern matching the key-value field. Optional.",
              " If not specified, the whole field specified in the `field` field will be",
              " taken as value, and its name used as key. If specified, it MUST contain",
              " exactly one named segment (along with any number of unnamed segments) The",
              " pattern will be matched over the field specified in the `field` field, then",
              " if the match is successful:",
              " - the name of the single named segment will be used as a header name,",
              " - the match value of the segment will be used as a header value;",
              " if the match is NOT successful, nothing will be sent.",
              "",
              " Example:",
              "",
              "               -- This is a field in the request message",
              "              |   that the header value will be extracted from.",
              "              |",
              "              |                     -- This is the key name in the",
              "              |                    |   routing header.",
              "              V                    |",
              "     field: \"table_name\"           v",
              "     path_template: \"projects/*/{table_location=instances/*}/tables/*\"",
              "                                                ^            ^",
              "                                                |            |",
              "       In the {} brackets is the pattern that --             |",
              "       specifies what to extract from the                    |",
              "       field as a value to be sent.                          |",
              "                                                             |",
              "      The string in the field must match the whole pattern --",
              "      before brackets, inside brackets, after brackets.",
              "",
              " When looking at this specific example, we can see that:",
              " - A key-value pair with the key `table_location`",
              "   and the value matching `instances/*` should be added",
              "   to the x-goog-request-params routing header.",
              " - The value is extracted from the request message's `table_name` field",
              "   if it matches the full pattern specified:",
              "   `projects/*/instances/*/tables/*`.",
              "",
              " **NB:** If the `path_template` field is not provided, the key name is",
              " equal to the field name, and the whole field should be sent as a value.",
              " This makes the pattern for the field and the value functionally equivalent",
              " to `**`, and the configuration",
              "",
              "     {",
              "       field: \"table_name\"",
              "     }",
              "",
              " is a functionally equivalent shorthand to:",
              "",
              "     {",
              "       field: \"table_name\"",
              "       path_template: \"{table_name=**}\"",
              "     }",
              "",
              " See Example 1 for more details."
            ]
          },
          "Any:type_url": {
            "paramName": "type_url",
            "paramType": "TYPE_STRING",
            "comments": [
              " A URL/resource name that uniquely identifies the type of the serialized",
              " protocol buffer message. This string must contain at least",
              " one \"/\" character. The last segment of the URL's path must represent",
              " the fully qualified name of the type (as in",
              " `path/google.protobuf.Duration`). The name should be in a canonical form",
              " (e.g., leading \".\" is not accepted).",
              "",
              " In practice, teams usually precompile into the binary all types that they",
              " expect it to use in the context of Any. However, for URLs which use the",
              " scheme `http`, `https`, or no scheme, one can optionally set up a type",
              " server that maps type URLs to message definitions as follows:",
              "",
              " * If no scheme is provided, `https` is assumed.",
              " * An HTTP GET on the URL must yield a [google.protobuf.Type][]",
              "   value in binary format, or produce an error.",
              " * Applications are allowed to cache lookup results based on the",
              "   URL, or have them precompiled into a binary to avoid any",
              "   lookup. Therefore, binary compatibility needs to be preserved",
              "   on changes to types. (Use versioned type names to manage",
              "   breaking changes.)",
              "",
              " Note: this functionality is not currently available in the official",
              " protobuf release, and it is not used for type URLs beginning with",
              " type.googleapis.com. As of May 2023, there are no widely used type server",
              " implementations and no plans to implement one.",
              "",
              " Schemes other than `http`, `https` (or the empty scheme) might be",
              " used with implementation specific semantics.",
              ""
            ]
          },
          "Any:value": {
            "paramName": "value",
            "paramType": "TYPE_BYTES",
            "comments": [
              " Must be a valid serialized protocol buffer of the above specified type."
            ]
          },
          "Status:code": {
            "paramName": "code",
            "paramType": "TYPE_INT32",
            "comments": [
              " The status code, which should be an enum value of",
              " [google.rpc.Code][google.rpc.Code]."
            ]
          },
          "Status:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " A developer-facing error message, which should be in English. Any",
              " user-facing error message should be localized and sent in the",
              " [google.rpc.Status.details][google.rpc.Status.details] field, or localized",
              " by the client."
            ]
          },
          "Status:details": {
            "paramName": "details",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of messages that carry the error details.  There is a common set of",
              " message types for APIs to use."
            ]
          },
          "Operations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Manages long-running operations with an API service.",
              "",
              " When an API method normally takes long time to complete, it can be designed",
              " to return [Operation][google.longrunning.Operation] to the client, and the client can use this",
              " interface to receive the real response asynchronously by polling the",
              " operation resource, or pass the operation resource to another API (such as",
              " Google Cloud Pub/Sub API) to receive the response.  Any API service that",
              " returns long-running operations should implement the `Operations` interface",
              " so developers can have a consistent client experience."
            ]
          },
          "Operations:ListOperations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists operations that match the specified filter in the request. If the",
              " server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "",
              " NOTE: the `name` binding allows API services to override the binding",
              " to use different resource name schemes, such as `users/*/operations`. To",
              " override the binding, API services can add a binding such as",
              " `\"/v1/{name=users/*}/operations\"` to their service configuration.",
              " For backwards compatibility, the default name includes the operations",
              " collection id, however overriding users must ensure the name binding",
              " is the parent resource, without the operations collection id.",
              ""
            ]
          },
          "Operations:GetOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets the latest state of a long-running operation.  Clients can use this",
              " method to poll the operation result at intervals as recommended by the API",
              " service.",
              ""
            ]
          },
          "Operations:DeleteOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a long-running operation. This method indicates that the client is",
              " no longer interested in the operation result. It does not cancel the",
              " operation. If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              ""
            ]
          },
          "Operations:CancelOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Starts asynchronous cancellation on a long-running operation.  The server",
              " makes a best effort to cancel the operation, but success is not",
              " guaranteed.  If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.  Clients can use",
              " [Operations.GetOperation][google.longrunning.Operations.GetOperation] or",
              " other methods to check whether the cancellation succeeded or whether the",
              " operation completed despite cancellation. On successful cancellation,",
              " the operation is not deleted; instead, it becomes an operation with",
              " an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,",
              " corresponding to `Code.CANCELLED`.",
              ""
            ]
          },
          "Operations:WaitOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Waits until the specified long-running operation is done or reaches at most",
              " a specified timeout, returning the latest state.  If the operation is",
              " already done, the latest state is immediately returned.  If the timeout",
              " specified is greater than the default HTTP/RPC timeout, the HTTP/RPC",
              " timeout is used.  If the server does not support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              " Note that this method is on a best-effort basis.  It may return the latest",
              " state before the specified timeout (including immediately), meaning even an",
              " immediate response is no guarantee that the operation is done.",
              ""
            ]
          },
          "Operation:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The server-assigned name, which is only unique within the same service that",
              " originally returns it. If you use the default HTTP mapping, the",
              " `name` should be a resource name ending with `operations/{unique_id}`."
            ]
          },
          "Operation:metadata": {
            "paramName": "metadata",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " Service-specific metadata associated with the operation.  It typically",
              " contains progress information and common metadata such as create time.",
              " Some services might not provide such metadata.  Any method that returns a",
              " long-running operation should document the metadata type, if any."
            ]
          },
          "Operation:done": {
            "paramName": "done",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If the value is `false`, it means the operation is still in progress.",
              " If `true`, the operation is completed, and either `error` or `response` is",
              " available."
            ]
          },
          "Operation:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error result of the operation in case of failure or cancellation."
            ]
          },
          "Operation:response": {
            "paramName": "response",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " The normal response of the operation in case of success.  If the original",
              " method returns no data on success, such as `Delete`, the response is",
              " `google.protobuf.Empty`.  If the original method is standard",
              " `Get`/`Create`/`Update`, the response should be the resource.  For other",
              " methods, the response should have the type `XxxResponse`, where `Xxx`",
              " is the original method name.  For example, if the original method name",
              " is `TakeSnapshot()`, the inferred response type is",
              " `TakeSnapshotResponse`."
            ]
          },
          "GetOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource."
            ]
          },
          "ListOperationsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation's parent resource."
            ]
          },
          "ListOperationsRequest:filter": {
            "paramName": "filter",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list filter."
            ]
          },
          "ListOperationsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The standard list page size."
            ]
          },
          "ListOperationsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list page token."
            ]
          },
          "ListOperationsResponse:operations": {
            "paramName": "operations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of operations that matches the specified filter in the request."
            ]
          },
          "ListOperationsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard List next-page token."
            ]
          },
          "CancelOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be cancelled."
            ]
          },
          "DeleteOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be deleted."
            ]
          },
          "WaitOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to wait on."
            ]
          },
          "WaitOperationRequest:timeout": {
            "paramName": "timeout",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The maximum duration to wait before timing out. If left blank, the wait",
              " will be at most the time permitted by the underlying HTTP/RPC protocol.",
              " If RPC context deadline is also specified, the shorter one will be used."
            ]
          },
          "OperationInfo:response_type": {
            "paramName": "response_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the primary return type for this",
              " long-running operation.",
              " This type will be used to deserialize the LRO's response.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "OperationInfo:metadata_type": {
            "paramName": "metadata_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the metadata type for this long-running",
              " operation.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "Timestamp:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Represents seconds of UTC time since Unix epoch",
              " 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to",
              " 9999-12-31T23:59:59Z inclusive."
            ]
          },
          "Timestamp:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Non-negative fractions of a second at nanosecond resolution. Negative",
              " second values with fractions must still have non-negative nanos values",
              " that count forward in time. Must be from 0 to 999,999,999",
              " inclusive."
            ]
          },
          "Echo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used showcase the four main types of rpcs - unary, server",
              " side streaming, client side streaming, and bidirectional streaming. This",
              " service also exposes methods that explicitly implement server delay, and",
              " paginated calls. Set the 'showcase-trailer' metadata key on any method",
              " to have the values echoed in the response trailers. Set the ",
              " 'x-goog-request-params' metadata key on any method to have the values",
              " echoed in the response headers."
            ]
          },
          "Echo:Expand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method splits the given content into words and will pass each word back",
              " through the stream. This method showcases server-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Collect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will collect the words given to it. When the stream is closed",
              " by the client, this method will return the a concatenation of the strings",
              " passed to it. This method showcases client-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Chat": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method, upon receiving a request on the stream, will pass the same",
              " content back on the stream. This method showcases bidirectional",
              " streaming RPCs.",
              ""
            ]
          },
          "Echo:PagedExpand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the Expand method but instead of returning a stream of",
              " expanded words, this method returns a paged list of expanded words.",
              ""
            ]
          },
          "Echo:PagedExpandLegacy": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the PagedExpand except that it uses",
              " max_results instead of page_size, as some legacy APIs still",
              " do. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:PagedExpandLegacyMapped": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method returns a map containing lists of words that appear in the input, keyed by their",
              " initial character. The only words returned are the ones included in the current page,",
              " as determined by page_token and page_size, which both refer to the word indices in the",
              " input. This paging result consisting of a map of lists is a pattern used by some legacy",
              " APIs. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:Wait": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will wait for the requested amount of time and then return.",
              " This method showcases how a client handles a request timeout.",
              ""
            ]
          },
          "Echo:Block": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will block (wait) for the requested amount of time",
              " and then return the response or error.",
              " This method showcases how a client handles delays or retries.",
              ""
            ]
          },
          "EchoRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content to be echoed by the server."
            ]
          },
          "EchoRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error to be thrown by the server."
            ]
          },
          "EchoRequest:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity to be echoed by the server."
            ]
          },
          "EchoRequest:header": {
            "paramName": "header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoRequest:other_header": {
            "paramName": "other_header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content specified in the request."
            ]
          },
          "EchoResponse:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity specified in the request."
            ]
          },
          "ExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content that will be split into words and returned on the stream."
            ]
          },
          "ExpandRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that is thrown after all words are sent on the stream."
            ]
          },
          "PagedExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page."
            ]
          },
          "PagedExpandRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandLegacyRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandLegacyRequest:max_results": {
            "paramName": "max_results",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
              "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
            ]
          },
          "PagedExpandLegacyRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandResponse:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded."
            ]
          },
          "PagedExpandResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "PagedExpandResponseList:words": {
            "paramName": "words",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "PagedExpandLegacyMappedResponse:alphabetized": {
            "paramName": "alphabetized",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded, indexed by their initial character.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates",
              "     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)"
            ]
          },
          "PagedExpandLegacyMappedResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "WaitRequest:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "WaitRequest:ttl": {
            "paramName": "ttl",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The duration of this operation."
            ]
          },
          "WaitRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "WaitRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.WaitResponse",
            "comments": [
              " The response to be returned on operation completion."
            ]
          },
          "WaitResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content of the result."
            ]
          },
          "WaitMetadata:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "BlockRequest:response_delay": {
            "paramName": "response_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The amount of time to block before returning a response."
            ]
          },
          "BlockRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "BlockRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.BlockResponse",
            "comments": [
              " The response to be returned that will signify successful method call."
            ]
          },
          "BlockResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content can contain anything, the server will not depend on a value",
              " here."
            ]
          },
          "ResourceDescriptor:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type. It must be in the format of",
              " {service_name}/{resource_type_kind}. The `resource_type_kind` must be",
              " singular and must not include version numbers.",
              "",
              " Example: `storage.googleapis.com/Bucket`",
              "",
              " The value of the resource_type_kind must follow the regular expression",
              " /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and",
              " should use PascalCase (UpperCamelCase). The maximum number of",
              " characters allowed for the `resource_type_kind` is 100."
            ]
          },
          "ResourceDescriptor:pattern": {
            "paramName": "pattern",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Optional. The relative resource name pattern associated with this resource",
              " type. The DNS prefix of the full resource name shouldn't be specified here.",
              "",
              " The path pattern must follow the syntax, which aligns with HTTP binding",
              " syntax:",
              "",
              "     Template = Segment { \"/\" Segment } ;",
              "     Segment = LITERAL | Variable ;",
              "     Variable = \"{\" LITERAL \"}\" ;",
              "",
              " Examples:",
              "",
              "     - \"projects/{project}/topics/{topic}\"",
              "     - \"projects/{project}/knowledgeBases/{knowledge_base}\"",
              "",
              " The components in braces correspond to the IDs for each resource in the",
              " hierarchy. It is expected that, if multiple patterns are provided,",
              " the same component name (e.g. \"project\") refers to IDs of the same",
              " type of resource."
            ]
          },
          "ResourceDescriptor:name_field": {
            "paramName": "name_field",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The field on the resource that designates the resource name",
              " field. If omitted, this is assumed to be \"name\"."
            ]
          },
          "ResourceDescriptor:history": {
            "paramName": "history",
            "paramType": ".google.api.ResourceDescriptor.History",
            "comments": [
              " Optional. The historical or future-looking state of the resource pattern.",
              "",
              " Example:",
              "",
              "     // The InspectTemplate message originally only supported resource",
              "     // names with organization, and project was added later.",
              "     message InspectTemplate {",
              "       option (google.api.resource) = {",
              "         type: \"dlp.googleapis.com/InspectTemplate\"",
              "         pattern:",
              "         \"organizations/{organization}/inspectTemplates/{inspect_template}\"",
              "         pattern: \"projects/{project}/inspectTemplates/{inspect_template}\"",
              "         history: ORIGINALLY_SINGLE_PATTERN",
              "       };",
              "     }"
            ]
          },
          "ResourceDescriptor:plural": {
            "paramName": "plural",
            "paramType": "TYPE_STRING",
            "comments": [
              " The plural name used in the resource name and permission names, such as",
              " 'projects' for the resource name of 'projects/{project}' and the permission",
              " name of 'cloudresourcemanager.googleapis.com/projects.get'. It is the same",
              " concept of the `plural` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              "",
              " Note: The plural form is required even for singleton resources. See",
              " https://aip.dev/156"
            ]
          },
          "ResourceDescriptor:singular": {
            "paramName": "singular",
            "paramType": "TYPE_STRING",
            "comments": [
              " The same concept of the `singular` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              " Such as \"project\" for the `resourcemanager.googleapis.com/Project` type."
            ]
          },
          "ResourceDescriptor:style": {
            "paramName": "style",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " Style flag(s) for this resource.",
              " These indicate that a resource is expected to conform to a given",
              " style. See the specific style flags for additional information."
            ]
          },
          "ResourceReference:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type that the annotated field references.",
              "",
              " Example:",
              "",
              "     message Subscription {",
              "       string topic = 2 [(google.api.resource_reference) = {",
              "         type: \"pubsub.googleapis.com/Topic\"",
              "       }];",
              "     }",
              "",
              " Occasionally, a field may reference an arbitrary resource. In this case,",
              " APIs use the special value * in their resource reference.",
              "",
              " Example:",
              "",
              "     message GetIamPolicyRequest {",
              "       string resource = 2 [(google.api.resource_reference) = {",
              "         type: \"*\"",
              "       }];",
              "     }"
            ]
          },
          "ResourceReference:child_type": {
            "paramName": "child_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type of a child collection that the annotated field",
              " references. This is useful for annotating the `parent` field that",
              " doesn't have a fixed resource type.",
              "",
              " Example:",
              "",
              "     message ListLogEntriesRequest {",
              "       string parent = 1 [(google.api.resource_reference) = {",
              "         child_type: \"logging.googleapis.com/LogEntry\"",
              "       };",
              "     }"
            ]
          },
          "FieldMask:paths": {
            "paramName": "paths",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The set of field mask paths."
            ]
          },
          "Identity": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple identity service."
            ]
          },
          "Identity:CreateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a user.",
              ""
            ]
          },
          "Identity:GetUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the User with the given uri.",
              ""
            ]
          },
          "Identity:UpdateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a user.",
              ""
            ]
          },
          "Identity:DeleteUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a user, their profile, and all of their authored messages.",
              ""
            ]
          },
          "Identity:ListUsers": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all users.",
              ""
            ]
          },
          "User:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user."
            ]
          },
          "User:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The display_name of the user."
            ],
            "fieldBehavior": 2
          },
          "User:email": {
            "paramName": "email",
            "paramType": "TYPE_STRING",
            "comments": [
              " The email address of the user."
            ],
            "fieldBehavior": 2
          },
          "User:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the user was created."
            ],
            "fieldBehavior": 3
          },
          "User:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the user was updated."
            ],
            "fieldBehavior": 3
          },
          "User:age": {
            "paramName": "age",
            "paramType": "TYPE_INT32",
            "comments": [
              " The age of the user in years."
            ]
          },
          "User:height_feet": {
            "paramName": "height_feet",
            "paramType": "TYPE_DOUBLE",
            "comments": [
              " The height of the user in feet."
            ]
          },
          "User:nickname": {
            "paramName": "nickname",
            "paramType": "TYPE_STRING",
            "comments": [
              " The nickname of the user.",
              "",
              " (-- aip.dev/not-precedent: An empty string is a valid nickname.",
              "     Ordinarily, proto3_optional should not be used on a `string` field. --)"
            ]
          },
          "User:enable_notifications": {
            "paramName": "enable_notifications",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the receiving of notifications. The default is true if unset.",
              "",
              " (-- aip.dev/not-precedent: The default for the feature is true.",
              "     Ordinarily, the default for a `bool` field should be false. --)"
            ]
          },
          "CreateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to create."
            ]
          },
          "GetUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested user."
            ],
            "fieldBehavior": 2
          },
          "UpdateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to update."
            ]
          },
          "UpdateUserRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user to delete."
            ],
            "fieldBehavior": 2
          },
          "ListUsersRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of users to return. Server may return fewer users",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListUsersRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Identity\\ListUsers` method."
            ]
          },
          "ListUsersResponse:users": {
            "paramName": "users",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of users."
            ]
          },
          "ListUsersResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListUsersRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Message\\ListUsers` method to retrieve the",
              " next page of results."
            ]
          },
          "ErrorInfo:reason": {
            "paramName": "reason",
            "paramType": "TYPE_STRING",
            "comments": [
              " The reason of the error. This is a constant value that identifies the",
              " proximate cause of the error. Error reasons are unique within a particular",
              " domain of errors. This should be at most 63 characters and match a",
              " regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents",
              " UPPER_SNAKE_CASE."
            ]
          },
          "ErrorInfo:domain": {
            "paramName": "domain",
            "paramType": "TYPE_STRING",
            "comments": [
              " The logical grouping to which the \"reason\" belongs. The error domain",
              " is typically the registered service name of the tool or product that",
              " generates the error. Example: \"pubsub.googleapis.com\". If the error is",
              " generated by some common infrastructure, the error domain must be a",
              " globally unique value that identifies the infrastructure. For Google API",
              " infrastructure, the error domain is \"googleapis.com\"."
            ]
          },
          "ErrorInfo:metadata": {
            "paramName": "metadata",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional structured details about this error.",
              "",
              " Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in",
              " length. When identifying the current value of an exceeded limit, the units",
              " should be contained in the key, not the value.  For example, rather than",
              " {\"instanceLimit\": \"100/request\"}, should be returned as,",
              " {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of",
              " instances that can be created in a single (batch) request."
            ]
          },
          "RetryInfo:retry_delay": {
            "paramName": "retry_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " Clients should wait at least this long between retrying the same request."
            ]
          },
          "DebugInfo:stack_entries": {
            "paramName": "stack_entries",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The stack trace entries indicating where the error occurred."
            ]
          },
          "DebugInfo:detail": {
            "paramName": "detail",
            "paramType": "TYPE_STRING",
            "comments": [
              " Additional debugging information provided by the server."
            ]
          },
          "QuotaFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all quota violations."
            ]
          },
          "PreconditionFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all precondition violations."
            ]
          },
          "BadRequest:field_violations": {
            "paramName": "field_violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all violations in a client request."
            ]
          },
          "RequestInfo:request_id": {
            "paramName": "request_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " An opaque string that should only be interpreted by the service generating",
              " it. For example, it can be used to identify requests in the service's logs."
            ]
          },
          "RequestInfo:serving_data": {
            "paramName": "serving_data",
            "paramType": "TYPE_STRING",
            "comments": [
              " Any data that was used to serve this request. For example, an encrypted",
              " stack trace that can be sent back to the service provider for debugging."
            ]
          },
          "ResourceInfo:resource_type": {
            "paramName": "resource_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " A name for the type of resource being accessed, e.g. \"sql table\",",
              " \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL",
              " of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\"."
            ]
          },
          "ResourceInfo:resource_name": {
            "paramName": "resource_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the resource being accessed.  For example, a shared calendar",
              " name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current",
              " error is",
              " [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED]."
            ]
          },
          "ResourceInfo:owner": {
            "paramName": "owner",
            "paramType": "TYPE_STRING",
            "comments": [
              " The owner of the resource (optional).",
              " For example, \"user:<owner email>\" or \"project:<Google developer project",
              " id>\"."
            ]
          },
          "ResourceInfo:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " Describes what error is encountered when accessing this resource.",
              " For example, updating a cloud project may require the `writer` permission",
              " on the developer console project."
            ]
          },
          "Help:links": {
            "paramName": "links",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " URL(s) pointing to additional information on handling the current error."
            ]
          },
          "LocalizedMessage:locale": {
            "paramName": "locale",
            "paramType": "TYPE_STRING",
            "comments": [
              " The locale used following the specification defined at",
              " https://www.rfc-editor.org/rfc/bcp/bcp47.txt.",
              " Examples are: \"en-US\", \"fr-CH\", \"es-MX\""
            ]
          },
          "LocalizedMessage:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " The localized error message in the above locale."
            ]
          },
          "Messaging": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple messaging service that implements chat rooms and profile posts.",
              "",
              " This messaging service showcases the features that API clients",
              " generated by gapic-generators implement."
            ]
          },
          "Messaging:CreateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a room.",
              ""
            ]
          },
          "Messaging:GetRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Room with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a room.",
              ""
            ]
          },
          "Messaging:DeleteRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a room and all of its blurbs.",
              ""
            ]
          },
          "Messaging:ListRooms": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all chat rooms.",
              ""
            ]
          },
          "Messaging:CreateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a blurb. If the parent is a room, the blurb is understood to be a",
              " message in that room. If the parent is a profile, the blurb is understood",
              " to be a post on the profile.",
              ""
            ]
          },
          "Messaging:GetBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Blurb with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a blurb.",
              ""
            ]
          },
          "Messaging:DeleteBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a blurb.",
              ""
            ]
          },
          "Messaging:ListBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists blurbs for a specific chat room or user profile depending on the",
              " parent resource name.",
              ""
            ]
          },
          "Messaging:SearchBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method searches through all blurbs across all rooms and profiles",
              " for blurbs containing to words found in the query. Only posts that",
              " contain an exact match of a queried word will be returned.",
              ""
            ]
          },
          "Messaging:StreamBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This returns a stream that emits the blurbs that are created for a",
              " particular chat room or user profile.",
              ""
            ]
          },
          "Messaging:SendBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is a stream to create multiple blurbs. If an invalid blurb is",
              " requested to be created, the stream will close with an error.",
              ""
            ]
          },
          "Messaging:Connect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method starts a bidirectional stream that receives all blurbs that",
              " are being created after the stream has started and sends requests to create",
              " blurbs. If an invalid blurb is requested to be created, the stream will",
              " close with an error.",
              ""
            ]
          },
          "Room:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Room:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The human readable name of the chat room."
            ],
            "fieldBehavior": 2
          },
          "Room:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " The description of the chat room."
            ]
          },
          "Room:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the room was created."
            ],
            "fieldBehavior": 3
          },
          "Room:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the room was updated."
            ],
            "fieldBehavior": 3
          },
          "CreateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to create."
            ]
          },
          "GetRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "UpdateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to update."
            ]
          },
          "UpdateRoomRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "ListRoomsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of rooms return. Server may return fewer rooms",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListRoomsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListRooms` method."
            ]
          },
          "ListRoomsResponse:rooms": {
            "paramName": "rooms",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of rooms."
            ]
          },
          "ListRoomsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListRoomsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Messaging\\ListRooms` method to retrieve",
              " the next page of results."
            ]
          },
          "Blurb:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Blurb:user": {
            "paramName": "user",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the blurb's author."
            ],
            "fieldBehavior": 2
          },
          "Blurb:text": {
            "paramName": "text",
            "paramType": "TYPE_STRING",
            "comments": [
              " The textual content of this blurb."
            ]
          },
          "Blurb:image": {
            "paramName": "image",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The image content of this blurb."
            ]
          },
          "Blurb:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the blurb was created."
            ],
            "fieldBehavior": 3
          },
          "Blurb:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the blurb was updated."
            ],
            "fieldBehavior": 3
          },
          "Blurb:legacy_room_id": {
            "paramName": "legacy_room_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the room. This field is used to signal",
              " the use of the compound resource pattern",
              " `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`"
            ]
          },
          "Blurb:legacy_user_id": {
            "paramName": "legacy_user_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the user. This field is used to signal",
              " the use of the compound resource pattern",
              " `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`"
            ]
          },
          "CreateBlurbRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room or user profile that this blurb will",
              " be tied to."
            ],
            "fieldBehavior": 2
          },
          "CreateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to create."
            ]
          },
          "GetBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "UpdateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to update."
            ]
          },
          "UpdateBlurbRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine wich fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room or profile whos blurbs to list."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs to return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "ListBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
            ]
          },
          "ListBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of blurbs."
            ]
          },
          "ListBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\ListBlurbs` method to retrieve",
              " the next page of results."
            ]
          },
          "SearchBlurbsRequest:query": {
            "paramName": "query",
            "paramType": "TYPE_STRING",
            "comments": [
              " The query used to search for blurbs containing to words of this string.",
              " Only posts that contain an exact match of a queried word will be returned."
            ],
            "fieldBehavior": 2
          },
          "SearchBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
              " rooms and all profiles."
            ]
          },
          "SearchBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "SearchBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of",
              " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
            ]
          },
          "SearchBlurbsMetadata:retry_info": {
            "paramName": "retry_info",
            "paramType": ".google.rpc.RetryInfo",
            "comments": [
              " This signals to the client when to next poll for response."
            ]
          },
          "SearchBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Blurbs that matched the search query."
            ]
          },
          "SearchBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in SearchBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\SearchBlurbs` method to",
              " retrieve the next page of results."
            ]
          },
          "StreamBlurbsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of a chat room or user profile whose blurbs to stream."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsRequest:expire_time": {
            "paramName": "expire_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time at which this stream will close."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsResponse:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb that was either created, updated, or deleted."
            ]
          },
          "StreamBlurbsResponse:action": {
            "paramName": "action",
            "paramType": ".google.showcase.v1beta1.StreamBlurbsResponse.Action",
            "comments": [
              " The action that triggered the blurb to be returned."
            ]
          },
          "SendBlurbsResponse:names": {
            "paramName": "names",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The names of successful blurb creations."
            ]
          },
          "ConnectRequest:config": {
            "paramName": "config",
            "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
            "comments": [
              " Provides information that specifies how to process subsequent requests.",
              " The first `ConnectRequest` message must contain a `config`  message."
            ]
          },
          "ConnectRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to be created."
            ]
          },
          "SequenceService": {
            "paramName": "",
            "paramType": "",
            "comments": []
          },
          "SequenceService:CreateSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a sequence.",
              ""
            ]
          },
          "SequenceService:GetSequenceReport": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves a sequence.",
              ""
            ]
          },
          "SequenceService:AttemptSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Attempts a sequence.",
              ""
            ]
          },
          "Sequence:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "Sequence:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Sequence of responses to return in order for each attempt. If empty, the",
              " default response is an immediate OK."
            ]
          },
          "SequenceReport:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "SequenceReport:attempts": {
            "paramName": "attempts",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The set of RPC attempts received by the server for a Sequence."
            ]
          },
          "CreateSequenceRequest:sequence": {
            "paramName": "sequence",
            "paramType": ".google.showcase.v1beta1.Sequence",
            "comments": []
          },
          "AttemptSequenceRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "GetSequenceReportRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "Testing": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A service to facilitate running discrete sets of tests",
              " against Showcase."
            ]
          },
          "Testing:CreateSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a new testing session.",
              ""
            ]
          },
          "Testing:GetSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets a testing session.",
              ""
            ]
          },
          "Testing:ListSessions": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists the current test sessions.",
              ""
            ]
          },
          "Testing:DeleteSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Delete a test session.",
              ""
            ]
          },
          "Testing:ReportSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Report on the status of a session.",
              " This generates a report detailing which tests have been completed,",
              " and an overall rollup.",
              ""
            ]
          },
          "Testing:ListTests": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " List the tests of a sessesion.",
              ""
            ]
          },
          "Testing:DeleteTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Explicitly decline to implement a test.",
              "",
              " This removes the test from subsequent `ListTests` calls, and",
              " attempting to do the test will error.",
              "",
              " This method will error if attempting to delete a required test.",
              ""
            ]
          },
          "Testing:VerifyTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Register a response to a test.",
              "",
              " In cases where a test involves registering a final answer at the",
              " end of the test, this method provides the means to do so.",
              ""
            ]
          },
          "Session:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the session. The ID must conform to ^[a-z]+$",
              " If this is not provided, Showcase chooses one at random."
            ]
          },
          "Session:version": {
            "paramName": "version",
            "paramType": ".google.showcase.v1beta1.Session.Version",
            "comments": [
              " Required. The version this session is using."
            ]
          },
          "CreateSessionRequest:session": {
            "paramName": "session",
            "paramType": ".google.showcase.v1beta1.Session",
            "comments": [
              " The session to be created.",
              " Sessions are immutable once they are created (although they can",
              " be deleted)."
            ]
          },
          "GetSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be retrieved."
            ]
          },
          "ListSessionsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of sessions to return per page."
            ]
          },
          "ListSessionsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListSessionsResponse:sessions": {
            "paramName": "sessions",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The sessions being returned."
            ]
          },
          "ListSessionsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "DeleteSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be deleted."
            ]
          },
          "ReportSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be reported on."
            ]
          },
          "ReportSessionResponse:result": {
            "paramName": "result",
            "paramType": ".google.showcase.v1beta1.ReportSessionResponse.Result",
            "comments": [
              " The state of the report."
            ]
          },
          "ReportSessionResponse:test_runs": {
            "paramName": "test_runs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The test runs of this session."
            ]
          },
          "Test:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "Test:expectation_level": {
            "paramName": "expectation_level",
            "paramType": ".google.showcase.v1beta1.Test.ExpectationLevel",
            "comments": [
              " The expectation level for this test."
            ]
          },
          "Test:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the test."
            ]
          },
          "Test:blueprints": {
            "paramName": "blueprints",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The blueprints that will satisfy this test. There may be multiple blueprints",
              " that can signal to the server that this test case is being exercised. Although",
              " multiple blueprints are specified, only a single blueprint needs to be run to",
              " signal that the test case was exercised."
            ]
          },
          "Issue:type": {
            "paramName": "type",
            "paramType": ".google.showcase.v1beta1.Issue.Type",
            "comments": [
              " The type of the issue."
            ]
          },
          "Issue:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Issue.Severity",
            "comments": [
              " The severity of the issue."
            ]
          },
          "Issue:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the issue."
            ]
          },
          "ListTestsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session."
            ]
          },
          "ListTestsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of tests to return per page."
            ]
          },
          "ListTestsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListTestsResponse:tests": {
            "paramName": "tests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The tests being returned."
            ]
          },
          "ListTestsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "TestRun:test": {
            "paramName": "test",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "TestRun:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue found with the test run. If empty, this test run was successful."
            ]
          },
          "DeleteTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to be deleted."
            ]
          },
          "VerifyTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to have an answer registered to it."
            ]
          },
          "VerifyTestRequest:answer": {
            "paramName": "answer",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The answer from the test."
            ]
          },
          "VerifyTestRequest:answers": {
            "paramName": "answers",
            "paramType": "TYPE_BYTES[]",
            "comments": [
              " The answers from the test if multiple are to be checked"
            ]
          },
          "VerifyTestResponse:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue if check answer was unsuccessful. This will be empty if the check answer succeeded."
            ]
          }
        }
      },
      "retryableCodeMap": {
        "codeEnumMapping": {
          "0": "OK",
          "1": "CANCELLED",
          "2": "UNKNOWN",
          "3": "INVALID_ARGUMENT",
          "4": "DEADLINE_EXCEEDED",
          "5": "NOT_FOUND",
          "6": "ALREADY_EXISTS",
          "7": "PERMISSION_DENIED",
          "8": "RESOURCE_EXHAUSTED",
          "9": "FAILED_PRECONDITION",
          "10": "ABORTED",
          "11": "OUT_OF_RANGE",
          "12": "UNIMPLEMENTED",
          "13": "INTERNAL",
          "14": "UNAVAILABLE",
          "15": "DATA_LOSS",
          "16": "UNAUTHENTICATED",
          "OK": "0",
          "CANCELLED": "1",
          "UNKNOWN": "2",
          "INVALID_ARGUMENT": "3",
          "DEADLINE_EXCEEDED": "4",
          "NOT_FOUND": "5",
          "ALREADY_EXISTS": "6",
          "PERMISSION_DENIED": "7",
          "RESOURCE_EXHAUSTED": "8",
          "FAILED_PRECONDITION": "9",
          "ABORTED": "10",
          "OUT_OF_RANGE": "11",
          "UNIMPLEMENTED": "12",
          "INTERNAL": "13",
          "UNAVAILABLE": "14",
          "DATA_LOSS": "15",
          "UNAUTHENTICATED": "16"
        },
        "uniqueCodesNamesMap": {
          "": "non_idempotent",
          "deadline_exceeded_unavailable": "idempotent"
        },
        "prettyCodesNamesMap": {
          "non_idempotent": [],
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ]
        },
        "uniqueParamsNamesMap": {
          "94312e9926796a52a8fcbbedaac41972e07ccd1c": "default"
        },
        "prettyParamNamesMap": {
          "default": {
            "initial_retry_delay_millis": 100,
            "retry_delay_multiplier": 1.3,
            "max_retry_delay_millis": 60000,
            "initial_rpc_timeout_millis": 60000,
            "rpc_timeout_multiplier": 1,
            "max_rpc_timeout_millis": 60000,
            "total_timeout_millis": 600000
          }
        }
      },
      "grpcServiceConfig": {},
      "bundleConfigs": [],
      "bundleConfigsMethods": [],
      "simpleMethods": [
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending the entire request object in the REST body.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBody",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/repeat:body",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending the a message-type field in the REST body. Per AIP-127, only",
            " top-level, non-repeated fields can be sent this way.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBodyInfo",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/repeat:bodyinfo",
              "body": "info",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending all request fields as query parameters.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataQuery",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat:query",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request. This method exercises",
            " sending some parameters as \"simple\" path variables (i.e., of the form",
            " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataSimplePath",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat/{info.f_string}/{info.f_int32}/{info.f_double}/{info.f_bool}/{info.f_kingdom}:simplepath",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": [
            [
              "info",
              "f_string"
            ],
            [
              "info",
              "f_int32"
            ],
            [
              "info",
              "f_double"
            ],
            [
              "info",
              "f_bool"
            ],
            [
              "info",
              "f_kingdom"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " Same as RepeatDataSimplePath, but with a path resource.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataPathResource",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat/{info.f_string=first/*}/{info.f_child.f_string=second/*}/bool/{info.f_bool}:pathresource",
              "additionalBindings": [
                {
                  "get": "/v1beta1/repeat/{info.f_child.f_string=first/*}/{info.f_string=second/*}/bool/{info.f_bool}:childfirstpathresource"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": [
            [
              "info",
              "f_string"
            ],
            [
              "info",
              "f_child",
              "f_string"
            ],
            [
              "info",
              "f_bool"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " Same as RepeatDataSimplePath, but with a trailing resource.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataPathTrailingResource",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/repeat/{info.f_string=first/*}/{info.f_child.f_string=second/**}:pathtrailingresource",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": [
            [
              "info",
              "f_string"
            ],
            [
              "info",
              "f_child",
              "f_string"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request, using the HTTP PUT method.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBodyPut",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "put": "/v1beta1/repeat:bodyput",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.RepeatRequest",
          "outputInterface": ".google.showcase.v1beta1.RepeatResponse",
          "comments": [
            " This method echoes the ComplianceData request, using the HTTP PATCH method.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "RepeatDataBodyPatch",
          "inputType": ".google.showcase.v1beta1.RepeatRequest",
          "outputType": ".google.showcase.v1beta1.RepeatResponse",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/repeat:bodypatch",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": []
            },
            {
              "paramName": "info",
              "paramType": ".google.showcase.v1beta1.ComplianceData",
              "comments": []
            },
            {
              "paramName": "server_verify",
              "paramType": "TYPE_BOOL",
              "comments": [
                " If true, the server will verify that the received request matches",
                " the request with the same name in the compliance test suite."
              ]
            },
            {
              "paramName": "intended_binding_uri",
              "paramType": "TYPE_STRING",
              "comments": [
                " The URI template this request is expected to be bound to server-side."
              ]
            },
            {
              "paramName": "f_int32",
              "paramType": "TYPE_INT32",
              "comments": [
                " Some top level fields, to test that these are encoded correctly",
                " in query params."
              ]
            },
            {
              "paramName": "f_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "f_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            },
            {
              "paramName": "p_int32",
              "paramType": "TYPE_INT32",
              "comments": []
            },
            {
              "paramName": "p_int64",
              "paramType": "TYPE_INT64",
              "comments": []
            },
            {
              "paramName": "p_double",
              "paramType": "TYPE_DOUBLE",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.EnumRequest",
          "outputInterface": ".google.showcase.v1beta1.EnumResponse",
          "comments": [
            " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
            " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
            " response from this RPC as the request to VerifyEnum()",
            "",
            " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
            " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetEnum",
          "inputType": ".google.showcase.v1beta1.EnumRequest",
          "outputType": ".google.showcase.v1beta1.EnumResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/compliance/enum",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "unknown_enum",
              "paramType": "TYPE_BOOL",
              "comments": [
                " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.EnumResponse",
          "outputInterface": ".google.showcase.v1beta1.EnumResponse",
          "comments": [
            " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
            " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
            " with the same EnumResponse; otherwise, the RPC errors.",
            "",
            " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
            " although they are not guaranteed to be the same across separate Showcase server runs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "VerifyEnum",
          "inputType": ".google.showcase.v1beta1.EnumResponse",
          "outputType": ".google.showcase.v1beta1.EnumResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/compliance/enum",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "request",
              "paramType": ".google.showcase.v1beta1.EnumRequest",
              "comments": [
                " The original request for a known or unknown enum from the server."
              ]
            },
            {
              "paramName": "continent",
              "paramType": ".google.showcase.v1beta1.Continent",
              "comments": [
                " The actual enum the server provided."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "longRunning": [],
      "diregapicLRO": [],
      "streaming": [],
      "clientStreaming": [],
      "serverStreaming": [],
      "bidiStreaming": [],
      "paging": [],
      "hostname": "localhost",
      "port": 7469,
      "oauthScopes": [],
      "pathTemplates": [
        {
          "name": "Blueprint",
          "params": [
            "session",
            "test",
            "blueprint"
          ],
          "type": "showcase.googleapis.com/Blueprint",
          "pattern": [
            "sessions/{session}/tests/{test}/blueprints/{blueprint}"
          ]
        },
        {
          "name": "Room",
          "params": [
            "room"
          ],
          "type": "showcase.googleapis.com/Room",
          "pattern": [
            "rooms/{room}"
          ]
        },
        {
          "name": "room_blurb",
          "params": [
            "room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "room_blurbs_legacy_room_blurb",
          "params": [
            "room",
            "legacy_room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "Sequence",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/Sequence",
          "pattern": [
            "sequences/{sequence}"
          ]
        },
        {
          "name": "SequenceReport",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/SequenceReport",
          "pattern": [
            "sequences/{sequence}/sequenceReport"
          ]
        },
        {
          "name": "Session",
          "params": [
            "session"
          ],
          "type": "showcase.googleapis.com/Session",
          "pattern": [
            "sessions/{session}"
          ]
        },
        {
          "name": "Test",
          "params": [
            "session",
            "test"
          ],
          "type": "showcase.googleapis.com/Test",
          "pattern": [
            "sessions/{session}/tests/{test}"
          ]
        },
        {
          "name": "User",
          "params": [
            "user"
          ],
          "type": "showcase.googleapis.com/User",
          "pattern": [
            "users/{user}"
          ]
        },
        {
          "name": "user_profile_blurb",
          "params": [
            "user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "user_profile_blurbs_legacy_user_blurb",
          "params": [
            "user",
            "legacy_user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        }
      ]
    },
    {
      "name": "Echo",
      "method": [
        {
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Echo",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:echo",
              "body": "*"
            },
            ".google.api.routing": {
              "routingParameters": [
                {
                  "field": "header"
                },
                {
                  "field": "header",
                  "pathTemplate": "{routing_id=**}"
                },
                {
                  "field": "header",
                  "pathTemplate": "{table_name=regions/*/zones/*/**}"
                },
                {
                  "field": "header",
                  "pathTemplate": "{super_id=projects/*}/**"
                },
                {
                  "field": "header",
                  "pathTemplate": "{table_name=projects/*/instances/*/**}"
                },
                {
                  "field": "header",
                  "pathTemplate": "projects/*/{instance_id=instances/*}/**"
                },
                {
                  "field": "other_header",
                  "pathTemplate": "{baz=**}"
                },
                {
                  "field": "other_header",
                  "pathTemplate": "{qux=projects/*}/**"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "dynamicRoutingRequestParams": [
            [
              {
                "pathTemplate": "",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "header",
                "messageRegex": "(?<header>.*)"
              }
            ],
            [
              {
                "pathTemplate": "{routing_id=**}",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "routing_id",
                "messageRegex": "(?<routing_id>(?:.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "{table_name=regions/*/zones/*/**}",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "table_name",
                "messageRegex": "(?<table_name>regions/[^/]+/zones/[^/]+(?:/.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "{super_id=projects/*}/**",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "super_id",
                "messageRegex": "(?<super_id>projects/[^/]+)(?:/.*)?"
              }
            ],
            [
              {
                "pathTemplate": "{table_name=projects/*/instances/*/**}",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "table_name",
                "messageRegex": "(?<table_name>projects/[^/]+/instances/[^/]+(?:/.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "projects/*/{instance_id=instances/*}/**",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "instance_id",
                "messageRegex": "projects/[^/]+/(?<instance_id>instances/[^/]+)(?:/.*)?"
              }
            ],
            [
              {
                "pathTemplate": "{baz=**}",
                "fieldRetrieve": [
                  "otherHeader"
                ],
                "fieldSend": "baz",
                "messageRegex": "(?<baz>(?:.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "{qux=projects/*}/**",
                "fieldRetrieve": [
                  "otherHeader"
                ],
                "fieldSend": "qux",
                "messageRegex": "(?<qux>projects/[^/]+)(?:/.*)?"
              }
            ]
          ]
        },
        {
          "streaming": "SERVER_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.ExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method splits the given content into words and will pass each word back",
            " through the stream. This method showcases server-side streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Expand",
          "inputType": ".google.showcase.v1beta1.ExpandRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.methodSignature": [
              "content,error"
            ],
            ".google.api.http": {
              "post": "/v1beta1/echo:expand",
              "body": "*",
              "additionalBindings": []
            }
          },
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content that will be split into words and returned on the stream."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that is thrown after all words are sent on the stream."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "streaming": "CLIENT_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method will collect the words given to it. When the stream is closed",
            " by the client, this method will return the a concatenation of the strings",
            " passed to it. This method showcases client-side streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Collect",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:collect",
              "body": "*",
              "additionalBindings": []
            }
          },
          "clientStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "streaming": "BIDI_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method, upon receiving a request on the stream, will pass the same",
            " content back on the stream. This method showcases bidirectional",
            " streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Chat",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "clientStreaming": true,
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "pagingFieldName": "responses",
          "pagingResponseType": ".google.showcase.v1beta1.EchoResponse",
          "inputInterface": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.PagedExpandResponse",
          "comments": [
            " This is similar to the Expand method but instead of returning a stream of",
            " expanded words, this method returns a paged list of expanded words.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "PagedExpand",
          "inputType": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputType": ".google.showcase.v1beta1.PagedExpandResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:pagedExpand",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The string to expand."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The number of words to returned in each page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The position of the page to be returned."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.PagedExpandLegacyRequest",
          "outputInterface": ".google.showcase.v1beta1.PagedExpandResponse",
          "comments": [
            " This is similar to the PagedExpand except that it uses",
            " max_results instead of page_size, as some legacy APIs still",
            " do. New APIs should NOT use this pattern.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "PagedExpandLegacy",
          "inputType": ".google.showcase.v1beta1.PagedExpandLegacyRequest",
          "outputType": ".google.showcase.v1beta1.PagedExpandResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:pagedExpandLegacy",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The string to expand."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "max_results",
              "paramType": "TYPE_INT32",
              "comments": [
                " The number of words to returned in each page.",
                " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
                "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The position of the page to be returned."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "pagingFieldName": "alphabetized",
          "pagingResponseType": ".google.showcase.v1beta1.PagedExpandLegacyMappedResponse.AlphabetizedEntry",
          "ignoreMapPagingMethod": true,
          "inputInterface": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.PagedExpandLegacyMappedResponse",
          "comments": [
            " This method returns a map containing lists of words that appear in the input, keyed by their",
            " initial character. The only words returned are the ones included in the current page,",
            " as determined by page_token and page_size, which both refer to the word indices in the",
            " input. This paging result consisting of a map of lists is a pattern used by some legacy",
            " APIs. New APIs should NOT use this pattern.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "PagedExpandLegacyMapped",
          "inputType": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputType": ".google.showcase.v1beta1.PagedExpandLegacyMappedResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:pagedExpandLegacyMapped",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The string to expand."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The number of words to returned in each page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The position of the page to be returned."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "longRunning": {
            "responseType": "WaitResponse",
            "metadataType": "WaitMetadata"
          },
          "longRunningResponseType": ".google.showcase.v1beta1.WaitResponse",
          "longRunningMetadataType": ".google.showcase.v1beta1.WaitMetadata",
          "inputInterface": ".google.showcase.v1beta1.WaitRequest",
          "outputInterface": ".google.longrunning.Operation",
          "comments": [
            " This method will wait for the requested amount of time and then return.",
            " This method showcases how a client handles a request timeout.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Wait",
          "inputType": ".google.showcase.v1beta1.WaitRequest",
          "outputType": ".google.longrunning.Operation",
          "options": {
            ".google.longrunning.operationInfo": {
              "responseType": "WaitResponse",
              "metadataType": "WaitMetadata"
            },
            ".google.api.http": {
              "post": "/v1beta1/echo:wait",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "end_time",
              "paramType": ".google.protobuf.Timestamp",
              "comments": [
                " The time that this operation will complete."
              ]
            },
            {
              "paramName": "ttl",
              "paramType": ".google.protobuf.Duration",
              "comments": [
                " The duration of this operation."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that will be returned by the server. If this code is specified",
                " to be the OK rpc code, an empty response will be returned."
              ]
            },
            {
              "paramName": "success",
              "paramType": ".google.showcase.v1beta1.WaitResponse",
              "comments": [
                " The response to be returned on operation completion."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.BlockRequest",
          "outputInterface": ".google.showcase.v1beta1.BlockResponse",
          "comments": [
            " This method will block (wait) for the requested amount of time",
            " and then return the response or error.",
            " This method showcases how a client handles delays or retries.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Block",
          "inputType": ".google.showcase.v1beta1.BlockRequest",
          "outputType": ".google.showcase.v1beta1.BlockResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:block",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "response_delay",
              "paramType": ".google.protobuf.Duration",
              "comments": [
                " The amount of time to block before returning a response."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that will be returned by the server. If this code is specified",
                " to be the OK rpc code, an empty response will be returned."
              ]
            },
            {
              "paramName": "success",
              "paramType": ".google.showcase.v1beta1.BlockResponse",
              "comments": [
                " The response to be returned that will signify successful method call."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "options": {
        ".google.api.defaultHost": "localhost:7469"
      },
      "packageName": "google.showcase.v1beta1",
      "protoFile": "google/showcase/v1beta1/echo.proto",
      "IAMPolicyMixin": 0,
      "LocationMixin": 0,
      "comments": [
        " This service is used showcase the four main types of rpcs - unary, server",
        " side streaming, client side streaming, and bidirectional streaming. This",
        " service also exposes methods that explicitly implement server delay, and",
        " paginated calls. Set the 'showcase-trailer' metadata key on any method",
        " to have the values echoed in the response trailers. Set the ",
        " 'x-goog-request-params' metadata key on any method to have the values",
        " echoed in the response headers."
      ],
      "commentsMap": {
        "comments": {
          "Http:rules": {
            "paramName": "rules",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of HTTP configuration rules that apply to individual API methods.",
              "",
              " **NOTE:** All service configuration rules follow \"last one wins\" order."
            ]
          },
          "Http:fully_decode_reserved_expansion": {
            "paramName": "fully_decode_reserved_expansion",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When set to true, URL path parameters will be fully URI-decoded except in",
              " cases of single segment matches in reserved expansion, where \"%2F\" will be",
              " left encoded.",
              "",
              " The default behavior is to not decode RFC 6570 reserved characters in multi",
              " segment matches."
            ]
          },
          "HttpRule:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " Selects a method to which this rule applies.",
              "",
              " Refer to [selector][google.api.DocumentationRule.selector] for syntax",
              " details."
            ]
          },
          "HttpRule:get": {
            "paramName": "get",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP GET. Used for listing and getting information about",
              " resources."
            ]
          },
          "HttpRule:put": {
            "paramName": "put",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PUT. Used for replacing a resource."
            ]
          },
          "HttpRule:post": {
            "paramName": "post",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP POST. Used for creating a resource or performing an action."
            ]
          },
          "HttpRule:delete": {
            "paramName": "delete",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP DELETE. Used for deleting a resource."
            ]
          },
          "HttpRule:patch": {
            "paramName": "patch",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PATCH. Used for updating a resource."
            ]
          },
          "HttpRule:custom": {
            "paramName": "custom",
            "paramType": ".google.api.CustomHttpPattern",
            "comments": [
              " The custom pattern is used for specifying an HTTP method that is not",
              " included in the `pattern` field, such as HEAD, or \"*\" to leave the",
              " HTTP method unspecified for this rule. The wild-card rule is useful",
              " for services that provide content to Web (HTML) clients."
            ]
          },
          "HttpRule:body": {
            "paramName": "body",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the request field whose value is mapped to the HTTP request",
              " body, or `*` for mapping all request fields not captured by the path",
              " pattern to the HTTP body, or omitted for not having any HTTP request body.",
              "",
              " NOTE: the referred field must be present at the top-level of the request",
              " message type."
            ]
          },
          "HttpRule:response_body": {
            "paramName": "response_body",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The name of the response field whose value is mapped to the HTTP",
              " response body. When omitted, the entire response message will be used",
              " as the HTTP response body.",
              "",
              " NOTE: The referred field must be present at the top-level of the response",
              " message type."
            ]
          },
          "HttpRule:additional_bindings": {
            "paramName": "additional_bindings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional HTTP bindings for the selector. Nested bindings must",
              " not contain an `additional_bindings` field themselves (that is,",
              " the nesting may only be one level deep)."
            ]
          },
          "CustomHttpPattern:kind": {
            "paramName": "kind",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of this custom HTTP verb."
            ]
          },
          "CustomHttpPattern:path": {
            "paramName": "path",
            "paramType": "TYPE_STRING",
            "comments": [
              " The path matched by this custom verb."
            ]
          },
          "FileDescriptorSet:file": {
            "paramName": "file",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:package": {
            "paramName": "package",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:dependency": {
            "paramName": "dependency",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Names of files imported by this file."
            ]
          },
          "FileDescriptorProto:public_dependency": {
            "paramName": "public_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the public imported files in the dependency list above."
            ]
          },
          "FileDescriptorProto:weak_dependency": {
            "paramName": "weak_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the weak imported files in the dependency list.",
              " For Google-internal migration only. Do not use."
            ]
          },
          "FileDescriptorProto:message_type": {
            "paramName": "message_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " All top-level definitions in this file."
            ]
          },
          "FileDescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:service": {
            "paramName": "service",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FileOptions",
            "comments": []
          },
          "FileDescriptorProto:source_code_info": {
            "paramName": "source_code_info",
            "paramType": ".google.protobuf.SourceCodeInfo",
            "comments": [
              " This field contains optional information about the original source code.",
              " You may safely remove this entire field without harming runtime",
              " functionality of the descriptors -- the information is needed only by",
              " development tools."
            ]
          },
          "FileDescriptorProto:syntax": {
            "paramName": "syntax",
            "paramType": "TYPE_STRING",
            "comments": [
              " The syntax of the proto file.",
              " The supported values are \"proto2\", \"proto3\", and \"editions\".",
              "",
              " If `edition` is present, this value must be \"editions\"."
            ]
          },
          "FileDescriptorProto:edition": {
            "paramName": "edition",
            "paramType": "TYPE_STRING",
            "comments": [
              " The edition of the proto file, which is an opaque string."
            ]
          },
          "DescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "DescriptorProto:field": {
            "paramName": "field",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:nested_type": {
            "paramName": "nested_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension_range": {
            "paramName": "extension_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:oneof_decl": {
            "paramName": "oneof_decl",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MessageOptions",
            "comments": []
          },
          "DescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved field names, which may not be used by fields in the same message.",
              " A given name may only be reserved once."
            ]
          },
          "ExtensionRangeOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ExtensionRangeOptions:declaration": {
            "paramName": "declaration",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " For external users: DO NOT USE. We are in the process of open sourcing",
              " extension declaration and executing internal cleanups before it can be",
              " used externally."
            ]
          },
          "ExtensionRangeOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ExtensionRangeOptions:verification": {
            "paramName": "verification",
            "paramType": ".google.protobuf.ExtensionRangeOptions.VerificationState",
            "comments": [
              " The verification state of the range.",
              " TODO(b/278783756): flip the default to DECLARATION once all empty ranges",
              " are marked as UNVERIFIED."
            ]
          },
          "FieldDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FieldDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "FieldDescriptorProto:label": {
            "paramName": "label",
            "paramType": ".google.protobuf.FieldDescriptorProto.Label",
            "comments": []
          },
          "FieldDescriptorProto:type": {
            "paramName": "type",
            "paramType": ".google.protobuf.FieldDescriptorProto.Type",
            "comments": [
              " If type_name is set, this need not be set.  If both this and type_name",
              " are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
            ]
          },
          "FieldDescriptorProto:type_name": {
            "paramName": "type_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " For message and enum types, this is the name of the type.  If the name",
              " starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping",
              " rules are used to find the type (i.e. first the nested types within this",
              " message are searched, then within the parent, on up to the root",
              " namespace)."
            ]
          },
          "FieldDescriptorProto:extendee": {
            "paramName": "extendee",
            "paramType": "TYPE_STRING",
            "comments": [
              " For extensions, this is the name of the type being extended.  It is",
              " resolved in the same manner as type_name."
            ]
          },
          "FieldDescriptorProto:default_value": {
            "paramName": "default_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " For numeric types, contains the original text representation of the value.",
              " For booleans, \"true\" or \"false\".",
              " For strings, contains the default text contents (not escaped in any way).",
              " For bytes, contains the C escaped value.  All bytes >= 128 are escaped."
            ]
          },
          "FieldDescriptorProto:oneof_index": {
            "paramName": "oneof_index",
            "paramType": "TYPE_INT32",
            "comments": [
              " If set, gives the index of a oneof in the containing type's oneof_decl",
              " list.  This field is a member of that oneof."
            ]
          },
          "FieldDescriptorProto:json_name": {
            "paramName": "json_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " JSON name of this field. The value is set by protocol compiler. If the",
              " user has set a \"json_name\" option on this field, that option's value",
              " will be used. Otherwise, it's deduced from the field's name by converting",
              " it to camelCase."
            ]
          },
          "FieldDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FieldOptions",
            "comments": []
          },
          "FieldDescriptorProto:proto3_optional": {
            "paramName": "proto3_optional",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, this is a proto3 \"optional\". When a proto3 field is optional, it",
              " tracks presence regardless of field type.",
              "",
              " When proto3_optional is true, this field must be belong to a oneof to",
              " signal to old proto3 clients that presence is tracked for this field. This",
              " oneof is known as a \"synthetic\" oneof, and this field must be its sole",
              " member (each proto3 optional field gets its own synthetic oneof). Synthetic",
              " oneofs exist in the descriptor only, and do not generate any API. Synthetic",
              " oneofs must be ordered after all \"real\" oneofs.",
              "",
              " For message fields, proto3_optional doesn't create any semantic change,",
              " since non-repeated message fields always track presence. However it still",
              " indicates the semantic detail of whether the user wrote \"optional\" or not.",
              " This can be useful for round-tripping the .proto file. For consistency we",
              " give message fields a synthetic oneof also, even though it is not required",
              " to track presence. This is especially important because the parser can't",
              " tell if a field is a message or an enum, so it must always create a",
              " synthetic oneof.",
              "",
              " Proto2 optional fields do not set this flag, because they already indicate",
              " optional with `LABEL_OPTIONAL`."
            ]
          },
          "OneofDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "OneofDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.OneofOptions",
            "comments": []
          },
          "EnumDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumDescriptorProto:value": {
            "paramName": "value",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "EnumDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumOptions",
            "comments": []
          },
          "EnumDescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Range of reserved numeric values. Reserved numeric values may not be used",
              " by enum values in the same enum declaration. Reserved ranges may not",
              " overlap."
            ]
          },
          "EnumDescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved enum value names, which may not be reused. A given name may only",
              " be reserved once."
            ]
          },
          "EnumValueDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumValueDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "EnumValueDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumValueOptions",
            "comments": []
          },
          "ServiceDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ServiceDescriptorProto:method": {
            "paramName": "method",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ServiceDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.ServiceOptions",
            "comments": []
          },
          "MethodDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:input_type": {
            "paramName": "input_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Input and output type names.  These are resolved in the same way as",
              " FieldDescriptorProto.type_name, but must refer to a message type."
            ]
          },
          "MethodDescriptorProto:output_type": {
            "paramName": "output_type",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MethodOptions",
            "comments": []
          },
          "MethodDescriptorProto:client_streaming": {
            "paramName": "client_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if client streams multiple client messages"
            ]
          },
          "MethodDescriptorProto:server_streaming": {
            "paramName": "server_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if server streams multiple server messages"
            ]
          },
          "FileOptions:java_package": {
            "paramName": "java_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Java package where classes generated from this .proto will be",
              " placed.  By default, the proto package is used, but this is often",
              " inappropriate because proto packages do not normally start with backwards",
              " domain names."
            ]
          },
          "FileOptions:java_outer_classname": {
            "paramName": "java_outer_classname",
            "paramType": "TYPE_STRING",
            "comments": [
              " Controls the name of the wrapper Java class generated for the .proto file.",
              " That class will always contain the .proto file's getDescriptor() method as",
              " well as any top-level extensions defined in the .proto file.",
              " If java_multiple_files is disabled, then all the other classes from the",
              " .proto file will be nested inside the single wrapper outer class."
            ]
          },
          "FileOptions:java_multiple_files": {
            "paramName": "java_multiple_files",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If enabled, then the Java code generator will generate a separate .java",
              " file for each top-level message, enum, and service defined in the .proto",
              " file.  Thus, these types will *not* be nested inside the wrapper class",
              " named by java_outer_classname.  However, the wrapper class will still be",
              " generated to contain the file's getDescriptor() method as well as any",
              " top-level extensions defined in the file."
            ]
          },
          "FileOptions:java_generate_equals_and_hash": {
            "paramName": "java_generate_equals_and_hash",
            "paramType": "TYPE_BOOL",
            "comments": [
              " This option does nothing."
            ]
          },
          "FileOptions:java_string_check_utf8": {
            "paramName": "java_string_check_utf8",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If set true, then the Java2 code generator will generate code that",
              " throws an exception whenever an attempt is made to assign a non-UTF-8",
              " byte sequence to a string field.",
              " Message reflection will do the same.",
              " However, an extension field still accepts non-UTF-8 byte sequences.",
              " This option has no effect on when used with the lite runtime."
            ]
          },
          "FileOptions:optimize_for": {
            "paramName": "optimize_for",
            "paramType": ".google.protobuf.FileOptions.OptimizeMode",
            "comments": []
          },
          "FileOptions:go_package": {
            "paramName": "go_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Go package where structs generated from this .proto will be",
              " placed. If omitted, the Go package will be derived from the following:",
              "   - The basename of the package import path, if provided.",
              "   - Otherwise, the package statement in the .proto file, if present.",
              "   - Otherwise, the basename of the .proto file, without extension."
            ]
          },
          "FileOptions:cc_generic_services": {
            "paramName": "cc_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should generic services be generated in each language?  \"Generic\" services",
              " are not specific to any particular RPC system.  They are generated by the",
              " main code generators in each language (without additional plugins).",
              " Generic services were the only kind of service generation supported by",
              " early versions of google.protobuf.",
              "",
              " Generic services are now considered deprecated in favor of using plugins",
              " that generate code specific to your particular RPC system.  Therefore,",
              " these default to false.  Old code which depends on generic services should",
              " explicitly set them to true."
            ]
          },
          "FileOptions:java_generic_services": {
            "paramName": "java_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:py_generic_services": {
            "paramName": "py_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:php_generic_services": {
            "paramName": "php_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this file deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for everything in the file, or it will be completely ignored; in the very",
              " least, this is a formalization for deprecating files."
            ]
          },
          "FileOptions:cc_enable_arenas": {
            "paramName": "cc_enable_arenas",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the use of arenas for the proto messages in this file. This applies",
              " only to generated classes for C++."
            ]
          },
          "FileOptions:objc_class_prefix": {
            "paramName": "objc_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the objective c class prefix which is prepended to all objective c",
              " generated classes from this .proto. There is no default."
            ]
          },
          "FileOptions:csharp_namespace": {
            "paramName": "csharp_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Namespace for generated classes; defaults to the package."
            ]
          },
          "FileOptions:swift_prefix": {
            "paramName": "swift_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " By default Swift generators will take the proto package and CamelCase it",
              " replacing '.' with underscore and use that to prefix the types/symbols",
              " defined. When this options is provided, they will use this value instead",
              " to prefix the types/symbols defined."
            ]
          },
          "FileOptions:php_class_prefix": {
            "paramName": "php_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the php class prefix which is prepended to all php generated classes",
              " from this .proto. Default is empty."
            ]
          },
          "FileOptions:php_namespace": {
            "paramName": "php_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated classes. Default",
              " is empty. When this option is empty, the package name will be used for",
              " determining the namespace."
            ]
          },
          "FileOptions:php_metadata_namespace": {
            "paramName": "php_metadata_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated metadata classes.",
              " Default is empty. When this option is empty, the proto file name will be",
              " used for determining the namespace."
            ]
          },
          "FileOptions:ruby_package": {
            "paramName": "ruby_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the package of ruby generated classes. Default",
              " is empty. When this option is not set, the package name will be used for",
              " determining the ruby package."
            ]
          },
          "FileOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FileOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here.",
              " See the documentation for the \"Options\" section above."
            ]
          },
          "MessageOptions:message_set_wire_format": {
            "paramName": "message_set_wire_format",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set true to use the old proto1 MessageSet wire format for extensions.",
              " This is provided for backwards-compatibility with the MessageSet wire",
              " format.  You should not use this for any other reason:  It's less",
              " efficient, has fewer features, and is more complicated.",
              "",
              " The message must be defined exactly as follows:",
              "   message Foo {",
              "     option message_set_wire_format = true;",
              "     extensions 4 to max;",
              "   }",
              " Note that the message cannot have any defined fields; MessageSets only",
              " have extensions.",
              "",
              " All extensions of your type must be singular messages; e.g. they cannot",
              " be int32s, enums, or repeated messages.",
              "",
              " Because this is an option, the above two restrictions are not enforced by",
              " the protocol compiler."
            ]
          },
          "MessageOptions:no_standard_descriptor_accessor": {
            "paramName": "no_standard_descriptor_accessor",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Disables the generation of the standard \"descriptor()\" accessor, which can",
              " conflict with a field of the same name.  This is meant to make migration",
              " from proto1 easier; new code should avoid fields named \"descriptor\"."
            ]
          },
          "MessageOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this message deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the message, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating messages."
            ]
          },
          "MessageOptions:map_entry": {
            "paramName": "map_entry",
            "paramType": "TYPE_BOOL",
            "comments": [
              " NOTE: Do not set the option in .proto files. Always use the maps syntax",
              " instead. The option should only be implicitly set by the proto compiler",
              " parser.",
              "",
              " Whether the message is an automatically generated map entry type for the",
              " maps field.",
              "",
              " For maps fields:",
              "     map<KeyType, ValueType> map_field = 1;",
              " The parsed descriptor looks like:",
              "     message MapFieldEntry {",
              "         option map_entry = true;",
              "         optional KeyType key = 1;",
              "         optional ValueType value = 2;",
              "     }",
              "     repeated MapFieldEntry map_field = 1;",
              "",
              " Implementations may choose not to generate the map_entry=true message, but",
              " use a native map in the target language to hold the keys and values.",
              " The reflection APIs in such implementations still need to work as",
              " if the field is a repeated message field."
            ]
          },
          "MessageOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              "",
              " This should only be used as a temporary measure against broken builds due",
              " to the change in behavior for JSON field name conflicts.",
              "",
              " TODO(b/261750190) This is legacy behavior we plan to remove once downstream",
              " teams have had time to migrate."
            ]
          },
          "MessageOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MessageOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "FieldOptions:ctype": {
            "paramName": "ctype",
            "paramType": ".google.protobuf.FieldOptions.CType",
            "comments": [
              " The ctype option instructs the C++ code generator to use a different",
              " representation of the field than it normally would.  See the specific",
              " options below.  This option is only implemented to support use of",
              " [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of",
              " type \"bytes\" in the open source release -- sorry, we'll try to include",
              " other types in a future version!"
            ]
          },
          "FieldOptions:packed": {
            "paramName": "packed",
            "paramType": "TYPE_BOOL",
            "comments": [
              " The packed option can be enabled for repeated primitive fields to enable",
              " a more efficient representation on the wire. Rather than repeatedly",
              " writing the tag and type for each element, the entire array is encoded as",
              " a single length-delimited blob. In proto3, only explicit setting it to",
              " false will avoid using packed encoding."
            ]
          },
          "FieldOptions:jstype": {
            "paramName": "jstype",
            "paramType": ".google.protobuf.FieldOptions.JSType",
            "comments": [
              " The jstype option determines the JavaScript type used for values of the",
              " field.  The option is permitted only for 64 bit integral and fixed types",
              " (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING",
              " is represented as JavaScript string, which avoids loss of precision that",
              " can happen when a large value is converted to a floating point JavaScript.",
              " Specifying JS_NUMBER for the jstype causes the generated JavaScript code to",
              " use the JavaScript \"number\" type.  The behavior of the default option",
              " JS_NORMAL is implementation dependent.",
              "",
              " This option is an enum to permit additional types to be added, e.g.",
              " goog.math.Integer."
            ]
          },
          "FieldOptions:lazy": {
            "paramName": "lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should this field be parsed lazily?  Lazy applies only to message-type",
              " fields.  It means that when the outer message is initially parsed, the",
              " inner message's contents will not be parsed but instead stored in encoded",
              " form.  The inner message will actually be parsed when it is first accessed.",
              "",
              " This is only a hint.  Implementations are free to choose whether to use",
              " eager or lazy parsing regardless of the value of this option.  However,",
              " setting this option true suggests that the protocol author believes that",
              " using lazy parsing on this field is worth the additional bookkeeping",
              " overhead typically needed to implement it.",
              "",
              " This option does not affect the public interface of any generated code;",
              " all method signatures remain the same.  Furthermore, thread-safety of the",
              " interface is not affected by this option; const methods remain safe to",
              " call from multiple threads concurrently, while non-const methods continue",
              " to require exclusive access.",
              "",
              " Note that implementations may choose not to check required fields within",
              " a lazy sub-message.  That is, calling IsInitialized() on the outer message",
              " may return true even if the inner message has missing required fields.",
              " This is necessary because otherwise the inner message would have to be",
              " parsed in order to perform the check, defeating the purpose of lazy",
              " parsing.  An implementation which chooses not to check required fields",
              " must be consistent about it.  That is, for any particular sub-message, the",
              " implementation must either *always* check its required fields, or *never*",
              " check its required fields, regardless of whether or not the message has",
              " been parsed.",
              "",
              " As of May 2022, lazy verifies the contents of the byte stream during",
              " parsing.  An invalid byte stream will cause the overall parsing to fail."
            ]
          },
          "FieldOptions:unverified_lazy": {
            "paramName": "unverified_lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " unverified_lazy does no correctness checks on the byte stream. This should",
              " only be used where lazy with verification is prohibitive for performance",
              " reasons."
            ]
          },
          "FieldOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this field deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for accessors, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating fields."
            ]
          },
          "FieldOptions:weak": {
            "paramName": "weak",
            "paramType": "TYPE_BOOL",
            "comments": [
              " For Google-internal migration only. Do not use."
            ]
          },
          "FieldOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that the field value should not be printed out when using debug",
              " formats, e.g. when the field contains sensitive credentials."
            ]
          },
          "FieldOptions:retention": {
            "paramName": "retention",
            "paramType": ".google.protobuf.FieldOptions.OptionRetention",
            "comments": []
          },
          "FieldOptions:targets": {
            "paramName": "targets",
            "paramType": "TYPE_ENUM[]",
            "comments": []
          },
          "FieldOptions:edition_defaults": {
            "paramName": "edition_defaults",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FieldOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FieldOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "OneofOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "OneofOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumOptions:allow_alias": {
            "paramName": "allow_alias",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set this option to true to allow mapping different tag names to the same",
              " value."
            ]
          },
          "EnumOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating enums."
            ]
          },
          "EnumOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              " TODO(b/261750190) Remove this legacy behavior once downstream teams have",
              " had time to migrate."
            ]
          },
          "EnumOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumValueOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum value deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum value, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating enum values."
            ]
          },
          "EnumValueOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumValueOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that fields annotated with this enum value should not be printed",
              " out when using debug formats, e.g. when the field contains sensitive",
              " credentials."
            ]
          },
          "EnumValueOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ServiceOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ServiceOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this service deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the service, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating services."
            ]
          },
          "ServiceOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "MethodOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this method deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the method, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating methods."
            ]
          },
          "MethodOptions:idempotency_level": {
            "paramName": "idempotency_level",
            "paramType": ".google.protobuf.MethodOptions.IdempotencyLevel",
            "comments": []
          },
          "MethodOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MethodOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "UninterpretedOption:name": {
            "paramName": "name",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "UninterpretedOption:identifier_value": {
            "paramName": "identifier_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of the uninterpreted option, in whatever type the tokenizer",
              " identified it as during parsing. Exactly one of these should be set."
            ]
          },
          "UninterpretedOption:positive_int_value": {
            "paramName": "positive_int_value",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "UninterpretedOption:negative_int_value": {
            "paramName": "negative_int_value",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "UninterpretedOption:double_value": {
            "paramName": "double_value",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "UninterpretedOption:string_value": {
            "paramName": "string_value",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "UninterpretedOption:aggregate_value": {
            "paramName": "aggregate_value",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FeatureSet:field_presence": {
            "paramName": "field_presence",
            "paramType": ".google.protobuf.FeatureSet.FieldPresence",
            "comments": []
          },
          "FeatureSet:enum_type": {
            "paramName": "enum_type",
            "paramType": ".google.protobuf.FeatureSet.EnumType",
            "comments": []
          },
          "FeatureSet:repeated_field_encoding": {
            "paramName": "repeated_field_encoding",
            "paramType": ".google.protobuf.FeatureSet.RepeatedFieldEncoding",
            "comments": []
          },
          "FeatureSet:string_field_validation": {
            "paramName": "string_field_validation",
            "paramType": ".google.protobuf.FeatureSet.StringFieldValidation",
            "comments": []
          },
          "FeatureSet:message_encoding": {
            "paramName": "message_encoding",
            "paramType": ".google.protobuf.FeatureSet.MessageEncoding",
            "comments": []
          },
          "FeatureSet:json_format": {
            "paramName": "json_format",
            "paramType": ".google.protobuf.FeatureSet.JsonFormat",
            "comments": []
          },
          "FeatureSet:raw_features": {
            "paramName": "raw_features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": []
          },
          "SourceCodeInfo:location": {
            "paramName": "location",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A Location identifies a piece of source code in a .proto file which",
              " corresponds to a particular definition.  This information is intended",
              " to be useful to IDEs, code indexers, documentation generators, and similar",
              " tools.",
              "",
              " For example, say we have a file like:",
              "   message Foo {",
              "     optional string foo = 1;",
              "   }",
              " Let's look at just the field definition:",
              "   optional string foo = 1;",
              "   ^       ^^     ^^  ^  ^^^",
              "   a       bc     de  f  ghi",
              " We have the following locations:",
              "   span   path               represents",
              "   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.",
              "   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).",
              "   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).",
              "   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).",
              "   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).",
              "",
              " Notes:",
              " - A location may refer to a repeated field itself (i.e. not to any",
              "   particular index within it).  This is used whenever a set of elements are",
              "   logically enclosed in a single code segment.  For example, an entire",
              "   extend block (possibly containing multiple extension definitions) will",
              "   have an outer location whose path refers to the \"extensions\" repeated",
              "   field without an index.",
              " - Multiple locations may have the same path.  This happens when a single",
              "   logical declaration is spread out across multiple places.  The most",
              "   obvious example is the \"extend\" block again -- there may be multiple",
              "   extend blocks in the same scope, each of which will have the same path.",
              " - A location's span is not always a subset of its parent's span.  For",
              "   example, the \"extendee\" of an extension declaration appears at the",
              "   beginning of the \"extend\" block and is shared by all extensions within",
              "   the block.",
              " - Just because a location's span is a subset of some other location's span",
              "   does not mean that it is a descendant.  For example, a \"group\" defines",
              "   both a type and a field in a single declaration.  Thus, the locations",
              "   corresponding to the type and field and their components will overlap.",
              " - Code which tries to interpret locations should probably be designed to",
              "   ignore those that it doesn't understand, as more types of locations could",
              "   be recorded in the future."
            ]
          },
          "GeneratedCodeInfo:annotation": {
            "paramName": "annotation",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " An Annotation connects some span of text in generated code to an element",
              " of its generating .proto file."
            ]
          },
          "Duration:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Signed seconds of the span of time. Must be from -315,576,000,000",
              " to +315,576,000,000 inclusive. Note: these bounds are computed from:",
              " 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
            ]
          },
          "Duration:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Signed fractions of a second at nanosecond resolution of the span",
              " of time. Durations less than one second are represented with a 0",
              " `seconds` field and a positive or negative `nanos` field. For durations",
              " of one second or more, a non-zero value for the `nanos` field must be",
              " of the same sign as the `seconds` field. Must be from -999,999,999",
              " to +999,999,999 inclusive."
            ]
          },
          "CommonLanguageSettings:reference_docs_uri": {
            "paramName": "reference_docs_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to automatically generated reference documentation.  Example:",
              " https://cloud.google.com/nodejs/docs/reference/asset/latest"
            ]
          },
          "CommonLanguageSettings:destinations": {
            "paramName": "destinations",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " The destination where API teams want this client library to be published."
            ]
          },
          "ClientLibrarySettings:version": {
            "paramName": "version",
            "paramType": "TYPE_STRING",
            "comments": [
              " Version of the API to apply these settings to. This is the full protobuf",
              " package for the API, ending in the version element.",
              " Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\"."
            ]
          },
          "ClientLibrarySettings:launch_stage": {
            "paramName": "launch_stage",
            "paramType": ".google.api.LaunchStage",
            "comments": [
              " Launch stage of this version of the API."
            ]
          },
          "ClientLibrarySettings:rest_numeric_enums": {
            "paramName": "rest_numeric_enums",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When using transport=rest, the client request will encode enums as",
              " numbers rather than strings."
            ]
          },
          "ClientLibrarySettings:java_settings": {
            "paramName": "java_settings",
            "paramType": ".google.api.JavaSettings",
            "comments": [
              " Settings for legacy Java features, supported in the Service YAML."
            ]
          },
          "ClientLibrarySettings:cpp_settings": {
            "paramName": "cpp_settings",
            "paramType": ".google.api.CppSettings",
            "comments": [
              " Settings for C++ client libraries."
            ]
          },
          "ClientLibrarySettings:php_settings": {
            "paramName": "php_settings",
            "paramType": ".google.api.PhpSettings",
            "comments": [
              " Settings for PHP client libraries."
            ]
          },
          "ClientLibrarySettings:python_settings": {
            "paramName": "python_settings",
            "paramType": ".google.api.PythonSettings",
            "comments": [
              " Settings for Python client libraries."
            ]
          },
          "ClientLibrarySettings:node_settings": {
            "paramName": "node_settings",
            "paramType": ".google.api.NodeSettings",
            "comments": [
              " Settings for Node client libraries."
            ]
          },
          "ClientLibrarySettings:dotnet_settings": {
            "paramName": "dotnet_settings",
            "paramType": ".google.api.DotnetSettings",
            "comments": [
              " Settings for .NET client libraries."
            ]
          },
          "ClientLibrarySettings:ruby_settings": {
            "paramName": "ruby_settings",
            "paramType": ".google.api.RubySettings",
            "comments": [
              " Settings for Ruby client libraries."
            ]
          },
          "ClientLibrarySettings:go_settings": {
            "paramName": "go_settings",
            "paramType": ".google.api.GoSettings",
            "comments": [
              " Settings for Go client libraries."
            ]
          },
          "Publishing:method_settings": {
            "paramName": "method_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of API method settings, e.g. the behavior for methods that use the",
              " long-running operation pattern."
            ]
          },
          "Publishing:new_issue_uri": {
            "paramName": "new_issue_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to a *public* URI where users can report issues.  Example:",
              " https://issuetracker.google.com/issues/new?component=190865&template=1161103"
            ]
          },
          "Publishing:documentation_uri": {
            "paramName": "documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to product home page.  Example:",
              " https://cloud.google.com/asset-inventory/docs/overview"
            ]
          },
          "Publishing:api_short_name": {
            "paramName": "api_short_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " Used as a tracking tag when collecting data about the APIs developer",
              " relations artifacts like docs, packages delivered to package managers,",
              " etc.  Example: \"speech\"."
            ]
          },
          "Publishing:github_label": {
            "paramName": "github_label",
            "paramType": "TYPE_STRING",
            "comments": [
              " GitHub label to apply to issues and pull requests opened for this API."
            ]
          },
          "Publishing:codeowner_github_teams": {
            "paramName": "codeowner_github_teams",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " GitHub teams to be added to CODEOWNERS in the directory in GitHub",
              " containing source code for the client libraries for this API."
            ]
          },
          "Publishing:doc_tag_prefix": {
            "paramName": "doc_tag_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " A prefix used in sample code when demarking regions to be included in",
              " documentation."
            ]
          },
          "Publishing:organization": {
            "paramName": "organization",
            "paramType": ".google.api.ClientLibraryOrganization",
            "comments": [
              " For whom the client library is being published."
            ]
          },
          "Publishing:library_settings": {
            "paramName": "library_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Client library settings.  If the same version string appears multiple",
              " times in this list, then the last one wins.  Settings from earlier",
              " settings with the same version string are discarded."
            ]
          },
          "Publishing:proto_reference_documentation_uri": {
            "paramName": "proto_reference_documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional link to proto reference documentation.  Example:",
              " https://cloud.google.com/pubsub/lite/docs/reference/rpc"
            ]
          },
          "JavaSettings:library_package": {
            "paramName": "library_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " The package name to use in Java. Clobbers the java_package option",
              " set in the protobuf. This should be used **only** by APIs",
              " who have already set the language_settings.java.package_name\" field",
              " in gapic.yaml. API teams should use the protobuf java_package option",
              " where possible.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      library_package: com.google.cloud.pubsub.v1"
            ]
          },
          "JavaSettings:service_class_names": {
            "paramName": "service_class_names",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Configure the Java class name to use instead of the service's for its",
              " corresponding generated GAPIC client. Keys are fully-qualified",
              " service names as they appear in the protobuf (including the full",
              " the language_settings.java.interface_names\" field in gapic.yaml. API",
              " teams should otherwise use the service name as it appears in the",
              " protobuf.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      service_class_names:",
              "        - google.pubsub.v1.Publisher: TopicAdmin",
              "        - google.pubsub.v1.Subscriber: SubscriptionAdmin"
            ]
          },
          "JavaSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "CppSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PhpSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PythonSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "NodeSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:renamed_services": {
            "paramName": "renamed_services",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from original service names to renamed versions.",
              " This is used when the default generated types",
              " would cause a naming conflict. (Neither name is",
              " fully-qualified.)",
              " Example: Subscriber to SubscriberServiceApi."
            ]
          },
          "DotnetSettings:renamed_resources": {
            "paramName": "renamed_resources",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from full resource types to the effective short name",
              " for the resource. This is used when otherwise resource",
              " named from different services would cause naming collisions.",
              " Example entry:",
              " \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\""
            ]
          },
          "DotnetSettings:ignored_resources": {
            "paramName": "ignored_resources",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " List of full resource types to ignore during generation.",
              " This is typically used for API-specific Location resources,",
              " which should be handled by the generator as if they were actually",
              " the common Location resources.",
              " Example entry: \"documentai.googleapis.com/Location\""
            ]
          },
          "DotnetSettings:forced_namespace_aliases": {
            "paramName": "forced_namespace_aliases",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Namespaces which must be aliased in snippets due to",
              " a known (but non-generator-predictable) naming collision"
            ]
          },
          "DotnetSettings:handwritten_signatures": {
            "paramName": "handwritten_signatures",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Method signatures (in the form \"service.method(signature)\")",
              " which are provided separately, so shouldn't be generated.",
              " Snippets *calling* these methods are still generated, however."
            ]
          },
          "RubySettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "GoSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "MethodSettings:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " The fully qualified name of the method, for which the options below apply.",
              " This is used to find the method to apply the options."
            ]
          },
          "MethodSettings:long_running": {
            "paramName": "long_running",
            "paramType": ".google.api.MethodSettings.LongRunning",
            "comments": [
              " Describes settings to use for long-running operations when generating",
              " API methods for RPCs. Complements RPCs that use the annotations in",
              " google/longrunning/operations.proto.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    method_settings:",
              "      - selector: google.cloud.speech.v2.Speech.BatchRecognize",
              "        long_running:",
              "          initial_poll_delay:",
              "            seconds: 60 # 1 minute",
              "          poll_delay_multiplier: 1.5",
              "          max_poll_delay:",
              "            seconds: 360 # 6 minutes",
              "          total_poll_timeout:",
              "             seconds: 54000 # 90 minutes"
            ]
          },
          "Compliance": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
              " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
              " correctly."
            ]
          },
          "Compliance:RepeatDataBody": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the entire request object in the REST body.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyInfo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the a message-type field in the REST body. Per AIP-127, only",
              " top-level, non-repeated fields can be sent this way.",
              ""
            ]
          },
          "Compliance:RepeatDataQuery": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending all request fields as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataSimplePath": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending some parameters as \"simple\" path variables (i.e., of the form",
              " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataPathResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a path resource.",
              ""
            ]
          },
          "Compliance:RepeatDataPathTrailingResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a trailing resource.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPut": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PUT method.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPatch": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PATCH method.",
              ""
            ]
          },
          "Compliance:GetEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
              " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
              " response from this RPC as the request to VerifyEnum()",
              "",
              " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
              " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "Compliance:VerifyEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
              " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
              " with the same EnumResponse; otherwise, the RPC errors.",
              "",
              " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
              " although they are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "RepeatRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "RepeatRequest:info": {
            "paramName": "info",
            "paramType": ".google.showcase.v1beta1.ComplianceData",
            "comments": []
          },
          "RepeatRequest:server_verify": {
            "paramName": "server_verify",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, the server will verify that the received request matches",
              " the request with the same name in the compliance test suite."
            ]
          },
          "RepeatRequest:intended_binding_uri": {
            "paramName": "intended_binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template this request is expected to be bound to server-side."
            ]
          },
          "RepeatRequest:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": [
              " Some top level fields, to test that these are encoded correctly",
              " in query params."
            ]
          },
          "RepeatRequest:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatRequest:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "RepeatRequest:p_int64": {
            "paramName": "p_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.RepeatRequest",
            "comments": []
          },
          "RepeatResponse:binding_uri": {
            "paramName": "binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template the request was bound to server-side."
            ]
          },
          "ComplianceSuite:group": {
            "paramName": "group",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceGroup:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceGroup:rpcs": {
            "paramName": "rpcs",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "ComplianceGroup:requests": {
            "paramName": "requests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceData:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:f_sint32": {
            "paramName": "f_sint32",
            "paramType": "TYPE_SINT32",
            "comments": []
          },
          "ComplianceData:f_sfixed32": {
            "paramName": "f_sfixed32",
            "paramType": "TYPE_SFIXED32",
            "comments": []
          },
          "ComplianceData:f_uint32": {
            "paramName": "f_uint32",
            "paramType": "TYPE_UINT32",
            "comments": []
          },
          "ComplianceData:f_fixed32": {
            "paramName": "f_fixed32",
            "paramType": "TYPE_FIXED32",
            "comments": []
          },
          "ComplianceData:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "ComplianceData:f_sint64": {
            "paramName": "f_sint64",
            "paramType": "TYPE_SINT64",
            "comments": []
          },
          "ComplianceData:f_sfixed64": {
            "paramName": "f_sfixed64",
            "paramType": "TYPE_SFIXED64",
            "comments": []
          },
          "ComplianceData:f_uint64": {
            "paramName": "f_uint64",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "ComplianceData:f_fixed64": {
            "paramName": "f_fixed64",
            "paramType": "TYPE_FIXED64",
            "comments": []
          },
          "ComplianceData:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceData:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:f_bytes": {
            "paramName": "f_bytes",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "ComplianceData:f_kingdom": {
            "paramName": "f_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceData:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:p_kingdom": {
            "paramName": "p_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceDataChild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:f_continent": {
            "paramName": "f_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataChild:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:p_float": {
            "paramName": "p_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:p_continent": {
            "paramName": "p_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataGrandchild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataGrandchild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataGrandchild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "EnumRequest:unknown_enum": {
            "paramName": "unknown_enum",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
            ]
          },
          "EnumResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.EnumRequest",
            "comments": [
              " The original request for a known or unknown enum from the server."
            ]
          },
          "EnumResponse:continent": {
            "paramName": "continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": [
              " The actual enum the server provided."
            ]
          },
          "RoutingRule:routing_parameters": {
            "paramName": "routing_parameters",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A collection of Routing Parameter specifications.",
              " **NOTE:** If multiple Routing Parameters describe the same key",
              " (via the `path_template` field or via the `field` field when",
              " `path_template` is not provided), \"last one wins\" rule",
              " determines which Parameter gets used.",
              " See the examples for more details."
            ]
          },
          "RoutingParameter:field": {
            "paramName": "field",
            "paramType": "TYPE_STRING",
            "comments": [
              " A request field to extract the header key-value pair from."
            ]
          },
          "RoutingParameter:path_template": {
            "paramName": "path_template",
            "paramType": "TYPE_STRING",
            "comments": [
              " A pattern matching the key-value field. Optional.",
              " If not specified, the whole field specified in the `field` field will be",
              " taken as value, and its name used as key. If specified, it MUST contain",
              " exactly one named segment (along with any number of unnamed segments) The",
              " pattern will be matched over the field specified in the `field` field, then",
              " if the match is successful:",
              " - the name of the single named segment will be used as a header name,",
              " - the match value of the segment will be used as a header value;",
              " if the match is NOT successful, nothing will be sent.",
              "",
              " Example:",
              "",
              "               -- This is a field in the request message",
              "              |   that the header value will be extracted from.",
              "              |",
              "              |                     -- This is the key name in the",
              "              |                    |   routing header.",
              "              V                    |",
              "     field: \"table_name\"           v",
              "     path_template: \"projects/*/{table_location=instances/*}/tables/*\"",
              "                                                ^            ^",
              "                                                |            |",
              "       In the {} brackets is the pattern that --             |",
              "       specifies what to extract from the                    |",
              "       field as a value to be sent.                          |",
              "                                                             |",
              "      The string in the field must match the whole pattern --",
              "      before brackets, inside brackets, after brackets.",
              "",
              " When looking at this specific example, we can see that:",
              " - A key-value pair with the key `table_location`",
              "   and the value matching `instances/*` should be added",
              "   to the x-goog-request-params routing header.",
              " - The value is extracted from the request message's `table_name` field",
              "   if it matches the full pattern specified:",
              "   `projects/*/instances/*/tables/*`.",
              "",
              " **NB:** If the `path_template` field is not provided, the key name is",
              " equal to the field name, and the whole field should be sent as a value.",
              " This makes the pattern for the field and the value functionally equivalent",
              " to `**`, and the configuration",
              "",
              "     {",
              "       field: \"table_name\"",
              "     }",
              "",
              " is a functionally equivalent shorthand to:",
              "",
              "     {",
              "       field: \"table_name\"",
              "       path_template: \"{table_name=**}\"",
              "     }",
              "",
              " See Example 1 for more details."
            ]
          },
          "Any:type_url": {
            "paramName": "type_url",
            "paramType": "TYPE_STRING",
            "comments": [
              " A URL/resource name that uniquely identifies the type of the serialized",
              " protocol buffer message. This string must contain at least",
              " one \"/\" character. The last segment of the URL's path must represent",
              " the fully qualified name of the type (as in",
              " `path/google.protobuf.Duration`). The name should be in a canonical form",
              " (e.g., leading \".\" is not accepted).",
              "",
              " In practice, teams usually precompile into the binary all types that they",
              " expect it to use in the context of Any. However, for URLs which use the",
              " scheme `http`, `https`, or no scheme, one can optionally set up a type",
              " server that maps type URLs to message definitions as follows:",
              "",
              " * If no scheme is provided, `https` is assumed.",
              " * An HTTP GET on the URL must yield a [google.protobuf.Type][]",
              "   value in binary format, or produce an error.",
              " * Applications are allowed to cache lookup results based on the",
              "   URL, or have them precompiled into a binary to avoid any",
              "   lookup. Therefore, binary compatibility needs to be preserved",
              "   on changes to types. (Use versioned type names to manage",
              "   breaking changes.)",
              "",
              " Note: this functionality is not currently available in the official",
              " protobuf release, and it is not used for type URLs beginning with",
              " type.googleapis.com. As of May 2023, there are no widely used type server",
              " implementations and no plans to implement one.",
              "",
              " Schemes other than `http`, `https` (or the empty scheme) might be",
              " used with implementation specific semantics.",
              ""
            ]
          },
          "Any:value": {
            "paramName": "value",
            "paramType": "TYPE_BYTES",
            "comments": [
              " Must be a valid serialized protocol buffer of the above specified type."
            ]
          },
          "Status:code": {
            "paramName": "code",
            "paramType": "TYPE_INT32",
            "comments": [
              " The status code, which should be an enum value of",
              " [google.rpc.Code][google.rpc.Code]."
            ]
          },
          "Status:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " A developer-facing error message, which should be in English. Any",
              " user-facing error message should be localized and sent in the",
              " [google.rpc.Status.details][google.rpc.Status.details] field, or localized",
              " by the client."
            ]
          },
          "Status:details": {
            "paramName": "details",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of messages that carry the error details.  There is a common set of",
              " message types for APIs to use."
            ]
          },
          "Operations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Manages long-running operations with an API service.",
              "",
              " When an API method normally takes long time to complete, it can be designed",
              " to return [Operation][google.longrunning.Operation] to the client, and the client can use this",
              " interface to receive the real response asynchronously by polling the",
              " operation resource, or pass the operation resource to another API (such as",
              " Google Cloud Pub/Sub API) to receive the response.  Any API service that",
              " returns long-running operations should implement the `Operations` interface",
              " so developers can have a consistent client experience."
            ]
          },
          "Operations:ListOperations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists operations that match the specified filter in the request. If the",
              " server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "",
              " NOTE: the `name` binding allows API services to override the binding",
              " to use different resource name schemes, such as `users/*/operations`. To",
              " override the binding, API services can add a binding such as",
              " `\"/v1/{name=users/*}/operations\"` to their service configuration.",
              " For backwards compatibility, the default name includes the operations",
              " collection id, however overriding users must ensure the name binding",
              " is the parent resource, without the operations collection id.",
              ""
            ]
          },
          "Operations:GetOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets the latest state of a long-running operation.  Clients can use this",
              " method to poll the operation result at intervals as recommended by the API",
              " service.",
              ""
            ]
          },
          "Operations:DeleteOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a long-running operation. This method indicates that the client is",
              " no longer interested in the operation result. It does not cancel the",
              " operation. If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              ""
            ]
          },
          "Operations:CancelOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Starts asynchronous cancellation on a long-running operation.  The server",
              " makes a best effort to cancel the operation, but success is not",
              " guaranteed.  If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.  Clients can use",
              " [Operations.GetOperation][google.longrunning.Operations.GetOperation] or",
              " other methods to check whether the cancellation succeeded or whether the",
              " operation completed despite cancellation. On successful cancellation,",
              " the operation is not deleted; instead, it becomes an operation with",
              " an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,",
              " corresponding to `Code.CANCELLED`.",
              ""
            ]
          },
          "Operations:WaitOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Waits until the specified long-running operation is done or reaches at most",
              " a specified timeout, returning the latest state.  If the operation is",
              " already done, the latest state is immediately returned.  If the timeout",
              " specified is greater than the default HTTP/RPC timeout, the HTTP/RPC",
              " timeout is used.  If the server does not support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              " Note that this method is on a best-effort basis.  It may return the latest",
              " state before the specified timeout (including immediately), meaning even an",
              " immediate response is no guarantee that the operation is done.",
              ""
            ]
          },
          "Operation:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The server-assigned name, which is only unique within the same service that",
              " originally returns it. If you use the default HTTP mapping, the",
              " `name` should be a resource name ending with `operations/{unique_id}`."
            ]
          },
          "Operation:metadata": {
            "paramName": "metadata",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " Service-specific metadata associated with the operation.  It typically",
              " contains progress information and common metadata such as create time.",
              " Some services might not provide such metadata.  Any method that returns a",
              " long-running operation should document the metadata type, if any."
            ]
          },
          "Operation:done": {
            "paramName": "done",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If the value is `false`, it means the operation is still in progress.",
              " If `true`, the operation is completed, and either `error` or `response` is",
              " available."
            ]
          },
          "Operation:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error result of the operation in case of failure or cancellation."
            ]
          },
          "Operation:response": {
            "paramName": "response",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " The normal response of the operation in case of success.  If the original",
              " method returns no data on success, such as `Delete`, the response is",
              " `google.protobuf.Empty`.  If the original method is standard",
              " `Get`/`Create`/`Update`, the response should be the resource.  For other",
              " methods, the response should have the type `XxxResponse`, where `Xxx`",
              " is the original method name.  For example, if the original method name",
              " is `TakeSnapshot()`, the inferred response type is",
              " `TakeSnapshotResponse`."
            ]
          },
          "GetOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource."
            ]
          },
          "ListOperationsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation's parent resource."
            ]
          },
          "ListOperationsRequest:filter": {
            "paramName": "filter",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list filter."
            ]
          },
          "ListOperationsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The standard list page size."
            ]
          },
          "ListOperationsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list page token."
            ]
          },
          "ListOperationsResponse:operations": {
            "paramName": "operations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of operations that matches the specified filter in the request."
            ]
          },
          "ListOperationsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard List next-page token."
            ]
          },
          "CancelOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be cancelled."
            ]
          },
          "DeleteOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be deleted."
            ]
          },
          "WaitOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to wait on."
            ]
          },
          "WaitOperationRequest:timeout": {
            "paramName": "timeout",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The maximum duration to wait before timing out. If left blank, the wait",
              " will be at most the time permitted by the underlying HTTP/RPC protocol.",
              " If RPC context deadline is also specified, the shorter one will be used."
            ]
          },
          "OperationInfo:response_type": {
            "paramName": "response_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the primary return type for this",
              " long-running operation.",
              " This type will be used to deserialize the LRO's response.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "OperationInfo:metadata_type": {
            "paramName": "metadata_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the metadata type for this long-running",
              " operation.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "Timestamp:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Represents seconds of UTC time since Unix epoch",
              " 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to",
              " 9999-12-31T23:59:59Z inclusive."
            ]
          },
          "Timestamp:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Non-negative fractions of a second at nanosecond resolution. Negative",
              " second values with fractions must still have non-negative nanos values",
              " that count forward in time. Must be from 0 to 999,999,999",
              " inclusive."
            ]
          },
          "Echo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used showcase the four main types of rpcs - unary, server",
              " side streaming, client side streaming, and bidirectional streaming. This",
              " service also exposes methods that explicitly implement server delay, and",
              " paginated calls. Set the 'showcase-trailer' metadata key on any method",
              " to have the values echoed in the response trailers. Set the ",
              " 'x-goog-request-params' metadata key on any method to have the values",
              " echoed in the response headers."
            ]
          },
          "Echo:Expand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method splits the given content into words and will pass each word back",
              " through the stream. This method showcases server-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Collect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will collect the words given to it. When the stream is closed",
              " by the client, this method will return the a concatenation of the strings",
              " passed to it. This method showcases client-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Chat": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method, upon receiving a request on the stream, will pass the same",
              " content back on the stream. This method showcases bidirectional",
              " streaming RPCs.",
              ""
            ]
          },
          "Echo:PagedExpand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the Expand method but instead of returning a stream of",
              " expanded words, this method returns a paged list of expanded words.",
              ""
            ]
          },
          "Echo:PagedExpandLegacy": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the PagedExpand except that it uses",
              " max_results instead of page_size, as some legacy APIs still",
              " do. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:PagedExpandLegacyMapped": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method returns a map containing lists of words that appear in the input, keyed by their",
              " initial character. The only words returned are the ones included in the current page,",
              " as determined by page_token and page_size, which both refer to the word indices in the",
              " input. This paging result consisting of a map of lists is a pattern used by some legacy",
              " APIs. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:Wait": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will wait for the requested amount of time and then return.",
              " This method showcases how a client handles a request timeout.",
              ""
            ]
          },
          "Echo:Block": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will block (wait) for the requested amount of time",
              " and then return the response or error.",
              " This method showcases how a client handles delays or retries.",
              ""
            ]
          },
          "EchoRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content to be echoed by the server."
            ]
          },
          "EchoRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error to be thrown by the server."
            ]
          },
          "EchoRequest:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity to be echoed by the server."
            ]
          },
          "EchoRequest:header": {
            "paramName": "header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoRequest:other_header": {
            "paramName": "other_header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content specified in the request."
            ]
          },
          "EchoResponse:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity specified in the request."
            ]
          },
          "ExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content that will be split into words and returned on the stream."
            ]
          },
          "ExpandRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that is thrown after all words are sent on the stream."
            ]
          },
          "PagedExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page."
            ]
          },
          "PagedExpandRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandLegacyRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandLegacyRequest:max_results": {
            "paramName": "max_results",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
              "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
            ]
          },
          "PagedExpandLegacyRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandResponse:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded."
            ]
          },
          "PagedExpandResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "PagedExpandResponseList:words": {
            "paramName": "words",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "PagedExpandLegacyMappedResponse:alphabetized": {
            "paramName": "alphabetized",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded, indexed by their initial character.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates",
              "     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)"
            ]
          },
          "PagedExpandLegacyMappedResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "WaitRequest:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "WaitRequest:ttl": {
            "paramName": "ttl",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The duration of this operation."
            ]
          },
          "WaitRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "WaitRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.WaitResponse",
            "comments": [
              " The response to be returned on operation completion."
            ]
          },
          "WaitResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content of the result."
            ]
          },
          "WaitMetadata:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "BlockRequest:response_delay": {
            "paramName": "response_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The amount of time to block before returning a response."
            ]
          },
          "BlockRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "BlockRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.BlockResponse",
            "comments": [
              " The response to be returned that will signify successful method call."
            ]
          },
          "BlockResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content can contain anything, the server will not depend on a value",
              " here."
            ]
          },
          "ResourceDescriptor:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type. It must be in the format of",
              " {service_name}/{resource_type_kind}. The `resource_type_kind` must be",
              " singular and must not include version numbers.",
              "",
              " Example: `storage.googleapis.com/Bucket`",
              "",
              " The value of the resource_type_kind must follow the regular expression",
              " /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and",
              " should use PascalCase (UpperCamelCase). The maximum number of",
              " characters allowed for the `resource_type_kind` is 100."
            ]
          },
          "ResourceDescriptor:pattern": {
            "paramName": "pattern",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Optional. The relative resource name pattern associated with this resource",
              " type. The DNS prefix of the full resource name shouldn't be specified here.",
              "",
              " The path pattern must follow the syntax, which aligns with HTTP binding",
              " syntax:",
              "",
              "     Template = Segment { \"/\" Segment } ;",
              "     Segment = LITERAL | Variable ;",
              "     Variable = \"{\" LITERAL \"}\" ;",
              "",
              " Examples:",
              "",
              "     - \"projects/{project}/topics/{topic}\"",
              "     - \"projects/{project}/knowledgeBases/{knowledge_base}\"",
              "",
              " The components in braces correspond to the IDs for each resource in the",
              " hierarchy. It is expected that, if multiple patterns are provided,",
              " the same component name (e.g. \"project\") refers to IDs of the same",
              " type of resource."
            ]
          },
          "ResourceDescriptor:name_field": {
            "paramName": "name_field",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The field on the resource that designates the resource name",
              " field. If omitted, this is assumed to be \"name\"."
            ]
          },
          "ResourceDescriptor:history": {
            "paramName": "history",
            "paramType": ".google.api.ResourceDescriptor.History",
            "comments": [
              " Optional. The historical or future-looking state of the resource pattern.",
              "",
              " Example:",
              "",
              "     // The InspectTemplate message originally only supported resource",
              "     // names with organization, and project was added later.",
              "     message InspectTemplate {",
              "       option (google.api.resource) = {",
              "         type: \"dlp.googleapis.com/InspectTemplate\"",
              "         pattern:",
              "         \"organizations/{organization}/inspectTemplates/{inspect_template}\"",
              "         pattern: \"projects/{project}/inspectTemplates/{inspect_template}\"",
              "         history: ORIGINALLY_SINGLE_PATTERN",
              "       };",
              "     }"
            ]
          },
          "ResourceDescriptor:plural": {
            "paramName": "plural",
            "paramType": "TYPE_STRING",
            "comments": [
              " The plural name used in the resource name and permission names, such as",
              " 'projects' for the resource name of 'projects/{project}' and the permission",
              " name of 'cloudresourcemanager.googleapis.com/projects.get'. It is the same",
              " concept of the `plural` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              "",
              " Note: The plural form is required even for singleton resources. See",
              " https://aip.dev/156"
            ]
          },
          "ResourceDescriptor:singular": {
            "paramName": "singular",
            "paramType": "TYPE_STRING",
            "comments": [
              " The same concept of the `singular` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              " Such as \"project\" for the `resourcemanager.googleapis.com/Project` type."
            ]
          },
          "ResourceDescriptor:style": {
            "paramName": "style",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " Style flag(s) for this resource.",
              " These indicate that a resource is expected to conform to a given",
              " style. See the specific style flags for additional information."
            ]
          },
          "ResourceReference:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type that the annotated field references.",
              "",
              " Example:",
              "",
              "     message Subscription {",
              "       string topic = 2 [(google.api.resource_reference) = {",
              "         type: \"pubsub.googleapis.com/Topic\"",
              "       }];",
              "     }",
              "",
              " Occasionally, a field may reference an arbitrary resource. In this case,",
              " APIs use the special value * in their resource reference.",
              "",
              " Example:",
              "",
              "     message GetIamPolicyRequest {",
              "       string resource = 2 [(google.api.resource_reference) = {",
              "         type: \"*\"",
              "       }];",
              "     }"
            ]
          },
          "ResourceReference:child_type": {
            "paramName": "child_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type of a child collection that the annotated field",
              " references. This is useful for annotating the `parent` field that",
              " doesn't have a fixed resource type.",
              "",
              " Example:",
              "",
              "     message ListLogEntriesRequest {",
              "       string parent = 1 [(google.api.resource_reference) = {",
              "         child_type: \"logging.googleapis.com/LogEntry\"",
              "       };",
              "     }"
            ]
          },
          "FieldMask:paths": {
            "paramName": "paths",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The set of field mask paths."
            ]
          },
          "Identity": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple identity service."
            ]
          },
          "Identity:CreateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a user.",
              ""
            ]
          },
          "Identity:GetUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the User with the given uri.",
              ""
            ]
          },
          "Identity:UpdateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a user.",
              ""
            ]
          },
          "Identity:DeleteUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a user, their profile, and all of their authored messages.",
              ""
            ]
          },
          "Identity:ListUsers": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all users.",
              ""
            ]
          },
          "User:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user."
            ]
          },
          "User:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The display_name of the user."
            ],
            "fieldBehavior": 2
          },
          "User:email": {
            "paramName": "email",
            "paramType": "TYPE_STRING",
            "comments": [
              " The email address of the user."
            ],
            "fieldBehavior": 2
          },
          "User:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the user was created."
            ],
            "fieldBehavior": 3
          },
          "User:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the user was updated."
            ],
            "fieldBehavior": 3
          },
          "User:age": {
            "paramName": "age",
            "paramType": "TYPE_INT32",
            "comments": [
              " The age of the user in years."
            ]
          },
          "User:height_feet": {
            "paramName": "height_feet",
            "paramType": "TYPE_DOUBLE",
            "comments": [
              " The height of the user in feet."
            ]
          },
          "User:nickname": {
            "paramName": "nickname",
            "paramType": "TYPE_STRING",
            "comments": [
              " The nickname of the user.",
              "",
              " (-- aip.dev/not-precedent: An empty string is a valid nickname.",
              "     Ordinarily, proto3_optional should not be used on a `string` field. --)"
            ]
          },
          "User:enable_notifications": {
            "paramName": "enable_notifications",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the receiving of notifications. The default is true if unset.",
              "",
              " (-- aip.dev/not-precedent: The default for the feature is true.",
              "     Ordinarily, the default for a `bool` field should be false. --)"
            ]
          },
          "CreateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to create."
            ]
          },
          "GetUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested user."
            ],
            "fieldBehavior": 2
          },
          "UpdateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to update."
            ]
          },
          "UpdateUserRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user to delete."
            ],
            "fieldBehavior": 2
          },
          "ListUsersRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of users to return. Server may return fewer users",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListUsersRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Identity\\ListUsers` method."
            ]
          },
          "ListUsersResponse:users": {
            "paramName": "users",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of users."
            ]
          },
          "ListUsersResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListUsersRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Message\\ListUsers` method to retrieve the",
              " next page of results."
            ]
          },
          "ErrorInfo:reason": {
            "paramName": "reason",
            "paramType": "TYPE_STRING",
            "comments": [
              " The reason of the error. This is a constant value that identifies the",
              " proximate cause of the error. Error reasons are unique within a particular",
              " domain of errors. This should be at most 63 characters and match a",
              " regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents",
              " UPPER_SNAKE_CASE."
            ]
          },
          "ErrorInfo:domain": {
            "paramName": "domain",
            "paramType": "TYPE_STRING",
            "comments": [
              " The logical grouping to which the \"reason\" belongs. The error domain",
              " is typically the registered service name of the tool or product that",
              " generates the error. Example: \"pubsub.googleapis.com\". If the error is",
              " generated by some common infrastructure, the error domain must be a",
              " globally unique value that identifies the infrastructure. For Google API",
              " infrastructure, the error domain is \"googleapis.com\"."
            ]
          },
          "ErrorInfo:metadata": {
            "paramName": "metadata",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional structured details about this error.",
              "",
              " Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in",
              " length. When identifying the current value of an exceeded limit, the units",
              " should be contained in the key, not the value.  For example, rather than",
              " {\"instanceLimit\": \"100/request\"}, should be returned as,",
              " {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of",
              " instances that can be created in a single (batch) request."
            ]
          },
          "RetryInfo:retry_delay": {
            "paramName": "retry_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " Clients should wait at least this long between retrying the same request."
            ]
          },
          "DebugInfo:stack_entries": {
            "paramName": "stack_entries",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The stack trace entries indicating where the error occurred."
            ]
          },
          "DebugInfo:detail": {
            "paramName": "detail",
            "paramType": "TYPE_STRING",
            "comments": [
              " Additional debugging information provided by the server."
            ]
          },
          "QuotaFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all quota violations."
            ]
          },
          "PreconditionFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all precondition violations."
            ]
          },
          "BadRequest:field_violations": {
            "paramName": "field_violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all violations in a client request."
            ]
          },
          "RequestInfo:request_id": {
            "paramName": "request_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " An opaque string that should only be interpreted by the service generating",
              " it. For example, it can be used to identify requests in the service's logs."
            ]
          },
          "RequestInfo:serving_data": {
            "paramName": "serving_data",
            "paramType": "TYPE_STRING",
            "comments": [
              " Any data that was used to serve this request. For example, an encrypted",
              " stack trace that can be sent back to the service provider for debugging."
            ]
          },
          "ResourceInfo:resource_type": {
            "paramName": "resource_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " A name for the type of resource being accessed, e.g. \"sql table\",",
              " \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL",
              " of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\"."
            ]
          },
          "ResourceInfo:resource_name": {
            "paramName": "resource_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the resource being accessed.  For example, a shared calendar",
              " name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current",
              " error is",
              " [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED]."
            ]
          },
          "ResourceInfo:owner": {
            "paramName": "owner",
            "paramType": "TYPE_STRING",
            "comments": [
              " The owner of the resource (optional).",
              " For example, \"user:<owner email>\" or \"project:<Google developer project",
              " id>\"."
            ]
          },
          "ResourceInfo:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " Describes what error is encountered when accessing this resource.",
              " For example, updating a cloud project may require the `writer` permission",
              " on the developer console project."
            ]
          },
          "Help:links": {
            "paramName": "links",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " URL(s) pointing to additional information on handling the current error."
            ]
          },
          "LocalizedMessage:locale": {
            "paramName": "locale",
            "paramType": "TYPE_STRING",
            "comments": [
              " The locale used following the specification defined at",
              " https://www.rfc-editor.org/rfc/bcp/bcp47.txt.",
              " Examples are: \"en-US\", \"fr-CH\", \"es-MX\""
            ]
          },
          "LocalizedMessage:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " The localized error message in the above locale."
            ]
          },
          "Messaging": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple messaging service that implements chat rooms and profile posts.",
              "",
              " This messaging service showcases the features that API clients",
              " generated by gapic-generators implement."
            ]
          },
          "Messaging:CreateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a room.",
              ""
            ]
          },
          "Messaging:GetRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Room with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a room.",
              ""
            ]
          },
          "Messaging:DeleteRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a room and all of its blurbs.",
              ""
            ]
          },
          "Messaging:ListRooms": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all chat rooms.",
              ""
            ]
          },
          "Messaging:CreateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a blurb. If the parent is a room, the blurb is understood to be a",
              " message in that room. If the parent is a profile, the blurb is understood",
              " to be a post on the profile.",
              ""
            ]
          },
          "Messaging:GetBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Blurb with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a blurb.",
              ""
            ]
          },
          "Messaging:DeleteBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a blurb.",
              ""
            ]
          },
          "Messaging:ListBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists blurbs for a specific chat room or user profile depending on the",
              " parent resource name.",
              ""
            ]
          },
          "Messaging:SearchBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method searches through all blurbs across all rooms and profiles",
              " for blurbs containing to words found in the query. Only posts that",
              " contain an exact match of a queried word will be returned.",
              ""
            ]
          },
          "Messaging:StreamBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This returns a stream that emits the blurbs that are created for a",
              " particular chat room or user profile.",
              ""
            ]
          },
          "Messaging:SendBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is a stream to create multiple blurbs. If an invalid blurb is",
              " requested to be created, the stream will close with an error.",
              ""
            ]
          },
          "Messaging:Connect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method starts a bidirectional stream that receives all blurbs that",
              " are being created after the stream has started and sends requests to create",
              " blurbs. If an invalid blurb is requested to be created, the stream will",
              " close with an error.",
              ""
            ]
          },
          "Room:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Room:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The human readable name of the chat room."
            ],
            "fieldBehavior": 2
          },
          "Room:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " The description of the chat room."
            ]
          },
          "Room:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the room was created."
            ],
            "fieldBehavior": 3
          },
          "Room:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the room was updated."
            ],
            "fieldBehavior": 3
          },
          "CreateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to create."
            ]
          },
          "GetRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "UpdateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to update."
            ]
          },
          "UpdateRoomRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "ListRoomsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of rooms return. Server may return fewer rooms",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListRoomsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListRooms` method."
            ]
          },
          "ListRoomsResponse:rooms": {
            "paramName": "rooms",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of rooms."
            ]
          },
          "ListRoomsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListRoomsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Messaging\\ListRooms` method to retrieve",
              " the next page of results."
            ]
          },
          "Blurb:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Blurb:user": {
            "paramName": "user",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the blurb's author."
            ],
            "fieldBehavior": 2
          },
          "Blurb:text": {
            "paramName": "text",
            "paramType": "TYPE_STRING",
            "comments": [
              " The textual content of this blurb."
            ]
          },
          "Blurb:image": {
            "paramName": "image",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The image content of this blurb."
            ]
          },
          "Blurb:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the blurb was created."
            ],
            "fieldBehavior": 3
          },
          "Blurb:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the blurb was updated."
            ],
            "fieldBehavior": 3
          },
          "Blurb:legacy_room_id": {
            "paramName": "legacy_room_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the room. This field is used to signal",
              " the use of the compound resource pattern",
              " `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`"
            ]
          },
          "Blurb:legacy_user_id": {
            "paramName": "legacy_user_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the user. This field is used to signal",
              " the use of the compound resource pattern",
              " `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`"
            ]
          },
          "CreateBlurbRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room or user profile that this blurb will",
              " be tied to."
            ],
            "fieldBehavior": 2
          },
          "CreateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to create."
            ]
          },
          "GetBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "UpdateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to update."
            ]
          },
          "UpdateBlurbRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine wich fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room or profile whos blurbs to list."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs to return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "ListBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
            ]
          },
          "ListBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of blurbs."
            ]
          },
          "ListBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\ListBlurbs` method to retrieve",
              " the next page of results."
            ]
          },
          "SearchBlurbsRequest:query": {
            "paramName": "query",
            "paramType": "TYPE_STRING",
            "comments": [
              " The query used to search for blurbs containing to words of this string.",
              " Only posts that contain an exact match of a queried word will be returned."
            ],
            "fieldBehavior": 2
          },
          "SearchBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
              " rooms and all profiles."
            ]
          },
          "SearchBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "SearchBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of",
              " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
            ]
          },
          "SearchBlurbsMetadata:retry_info": {
            "paramName": "retry_info",
            "paramType": ".google.rpc.RetryInfo",
            "comments": [
              " This signals to the client when to next poll for response."
            ]
          },
          "SearchBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Blurbs that matched the search query."
            ]
          },
          "SearchBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in SearchBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\SearchBlurbs` method to",
              " retrieve the next page of results."
            ]
          },
          "StreamBlurbsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of a chat room or user profile whose blurbs to stream."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsRequest:expire_time": {
            "paramName": "expire_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time at which this stream will close."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsResponse:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb that was either created, updated, or deleted."
            ]
          },
          "StreamBlurbsResponse:action": {
            "paramName": "action",
            "paramType": ".google.showcase.v1beta1.StreamBlurbsResponse.Action",
            "comments": [
              " The action that triggered the blurb to be returned."
            ]
          },
          "SendBlurbsResponse:names": {
            "paramName": "names",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The names of successful blurb creations."
            ]
          },
          "ConnectRequest:config": {
            "paramName": "config",
            "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
            "comments": [
              " Provides information that specifies how to process subsequent requests.",
              " The first `ConnectRequest` message must contain a `config`  message."
            ]
          },
          "ConnectRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to be created."
            ]
          },
          "SequenceService": {
            "paramName": "",
            "paramType": "",
            "comments": []
          },
          "SequenceService:CreateSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a sequence.",
              ""
            ]
          },
          "SequenceService:GetSequenceReport": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves a sequence.",
              ""
            ]
          },
          "SequenceService:AttemptSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Attempts a sequence.",
              ""
            ]
          },
          "Sequence:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "Sequence:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Sequence of responses to return in order for each attempt. If empty, the",
              " default response is an immediate OK."
            ]
          },
          "SequenceReport:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "SequenceReport:attempts": {
            "paramName": "attempts",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The set of RPC attempts received by the server for a Sequence."
            ]
          },
          "CreateSequenceRequest:sequence": {
            "paramName": "sequence",
            "paramType": ".google.showcase.v1beta1.Sequence",
            "comments": []
          },
          "AttemptSequenceRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "GetSequenceReportRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "Testing": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A service to facilitate running discrete sets of tests",
              " against Showcase."
            ]
          },
          "Testing:CreateSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a new testing session.",
              ""
            ]
          },
          "Testing:GetSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets a testing session.",
              ""
            ]
          },
          "Testing:ListSessions": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists the current test sessions.",
              ""
            ]
          },
          "Testing:DeleteSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Delete a test session.",
              ""
            ]
          },
          "Testing:ReportSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Report on the status of a session.",
              " This generates a report detailing which tests have been completed,",
              " and an overall rollup.",
              ""
            ]
          },
          "Testing:ListTests": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " List the tests of a sessesion.",
              ""
            ]
          },
          "Testing:DeleteTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Explicitly decline to implement a test.",
              "",
              " This removes the test from subsequent `ListTests` calls, and",
              " attempting to do the test will error.",
              "",
              " This method will error if attempting to delete a required test.",
              ""
            ]
          },
          "Testing:VerifyTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Register a response to a test.",
              "",
              " In cases where a test involves registering a final answer at the",
              " end of the test, this method provides the means to do so.",
              ""
            ]
          },
          "Session:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the session. The ID must conform to ^[a-z]+$",
              " If this is not provided, Showcase chooses one at random."
            ]
          },
          "Session:version": {
            "paramName": "version",
            "paramType": ".google.showcase.v1beta1.Session.Version",
            "comments": [
              " Required. The version this session is using."
            ]
          },
          "CreateSessionRequest:session": {
            "paramName": "session",
            "paramType": ".google.showcase.v1beta1.Session",
            "comments": [
              " The session to be created.",
              " Sessions are immutable once they are created (although they can",
              " be deleted)."
            ]
          },
          "GetSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be retrieved."
            ]
          },
          "ListSessionsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of sessions to return per page."
            ]
          },
          "ListSessionsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListSessionsResponse:sessions": {
            "paramName": "sessions",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The sessions being returned."
            ]
          },
          "ListSessionsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "DeleteSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be deleted."
            ]
          },
          "ReportSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be reported on."
            ]
          },
          "ReportSessionResponse:result": {
            "paramName": "result",
            "paramType": ".google.showcase.v1beta1.ReportSessionResponse.Result",
            "comments": [
              " The state of the report."
            ]
          },
          "ReportSessionResponse:test_runs": {
            "paramName": "test_runs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The test runs of this session."
            ]
          },
          "Test:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "Test:expectation_level": {
            "paramName": "expectation_level",
            "paramType": ".google.showcase.v1beta1.Test.ExpectationLevel",
            "comments": [
              " The expectation level for this test."
            ]
          },
          "Test:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the test."
            ]
          },
          "Test:blueprints": {
            "paramName": "blueprints",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The blueprints that will satisfy this test. There may be multiple blueprints",
              " that can signal to the server that this test case is being exercised. Although",
              " multiple blueprints are specified, only a single blueprint needs to be run to",
              " signal that the test case was exercised."
            ]
          },
          "Issue:type": {
            "paramName": "type",
            "paramType": ".google.showcase.v1beta1.Issue.Type",
            "comments": [
              " The type of the issue."
            ]
          },
          "Issue:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Issue.Severity",
            "comments": [
              " The severity of the issue."
            ]
          },
          "Issue:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the issue."
            ]
          },
          "ListTestsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session."
            ]
          },
          "ListTestsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of tests to return per page."
            ]
          },
          "ListTestsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListTestsResponse:tests": {
            "paramName": "tests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The tests being returned."
            ]
          },
          "ListTestsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "TestRun:test": {
            "paramName": "test",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "TestRun:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue found with the test run. If empty, this test run was successful."
            ]
          },
          "DeleteTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to be deleted."
            ]
          },
          "VerifyTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to have an answer registered to it."
            ]
          },
          "VerifyTestRequest:answer": {
            "paramName": "answer",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The answer from the test."
            ]
          },
          "VerifyTestRequest:answers": {
            "paramName": "answers",
            "paramType": "TYPE_BYTES[]",
            "comments": [
              " The answers from the test if multiple are to be checked"
            ]
          },
          "VerifyTestResponse:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue if check answer was unsuccessful. This will be empty if the check answer succeeded."
            ]
          }
        }
      },
      "retryableCodeMap": {
        "codeEnumMapping": {
          "0": "OK",
          "1": "CANCELLED",
          "2": "UNKNOWN",
          "3": "INVALID_ARGUMENT",
          "4": "DEADLINE_EXCEEDED",
          "5": "NOT_FOUND",
          "6": "ALREADY_EXISTS",
          "7": "PERMISSION_DENIED",
          "8": "RESOURCE_EXHAUSTED",
          "9": "FAILED_PRECONDITION",
          "10": "ABORTED",
          "11": "OUT_OF_RANGE",
          "12": "UNIMPLEMENTED",
          "13": "INTERNAL",
          "14": "UNAVAILABLE",
          "15": "DATA_LOSS",
          "16": "UNAUTHENTICATED",
          "OK": "0",
          "CANCELLED": "1",
          "UNKNOWN": "2",
          "INVALID_ARGUMENT": "3",
          "DEADLINE_EXCEEDED": "4",
          "NOT_FOUND": "5",
          "ALREADY_EXISTS": "6",
          "PERMISSION_DENIED": "7",
          "RESOURCE_EXHAUSTED": "8",
          "FAILED_PRECONDITION": "9",
          "ABORTED": "10",
          "OUT_OF_RANGE": "11",
          "UNIMPLEMENTED": "12",
          "INTERNAL": "13",
          "UNAVAILABLE": "14",
          "DATA_LOSS": "15",
          "UNAUTHENTICATED": "16"
        },
        "uniqueCodesNamesMap": {
          "": "non_idempotent",
          "deadline_exceeded_unavailable": "idempotent"
        },
        "prettyCodesNamesMap": {
          "non_idempotent": [],
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ]
        },
        "uniqueParamsNamesMap": {
          "94312e9926796a52a8fcbbedaac41972e07ccd1c": "default"
        },
        "prettyParamNamesMap": {
          "default": {
            "initial_retry_delay_millis": 100,
            "retry_delay_multiplier": 1.3,
            "max_retry_delay_millis": 60000,
            "initial_rpc_timeout_millis": 60000,
            "rpc_timeout_multiplier": 1,
            "max_rpc_timeout_millis": 60000,
            "total_timeout_millis": 600000
          }
        }
      },
      "grpcServiceConfig": {},
      "bundleConfigs": [],
      "bundleConfigsMethods": [],
      "simpleMethods": [
        {
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Echo",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:echo",
              "body": "*"
            },
            ".google.api.routing": {
              "routingParameters": [
                {
                  "field": "header"
                },
                {
                  "field": "header",
                  "pathTemplate": "{routing_id=**}"
                },
                {
                  "field": "header",
                  "pathTemplate": "{table_name=regions/*/zones/*/**}"
                },
                {
                  "field": "header",
                  "pathTemplate": "{super_id=projects/*}/**"
                },
                {
                  "field": "header",
                  "pathTemplate": "{table_name=projects/*/instances/*/**}"
                },
                {
                  "field": "header",
                  "pathTemplate": "projects/*/{instance_id=instances/*}/**"
                },
                {
                  "field": "other_header",
                  "pathTemplate": "{baz=**}"
                },
                {
                  "field": "other_header",
                  "pathTemplate": "{qux=projects/*}/**"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "dynamicRoutingRequestParams": [
            [
              {
                "pathTemplate": "",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "header",
                "messageRegex": "(?<header>.*)"
              }
            ],
            [
              {
                "pathTemplate": "{routing_id=**}",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "routing_id",
                "messageRegex": "(?<routing_id>(?:.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "{table_name=regions/*/zones/*/**}",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "table_name",
                "messageRegex": "(?<table_name>regions/[^/]+/zones/[^/]+(?:/.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "{super_id=projects/*}/**",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "super_id",
                "messageRegex": "(?<super_id>projects/[^/]+)(?:/.*)?"
              }
            ],
            [
              {
                "pathTemplate": "{table_name=projects/*/instances/*/**}",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "table_name",
                "messageRegex": "(?<table_name>projects/[^/]+/instances/[^/]+(?:/.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "projects/*/{instance_id=instances/*}/**",
                "fieldRetrieve": [
                  "header"
                ],
                "fieldSend": "instance_id",
                "messageRegex": "projects/[^/]+/(?<instance_id>instances/[^/]+)(?:/.*)?"
              }
            ],
            [
              {
                "pathTemplate": "{baz=**}",
                "fieldRetrieve": [
                  "otherHeader"
                ],
                "fieldSend": "baz",
                "messageRegex": "(?<baz>(?:.*)?)"
              }
            ],
            [
              {
                "pathTemplate": "{qux=projects/*}/**",
                "fieldRetrieve": [
                  "otherHeader"
                ],
                "fieldSend": "qux",
                "messageRegex": "(?<qux>projects/[^/]+)(?:/.*)?"
              }
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.PagedExpandLegacyRequest",
          "outputInterface": ".google.showcase.v1beta1.PagedExpandResponse",
          "comments": [
            " This is similar to the PagedExpand except that it uses",
            " max_results instead of page_size, as some legacy APIs still",
            " do. New APIs should NOT use this pattern.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "PagedExpandLegacy",
          "inputType": ".google.showcase.v1beta1.PagedExpandLegacyRequest",
          "outputType": ".google.showcase.v1beta1.PagedExpandResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:pagedExpandLegacy",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The string to expand."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "max_results",
              "paramType": "TYPE_INT32",
              "comments": [
                " The number of words to returned in each page.",
                " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
                "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The position of the page to be returned."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.BlockRequest",
          "outputInterface": ".google.showcase.v1beta1.BlockResponse",
          "comments": [
            " This method will block (wait) for the requested amount of time",
            " and then return the response or error.",
            " This method showcases how a client handles delays or retries.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Block",
          "inputType": ".google.showcase.v1beta1.BlockRequest",
          "outputType": ".google.showcase.v1beta1.BlockResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:block",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "response_delay",
              "paramType": ".google.protobuf.Duration",
              "comments": [
                " The amount of time to block before returning a response."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that will be returned by the server. If this code is specified",
                " to be the OK rpc code, an empty response will be returned."
              ]
            },
            {
              "paramName": "success",
              "paramType": ".google.showcase.v1beta1.BlockResponse",
              "comments": [
                " The response to be returned that will signify successful method call."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "longRunning": [
        {
          "longRunning": {
            "responseType": "WaitResponse",
            "metadataType": "WaitMetadata"
          },
          "longRunningResponseType": ".google.showcase.v1beta1.WaitResponse",
          "longRunningMetadataType": ".google.showcase.v1beta1.WaitMetadata",
          "inputInterface": ".google.showcase.v1beta1.WaitRequest",
          "outputInterface": ".google.longrunning.Operation",
          "comments": [
            " This method will wait for the requested amount of time and then return.",
            " This method showcases how a client handles a request timeout.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Wait",
          "inputType": ".google.showcase.v1beta1.WaitRequest",
          "outputType": ".google.longrunning.Operation",
          "options": {
            ".google.longrunning.operationInfo": {
              "responseType": "WaitResponse",
              "metadataType": "WaitMetadata"
            },
            ".google.api.http": {
              "post": "/v1beta1/echo:wait",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "end_time",
              "paramType": ".google.protobuf.Timestamp",
              "comments": [
                " The time that this operation will complete."
              ]
            },
            {
              "paramName": "ttl",
              "paramType": ".google.protobuf.Duration",
              "comments": [
                " The duration of this operation."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that will be returned by the server. If this code is specified",
                " to be the OK rpc code, an empty response will be returned."
              ]
            },
            {
              "paramName": "success",
              "paramType": ".google.showcase.v1beta1.WaitResponse",
              "comments": [
                " The response to be returned on operation completion."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "diregapicLRO": [],
      "streaming": [
        {
          "streaming": "SERVER_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.ExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method splits the given content into words and will pass each word back",
            " through the stream. This method showcases server-side streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Expand",
          "inputType": ".google.showcase.v1beta1.ExpandRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.methodSignature": [
              "content,error"
            ],
            ".google.api.http": {
              "post": "/v1beta1/echo:expand",
              "body": "*",
              "additionalBindings": []
            }
          },
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content that will be split into words and returned on the stream."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that is thrown after all words are sent on the stream."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "streaming": "CLIENT_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method will collect the words given to it. When the stream is closed",
            " by the client, this method will return the a concatenation of the strings",
            " passed to it. This method showcases client-side streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Collect",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:collect",
              "body": "*",
              "additionalBindings": []
            }
          },
          "clientStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "streaming": "BIDI_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method, upon receiving a request on the stream, will pass the same",
            " content back on the stream. This method showcases bidirectional",
            " streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Chat",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "clientStreaming": true,
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "clientStreaming": [
        {
          "streaming": "CLIENT_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method will collect the words given to it. When the stream is closed",
            " by the client, this method will return the a concatenation of the strings",
            " passed to it. This method showcases client-side streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Collect",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:collect",
              "body": "*",
              "additionalBindings": []
            }
          },
          "clientStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "serverStreaming": [
        {
          "streaming": "SERVER_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.ExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method splits the given content into words and will pass each word back",
            " through the stream. This method showcases server-side streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Expand",
          "inputType": ".google.showcase.v1beta1.ExpandRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "options": {
            ".google.api.methodSignature": [
              "content,error"
            ],
            ".google.api.http": {
              "post": "/v1beta1/echo:expand",
              "body": "*",
              "additionalBindings": []
            }
          },
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content that will be split into words and returned on the stream."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error that is thrown after all words are sent on the stream."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "bidiStreaming": [
        {
          "streaming": "BIDI_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.EchoRequest",
          "outputInterface": ".google.showcase.v1beta1.EchoResponse",
          "comments": [
            " This method, upon receiving a request on the stream, will pass the same",
            " content back on the stream. This method showcases bidirectional",
            " streaming RPCs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Chat",
          "inputType": ".google.showcase.v1beta1.EchoRequest",
          "outputType": ".google.showcase.v1beta1.EchoResponse",
          "clientStreaming": true,
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The content to be echoed by the server."
              ]
            },
            {
              "paramName": "error",
              "paramType": ".google.rpc.Status",
              "comments": [
                " The error to be thrown by the server."
              ]
            },
            {
              "paramName": "severity",
              "paramType": ".google.showcase.v1beta1.Severity",
              "comments": [
                " The severity to be echoed by the server."
              ]
            },
            {
              "paramName": "header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            },
            {
              "paramName": "other_header",
              "paramType": "TYPE_STRING",
              "comments": [
                " Optional. This field can be set to test the routing annotation on the Echo method."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "paging": [
        {
          "pagingFieldName": "responses",
          "pagingResponseType": ".google.showcase.v1beta1.EchoResponse",
          "inputInterface": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.PagedExpandResponse",
          "comments": [
            " This is similar to the Expand method but instead of returning a stream of",
            " expanded words, this method returns a paged list of expanded words.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "PagedExpand",
          "inputType": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputType": ".google.showcase.v1beta1.PagedExpandResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:pagedExpand",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The string to expand."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The number of words to returned in each page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The position of the page to be returned."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "pagingFieldName": "alphabetized",
          "pagingResponseType": ".google.showcase.v1beta1.PagedExpandLegacyMappedResponse.AlphabetizedEntry",
          "ignoreMapPagingMethod": true,
          "inputInterface": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputInterface": ".google.showcase.v1beta1.PagedExpandLegacyMappedResponse",
          "comments": [
            " This method returns a map containing lists of words that appear in the input, keyed by their",
            " initial character. The only words returned are the ones included in the current page,",
            " as determined by page_token and page_size, which both refer to the word indices in the",
            " input. This paging result consisting of a map of lists is a pattern used by some legacy",
            " APIs. New APIs should NOT use this pattern.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "PagedExpandLegacyMapped",
          "inputType": ".google.showcase.v1beta1.PagedExpandRequest",
          "outputType": ".google.showcase.v1beta1.PagedExpandLegacyMappedResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/echo:pagedExpandLegacyMapped",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "content",
              "paramType": "TYPE_STRING",
              "comments": [
                " The string to expand."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The number of words to returned in each page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The position of the page to be returned."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "hostname": "localhost",
      "port": 7469,
      "oauthScopes": [],
      "pathTemplates": [
        {
          "name": "Blueprint",
          "params": [
            "session",
            "test",
            "blueprint"
          ],
          "type": "showcase.googleapis.com/Blueprint",
          "pattern": [
            "sessions/{session}/tests/{test}/blueprints/{blueprint}"
          ]
        },
        {
          "name": "Room",
          "params": [
            "room"
          ],
          "type": "showcase.googleapis.com/Room",
          "pattern": [
            "rooms/{room}"
          ]
        },
        {
          "name": "room_blurb",
          "params": [
            "room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "room_blurbs_legacy_room_blurb",
          "params": [
            "room",
            "legacy_room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "Sequence",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/Sequence",
          "pattern": [
            "sequences/{sequence}"
          ]
        },
        {
          "name": "SequenceReport",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/SequenceReport",
          "pattern": [
            "sequences/{sequence}/sequenceReport"
          ]
        },
        {
          "name": "Session",
          "params": [
            "session"
          ],
          "type": "showcase.googleapis.com/Session",
          "pattern": [
            "sessions/{session}"
          ]
        },
        {
          "name": "Test",
          "params": [
            "session",
            "test"
          ],
          "type": "showcase.googleapis.com/Test",
          "pattern": [
            "sessions/{session}/tests/{test}"
          ]
        },
        {
          "name": "User",
          "params": [
            "user"
          ],
          "type": "showcase.googleapis.com/User",
          "pattern": [
            "users/{user}"
          ]
        },
        {
          "name": "user_profile_blurb",
          "params": [
            "user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "user_profile_blurbs_legacy_user_blurb",
          "params": [
            "user",
            "legacy_user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        }
      ]
    },
    {
      "name": "Identity",
      "method": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateUserRequest",
          "outputInterface": ".google.showcase.v1beta1.User",
          "comments": [
            " Creates a user.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateUser",
          "inputType": ".google.showcase.v1beta1.CreateUserRequest",
          "outputType": ".google.showcase.v1beta1.User",
          "options": {
            ".google.api.methodSignature": [
              "user.display_name,user.email",
              "user.display_name,user.email,user.age,user.nickname,user.enable_notifications,user.height_feet"
            ],
            ".google.api.http": {
              "post": "/v1beta1/users",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "user",
              "paramType": ".google.showcase.v1beta1.User",
              "comments": [
                " The user to create."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetUserRequest",
          "outputInterface": ".google.showcase.v1beta1.User",
          "comments": [
            " Retrieves the User with the given uri.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetUser",
          "inputType": ".google.showcase.v1beta1.GetUserRequest",
          "outputType": ".google.showcase.v1beta1.User",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=users/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested user."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.UpdateUserRequest",
          "outputInterface": ".google.showcase.v1beta1.User",
          "comments": [
            " Updates a user.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "UpdateUser",
          "inputType": ".google.showcase.v1beta1.UpdateUserRequest",
          "outputType": ".google.showcase.v1beta1.User",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/{user.name=users/*}",
              "body": "user",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "user",
              "paramType": ".google.showcase.v1beta1.User",
              "comments": [
                " The user to update."
              ]
            },
            {
              "paramName": "update_mask",
              "paramType": ".google.protobuf.FieldMask",
              "comments": [
                " The field mask to determine which fields are to be updated. If empty, the",
                " server will assume all fields are to be updated."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "user",
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteUserRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Deletes a user, their profile, and all of their authored messages.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteUser",
          "inputType": ".google.showcase.v1beta1.DeleteUserRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "delete": "/v1beta1/{name=users/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the user to delete."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "pagingFieldName": "users",
          "pagingResponseType": ".google.showcase.v1beta1.User",
          "inputInterface": ".google.showcase.v1beta1.ListUsersRequest",
          "outputInterface": ".google.showcase.v1beta1.ListUsersResponse",
          "comments": [
            " Lists all users.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListUsers",
          "inputType": ".google.showcase.v1beta1.ListUsersRequest",
          "outputType": ".google.showcase.v1beta1.ListUsersResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/users",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of users to return. Server may return fewer users",
                " than requested. If unspecified, server will pick an appropriate default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Identity\\ListUsers` method."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "options": {
        ".google.api.defaultHost": "localhost:7469"
      },
      "packageName": "google.showcase.v1beta1",
      "protoFile": "google/showcase/v1beta1/identity.proto",
      "IAMPolicyMixin": 0,
      "LocationMixin": 0,
      "comments": [
        " A simple identity service."
      ],
      "commentsMap": {
        "comments": {
          "Http:rules": {
            "paramName": "rules",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of HTTP configuration rules that apply to individual API methods.",
              "",
              " **NOTE:** All service configuration rules follow \"last one wins\" order."
            ]
          },
          "Http:fully_decode_reserved_expansion": {
            "paramName": "fully_decode_reserved_expansion",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When set to true, URL path parameters will be fully URI-decoded except in",
              " cases of single segment matches in reserved expansion, where \"%2F\" will be",
              " left encoded.",
              "",
              " The default behavior is to not decode RFC 6570 reserved characters in multi",
              " segment matches."
            ]
          },
          "HttpRule:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " Selects a method to which this rule applies.",
              "",
              " Refer to [selector][google.api.DocumentationRule.selector] for syntax",
              " details."
            ]
          },
          "HttpRule:get": {
            "paramName": "get",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP GET. Used for listing and getting information about",
              " resources."
            ]
          },
          "HttpRule:put": {
            "paramName": "put",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PUT. Used for replacing a resource."
            ]
          },
          "HttpRule:post": {
            "paramName": "post",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP POST. Used for creating a resource or performing an action."
            ]
          },
          "HttpRule:delete": {
            "paramName": "delete",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP DELETE. Used for deleting a resource."
            ]
          },
          "HttpRule:patch": {
            "paramName": "patch",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PATCH. Used for updating a resource."
            ]
          },
          "HttpRule:custom": {
            "paramName": "custom",
            "paramType": ".google.api.CustomHttpPattern",
            "comments": [
              " The custom pattern is used for specifying an HTTP method that is not",
              " included in the `pattern` field, such as HEAD, or \"*\" to leave the",
              " HTTP method unspecified for this rule. The wild-card rule is useful",
              " for services that provide content to Web (HTML) clients."
            ]
          },
          "HttpRule:body": {
            "paramName": "body",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the request field whose value is mapped to the HTTP request",
              " body, or `*` for mapping all request fields not captured by the path",
              " pattern to the HTTP body, or omitted for not having any HTTP request body.",
              "",
              " NOTE: the referred field must be present at the top-level of the request",
              " message type."
            ]
          },
          "HttpRule:response_body": {
            "paramName": "response_body",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The name of the response field whose value is mapped to the HTTP",
              " response body. When omitted, the entire response message will be used",
              " as the HTTP response body.",
              "",
              " NOTE: The referred field must be present at the top-level of the response",
              " message type."
            ]
          },
          "HttpRule:additional_bindings": {
            "paramName": "additional_bindings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional HTTP bindings for the selector. Nested bindings must",
              " not contain an `additional_bindings` field themselves (that is,",
              " the nesting may only be one level deep)."
            ]
          },
          "CustomHttpPattern:kind": {
            "paramName": "kind",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of this custom HTTP verb."
            ]
          },
          "CustomHttpPattern:path": {
            "paramName": "path",
            "paramType": "TYPE_STRING",
            "comments": [
              " The path matched by this custom verb."
            ]
          },
          "FileDescriptorSet:file": {
            "paramName": "file",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:package": {
            "paramName": "package",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:dependency": {
            "paramName": "dependency",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Names of files imported by this file."
            ]
          },
          "FileDescriptorProto:public_dependency": {
            "paramName": "public_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the public imported files in the dependency list above."
            ]
          },
          "FileDescriptorProto:weak_dependency": {
            "paramName": "weak_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the weak imported files in the dependency list.",
              " For Google-internal migration only. Do not use."
            ]
          },
          "FileDescriptorProto:message_type": {
            "paramName": "message_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " All top-level definitions in this file."
            ]
          },
          "FileDescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:service": {
            "paramName": "service",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FileOptions",
            "comments": []
          },
          "FileDescriptorProto:source_code_info": {
            "paramName": "source_code_info",
            "paramType": ".google.protobuf.SourceCodeInfo",
            "comments": [
              " This field contains optional information about the original source code.",
              " You may safely remove this entire field without harming runtime",
              " functionality of the descriptors -- the information is needed only by",
              " development tools."
            ]
          },
          "FileDescriptorProto:syntax": {
            "paramName": "syntax",
            "paramType": "TYPE_STRING",
            "comments": [
              " The syntax of the proto file.",
              " The supported values are \"proto2\", \"proto3\", and \"editions\".",
              "",
              " If `edition` is present, this value must be \"editions\"."
            ]
          },
          "FileDescriptorProto:edition": {
            "paramName": "edition",
            "paramType": "TYPE_STRING",
            "comments": [
              " The edition of the proto file, which is an opaque string."
            ]
          },
          "DescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "DescriptorProto:field": {
            "paramName": "field",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:nested_type": {
            "paramName": "nested_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension_range": {
            "paramName": "extension_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:oneof_decl": {
            "paramName": "oneof_decl",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MessageOptions",
            "comments": []
          },
          "DescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved field names, which may not be used by fields in the same message.",
              " A given name may only be reserved once."
            ]
          },
          "ExtensionRangeOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ExtensionRangeOptions:declaration": {
            "paramName": "declaration",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " For external users: DO NOT USE. We are in the process of open sourcing",
              " extension declaration and executing internal cleanups before it can be",
              " used externally."
            ]
          },
          "ExtensionRangeOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ExtensionRangeOptions:verification": {
            "paramName": "verification",
            "paramType": ".google.protobuf.ExtensionRangeOptions.VerificationState",
            "comments": [
              " The verification state of the range.",
              " TODO(b/278783756): flip the default to DECLARATION once all empty ranges",
              " are marked as UNVERIFIED."
            ]
          },
          "FieldDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FieldDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "FieldDescriptorProto:label": {
            "paramName": "label",
            "paramType": ".google.protobuf.FieldDescriptorProto.Label",
            "comments": []
          },
          "FieldDescriptorProto:type": {
            "paramName": "type",
            "paramType": ".google.protobuf.FieldDescriptorProto.Type",
            "comments": [
              " If type_name is set, this need not be set.  If both this and type_name",
              " are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
            ]
          },
          "FieldDescriptorProto:type_name": {
            "paramName": "type_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " For message and enum types, this is the name of the type.  If the name",
              " starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping",
              " rules are used to find the type (i.e. first the nested types within this",
              " message are searched, then within the parent, on up to the root",
              " namespace)."
            ]
          },
          "FieldDescriptorProto:extendee": {
            "paramName": "extendee",
            "paramType": "TYPE_STRING",
            "comments": [
              " For extensions, this is the name of the type being extended.  It is",
              " resolved in the same manner as type_name."
            ]
          },
          "FieldDescriptorProto:default_value": {
            "paramName": "default_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " For numeric types, contains the original text representation of the value.",
              " For booleans, \"true\" or \"false\".",
              " For strings, contains the default text contents (not escaped in any way).",
              " For bytes, contains the C escaped value.  All bytes >= 128 are escaped."
            ]
          },
          "FieldDescriptorProto:oneof_index": {
            "paramName": "oneof_index",
            "paramType": "TYPE_INT32",
            "comments": [
              " If set, gives the index of a oneof in the containing type's oneof_decl",
              " list.  This field is a member of that oneof."
            ]
          },
          "FieldDescriptorProto:json_name": {
            "paramName": "json_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " JSON name of this field. The value is set by protocol compiler. If the",
              " user has set a \"json_name\" option on this field, that option's value",
              " will be used. Otherwise, it's deduced from the field's name by converting",
              " it to camelCase."
            ]
          },
          "FieldDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FieldOptions",
            "comments": []
          },
          "FieldDescriptorProto:proto3_optional": {
            "paramName": "proto3_optional",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, this is a proto3 \"optional\". When a proto3 field is optional, it",
              " tracks presence regardless of field type.",
              "",
              " When proto3_optional is true, this field must be belong to a oneof to",
              " signal to old proto3 clients that presence is tracked for this field. This",
              " oneof is known as a \"synthetic\" oneof, and this field must be its sole",
              " member (each proto3 optional field gets its own synthetic oneof). Synthetic",
              " oneofs exist in the descriptor only, and do not generate any API. Synthetic",
              " oneofs must be ordered after all \"real\" oneofs.",
              "",
              " For message fields, proto3_optional doesn't create any semantic change,",
              " since non-repeated message fields always track presence. However it still",
              " indicates the semantic detail of whether the user wrote \"optional\" or not.",
              " This can be useful for round-tripping the .proto file. For consistency we",
              " give message fields a synthetic oneof also, even though it is not required",
              " to track presence. This is especially important because the parser can't",
              " tell if a field is a message or an enum, so it must always create a",
              " synthetic oneof.",
              "",
              " Proto2 optional fields do not set this flag, because they already indicate",
              " optional with `LABEL_OPTIONAL`."
            ]
          },
          "OneofDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "OneofDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.OneofOptions",
            "comments": []
          },
          "EnumDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumDescriptorProto:value": {
            "paramName": "value",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "EnumDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumOptions",
            "comments": []
          },
          "EnumDescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Range of reserved numeric values. Reserved numeric values may not be used",
              " by enum values in the same enum declaration. Reserved ranges may not",
              " overlap."
            ]
          },
          "EnumDescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved enum value names, which may not be reused. A given name may only",
              " be reserved once."
            ]
          },
          "EnumValueDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumValueDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "EnumValueDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumValueOptions",
            "comments": []
          },
          "ServiceDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ServiceDescriptorProto:method": {
            "paramName": "method",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ServiceDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.ServiceOptions",
            "comments": []
          },
          "MethodDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:input_type": {
            "paramName": "input_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Input and output type names.  These are resolved in the same way as",
              " FieldDescriptorProto.type_name, but must refer to a message type."
            ]
          },
          "MethodDescriptorProto:output_type": {
            "paramName": "output_type",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MethodOptions",
            "comments": []
          },
          "MethodDescriptorProto:client_streaming": {
            "paramName": "client_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if client streams multiple client messages"
            ]
          },
          "MethodDescriptorProto:server_streaming": {
            "paramName": "server_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if server streams multiple server messages"
            ]
          },
          "FileOptions:java_package": {
            "paramName": "java_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Java package where classes generated from this .proto will be",
              " placed.  By default, the proto package is used, but this is often",
              " inappropriate because proto packages do not normally start with backwards",
              " domain names."
            ]
          },
          "FileOptions:java_outer_classname": {
            "paramName": "java_outer_classname",
            "paramType": "TYPE_STRING",
            "comments": [
              " Controls the name of the wrapper Java class generated for the .proto file.",
              " That class will always contain the .proto file's getDescriptor() method as",
              " well as any top-level extensions defined in the .proto file.",
              " If java_multiple_files is disabled, then all the other classes from the",
              " .proto file will be nested inside the single wrapper outer class."
            ]
          },
          "FileOptions:java_multiple_files": {
            "paramName": "java_multiple_files",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If enabled, then the Java code generator will generate a separate .java",
              " file for each top-level message, enum, and service defined in the .proto",
              " file.  Thus, these types will *not* be nested inside the wrapper class",
              " named by java_outer_classname.  However, the wrapper class will still be",
              " generated to contain the file's getDescriptor() method as well as any",
              " top-level extensions defined in the file."
            ]
          },
          "FileOptions:java_generate_equals_and_hash": {
            "paramName": "java_generate_equals_and_hash",
            "paramType": "TYPE_BOOL",
            "comments": [
              " This option does nothing."
            ]
          },
          "FileOptions:java_string_check_utf8": {
            "paramName": "java_string_check_utf8",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If set true, then the Java2 code generator will generate code that",
              " throws an exception whenever an attempt is made to assign a non-UTF-8",
              " byte sequence to a string field.",
              " Message reflection will do the same.",
              " However, an extension field still accepts non-UTF-8 byte sequences.",
              " This option has no effect on when used with the lite runtime."
            ]
          },
          "FileOptions:optimize_for": {
            "paramName": "optimize_for",
            "paramType": ".google.protobuf.FileOptions.OptimizeMode",
            "comments": []
          },
          "FileOptions:go_package": {
            "paramName": "go_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Go package where structs generated from this .proto will be",
              " placed. If omitted, the Go package will be derived from the following:",
              "   - The basename of the package import path, if provided.",
              "   - Otherwise, the package statement in the .proto file, if present.",
              "   - Otherwise, the basename of the .proto file, without extension."
            ]
          },
          "FileOptions:cc_generic_services": {
            "paramName": "cc_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should generic services be generated in each language?  \"Generic\" services",
              " are not specific to any particular RPC system.  They are generated by the",
              " main code generators in each language (without additional plugins).",
              " Generic services were the only kind of service generation supported by",
              " early versions of google.protobuf.",
              "",
              " Generic services are now considered deprecated in favor of using plugins",
              " that generate code specific to your particular RPC system.  Therefore,",
              " these default to false.  Old code which depends on generic services should",
              " explicitly set them to true."
            ]
          },
          "FileOptions:java_generic_services": {
            "paramName": "java_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:py_generic_services": {
            "paramName": "py_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:php_generic_services": {
            "paramName": "php_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this file deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for everything in the file, or it will be completely ignored; in the very",
              " least, this is a formalization for deprecating files."
            ]
          },
          "FileOptions:cc_enable_arenas": {
            "paramName": "cc_enable_arenas",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the use of arenas for the proto messages in this file. This applies",
              " only to generated classes for C++."
            ]
          },
          "FileOptions:objc_class_prefix": {
            "paramName": "objc_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the objective c class prefix which is prepended to all objective c",
              " generated classes from this .proto. There is no default."
            ]
          },
          "FileOptions:csharp_namespace": {
            "paramName": "csharp_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Namespace for generated classes; defaults to the package."
            ]
          },
          "FileOptions:swift_prefix": {
            "paramName": "swift_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " By default Swift generators will take the proto package and CamelCase it",
              " replacing '.' with underscore and use that to prefix the types/symbols",
              " defined. When this options is provided, they will use this value instead",
              " to prefix the types/symbols defined."
            ]
          },
          "FileOptions:php_class_prefix": {
            "paramName": "php_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the php class prefix which is prepended to all php generated classes",
              " from this .proto. Default is empty."
            ]
          },
          "FileOptions:php_namespace": {
            "paramName": "php_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated classes. Default",
              " is empty. When this option is empty, the package name will be used for",
              " determining the namespace."
            ]
          },
          "FileOptions:php_metadata_namespace": {
            "paramName": "php_metadata_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated metadata classes.",
              " Default is empty. When this option is empty, the proto file name will be",
              " used for determining the namespace."
            ]
          },
          "FileOptions:ruby_package": {
            "paramName": "ruby_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the package of ruby generated classes. Default",
              " is empty. When this option is not set, the package name will be used for",
              " determining the ruby package."
            ]
          },
          "FileOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FileOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here.",
              " See the documentation for the \"Options\" section above."
            ]
          },
          "MessageOptions:message_set_wire_format": {
            "paramName": "message_set_wire_format",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set true to use the old proto1 MessageSet wire format for extensions.",
              " This is provided for backwards-compatibility with the MessageSet wire",
              " format.  You should not use this for any other reason:  It's less",
              " efficient, has fewer features, and is more complicated.",
              "",
              " The message must be defined exactly as follows:",
              "   message Foo {",
              "     option message_set_wire_format = true;",
              "     extensions 4 to max;",
              "   }",
              " Note that the message cannot have any defined fields; MessageSets only",
              " have extensions.",
              "",
              " All extensions of your type must be singular messages; e.g. they cannot",
              " be int32s, enums, or repeated messages.",
              "",
              " Because this is an option, the above two restrictions are not enforced by",
              " the protocol compiler."
            ]
          },
          "MessageOptions:no_standard_descriptor_accessor": {
            "paramName": "no_standard_descriptor_accessor",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Disables the generation of the standard \"descriptor()\" accessor, which can",
              " conflict with a field of the same name.  This is meant to make migration",
              " from proto1 easier; new code should avoid fields named \"descriptor\"."
            ]
          },
          "MessageOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this message deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the message, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating messages."
            ]
          },
          "MessageOptions:map_entry": {
            "paramName": "map_entry",
            "paramType": "TYPE_BOOL",
            "comments": [
              " NOTE: Do not set the option in .proto files. Always use the maps syntax",
              " instead. The option should only be implicitly set by the proto compiler",
              " parser.",
              "",
              " Whether the message is an automatically generated map entry type for the",
              " maps field.",
              "",
              " For maps fields:",
              "     map<KeyType, ValueType> map_field = 1;",
              " The parsed descriptor looks like:",
              "     message MapFieldEntry {",
              "         option map_entry = true;",
              "         optional KeyType key = 1;",
              "         optional ValueType value = 2;",
              "     }",
              "     repeated MapFieldEntry map_field = 1;",
              "",
              " Implementations may choose not to generate the map_entry=true message, but",
              " use a native map in the target language to hold the keys and values.",
              " The reflection APIs in such implementations still need to work as",
              " if the field is a repeated message field."
            ]
          },
          "MessageOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              "",
              " This should only be used as a temporary measure against broken builds due",
              " to the change in behavior for JSON field name conflicts.",
              "",
              " TODO(b/261750190) This is legacy behavior we plan to remove once downstream",
              " teams have had time to migrate."
            ]
          },
          "MessageOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MessageOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "FieldOptions:ctype": {
            "paramName": "ctype",
            "paramType": ".google.protobuf.FieldOptions.CType",
            "comments": [
              " The ctype option instructs the C++ code generator to use a different",
              " representation of the field than it normally would.  See the specific",
              " options below.  This option is only implemented to support use of",
              " [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of",
              " type \"bytes\" in the open source release -- sorry, we'll try to include",
              " other types in a future version!"
            ]
          },
          "FieldOptions:packed": {
            "paramName": "packed",
            "paramType": "TYPE_BOOL",
            "comments": [
              " The packed option can be enabled for repeated primitive fields to enable",
              " a more efficient representation on the wire. Rather than repeatedly",
              " writing the tag and type for each element, the entire array is encoded as",
              " a single length-delimited blob. In proto3, only explicit setting it to",
              " false will avoid using packed encoding."
            ]
          },
          "FieldOptions:jstype": {
            "paramName": "jstype",
            "paramType": ".google.protobuf.FieldOptions.JSType",
            "comments": [
              " The jstype option determines the JavaScript type used for values of the",
              " field.  The option is permitted only for 64 bit integral and fixed types",
              " (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING",
              " is represented as JavaScript string, which avoids loss of precision that",
              " can happen when a large value is converted to a floating point JavaScript.",
              " Specifying JS_NUMBER for the jstype causes the generated JavaScript code to",
              " use the JavaScript \"number\" type.  The behavior of the default option",
              " JS_NORMAL is implementation dependent.",
              "",
              " This option is an enum to permit additional types to be added, e.g.",
              " goog.math.Integer."
            ]
          },
          "FieldOptions:lazy": {
            "paramName": "lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should this field be parsed lazily?  Lazy applies only to message-type",
              " fields.  It means that when the outer message is initially parsed, the",
              " inner message's contents will not be parsed but instead stored in encoded",
              " form.  The inner message will actually be parsed when it is first accessed.",
              "",
              " This is only a hint.  Implementations are free to choose whether to use",
              " eager or lazy parsing regardless of the value of this option.  However,",
              " setting this option true suggests that the protocol author believes that",
              " using lazy parsing on this field is worth the additional bookkeeping",
              " overhead typically needed to implement it.",
              "",
              " This option does not affect the public interface of any generated code;",
              " all method signatures remain the same.  Furthermore, thread-safety of the",
              " interface is not affected by this option; const methods remain safe to",
              " call from multiple threads concurrently, while non-const methods continue",
              " to require exclusive access.",
              "",
              " Note that implementations may choose not to check required fields within",
              " a lazy sub-message.  That is, calling IsInitialized() on the outer message",
              " may return true even if the inner message has missing required fields.",
              " This is necessary because otherwise the inner message would have to be",
              " parsed in order to perform the check, defeating the purpose of lazy",
              " parsing.  An implementation which chooses not to check required fields",
              " must be consistent about it.  That is, for any particular sub-message, the",
              " implementation must either *always* check its required fields, or *never*",
              " check its required fields, regardless of whether or not the message has",
              " been parsed.",
              "",
              " As of May 2022, lazy verifies the contents of the byte stream during",
              " parsing.  An invalid byte stream will cause the overall parsing to fail."
            ]
          },
          "FieldOptions:unverified_lazy": {
            "paramName": "unverified_lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " unverified_lazy does no correctness checks on the byte stream. This should",
              " only be used where lazy with verification is prohibitive for performance",
              " reasons."
            ]
          },
          "FieldOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this field deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for accessors, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating fields."
            ]
          },
          "FieldOptions:weak": {
            "paramName": "weak",
            "paramType": "TYPE_BOOL",
            "comments": [
              " For Google-internal migration only. Do not use."
            ]
          },
          "FieldOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that the field value should not be printed out when using debug",
              " formats, e.g. when the field contains sensitive credentials."
            ]
          },
          "FieldOptions:retention": {
            "paramName": "retention",
            "paramType": ".google.protobuf.FieldOptions.OptionRetention",
            "comments": []
          },
          "FieldOptions:targets": {
            "paramName": "targets",
            "paramType": "TYPE_ENUM[]",
            "comments": []
          },
          "FieldOptions:edition_defaults": {
            "paramName": "edition_defaults",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FieldOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FieldOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "OneofOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "OneofOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumOptions:allow_alias": {
            "paramName": "allow_alias",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set this option to true to allow mapping different tag names to the same",
              " value."
            ]
          },
          "EnumOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating enums."
            ]
          },
          "EnumOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              " TODO(b/261750190) Remove this legacy behavior once downstream teams have",
              " had time to migrate."
            ]
          },
          "EnumOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumValueOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum value deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum value, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating enum values."
            ]
          },
          "EnumValueOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumValueOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that fields annotated with this enum value should not be printed",
              " out when using debug formats, e.g. when the field contains sensitive",
              " credentials."
            ]
          },
          "EnumValueOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ServiceOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ServiceOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this service deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the service, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating services."
            ]
          },
          "ServiceOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "MethodOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this method deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the method, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating methods."
            ]
          },
          "MethodOptions:idempotency_level": {
            "paramName": "idempotency_level",
            "paramType": ".google.protobuf.MethodOptions.IdempotencyLevel",
            "comments": []
          },
          "MethodOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MethodOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "UninterpretedOption:name": {
            "paramName": "name",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "UninterpretedOption:identifier_value": {
            "paramName": "identifier_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of the uninterpreted option, in whatever type the tokenizer",
              " identified it as during parsing. Exactly one of these should be set."
            ]
          },
          "UninterpretedOption:positive_int_value": {
            "paramName": "positive_int_value",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "UninterpretedOption:negative_int_value": {
            "paramName": "negative_int_value",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "UninterpretedOption:double_value": {
            "paramName": "double_value",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "UninterpretedOption:string_value": {
            "paramName": "string_value",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "UninterpretedOption:aggregate_value": {
            "paramName": "aggregate_value",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FeatureSet:field_presence": {
            "paramName": "field_presence",
            "paramType": ".google.protobuf.FeatureSet.FieldPresence",
            "comments": []
          },
          "FeatureSet:enum_type": {
            "paramName": "enum_type",
            "paramType": ".google.protobuf.FeatureSet.EnumType",
            "comments": []
          },
          "FeatureSet:repeated_field_encoding": {
            "paramName": "repeated_field_encoding",
            "paramType": ".google.protobuf.FeatureSet.RepeatedFieldEncoding",
            "comments": []
          },
          "FeatureSet:string_field_validation": {
            "paramName": "string_field_validation",
            "paramType": ".google.protobuf.FeatureSet.StringFieldValidation",
            "comments": []
          },
          "FeatureSet:message_encoding": {
            "paramName": "message_encoding",
            "paramType": ".google.protobuf.FeatureSet.MessageEncoding",
            "comments": []
          },
          "FeatureSet:json_format": {
            "paramName": "json_format",
            "paramType": ".google.protobuf.FeatureSet.JsonFormat",
            "comments": []
          },
          "FeatureSet:raw_features": {
            "paramName": "raw_features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": []
          },
          "SourceCodeInfo:location": {
            "paramName": "location",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A Location identifies a piece of source code in a .proto file which",
              " corresponds to a particular definition.  This information is intended",
              " to be useful to IDEs, code indexers, documentation generators, and similar",
              " tools.",
              "",
              " For example, say we have a file like:",
              "   message Foo {",
              "     optional string foo = 1;",
              "   }",
              " Let's look at just the field definition:",
              "   optional string foo = 1;",
              "   ^       ^^     ^^  ^  ^^^",
              "   a       bc     de  f  ghi",
              " We have the following locations:",
              "   span   path               represents",
              "   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.",
              "   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).",
              "   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).",
              "   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).",
              "   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).",
              "",
              " Notes:",
              " - A location may refer to a repeated field itself (i.e. not to any",
              "   particular index within it).  This is used whenever a set of elements are",
              "   logically enclosed in a single code segment.  For example, an entire",
              "   extend block (possibly containing multiple extension definitions) will",
              "   have an outer location whose path refers to the \"extensions\" repeated",
              "   field without an index.",
              " - Multiple locations may have the same path.  This happens when a single",
              "   logical declaration is spread out across multiple places.  The most",
              "   obvious example is the \"extend\" block again -- there may be multiple",
              "   extend blocks in the same scope, each of which will have the same path.",
              " - A location's span is not always a subset of its parent's span.  For",
              "   example, the \"extendee\" of an extension declaration appears at the",
              "   beginning of the \"extend\" block and is shared by all extensions within",
              "   the block.",
              " - Just because a location's span is a subset of some other location's span",
              "   does not mean that it is a descendant.  For example, a \"group\" defines",
              "   both a type and a field in a single declaration.  Thus, the locations",
              "   corresponding to the type and field and their components will overlap.",
              " - Code which tries to interpret locations should probably be designed to",
              "   ignore those that it doesn't understand, as more types of locations could",
              "   be recorded in the future."
            ]
          },
          "GeneratedCodeInfo:annotation": {
            "paramName": "annotation",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " An Annotation connects some span of text in generated code to an element",
              " of its generating .proto file."
            ]
          },
          "Duration:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Signed seconds of the span of time. Must be from -315,576,000,000",
              " to +315,576,000,000 inclusive. Note: these bounds are computed from:",
              " 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
            ]
          },
          "Duration:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Signed fractions of a second at nanosecond resolution of the span",
              " of time. Durations less than one second are represented with a 0",
              " `seconds` field and a positive or negative `nanos` field. For durations",
              " of one second or more, a non-zero value for the `nanos` field must be",
              " of the same sign as the `seconds` field. Must be from -999,999,999",
              " to +999,999,999 inclusive."
            ]
          },
          "CommonLanguageSettings:reference_docs_uri": {
            "paramName": "reference_docs_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to automatically generated reference documentation.  Example:",
              " https://cloud.google.com/nodejs/docs/reference/asset/latest"
            ]
          },
          "CommonLanguageSettings:destinations": {
            "paramName": "destinations",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " The destination where API teams want this client library to be published."
            ]
          },
          "ClientLibrarySettings:version": {
            "paramName": "version",
            "paramType": "TYPE_STRING",
            "comments": [
              " Version of the API to apply these settings to. This is the full protobuf",
              " package for the API, ending in the version element.",
              " Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\"."
            ]
          },
          "ClientLibrarySettings:launch_stage": {
            "paramName": "launch_stage",
            "paramType": ".google.api.LaunchStage",
            "comments": [
              " Launch stage of this version of the API."
            ]
          },
          "ClientLibrarySettings:rest_numeric_enums": {
            "paramName": "rest_numeric_enums",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When using transport=rest, the client request will encode enums as",
              " numbers rather than strings."
            ]
          },
          "ClientLibrarySettings:java_settings": {
            "paramName": "java_settings",
            "paramType": ".google.api.JavaSettings",
            "comments": [
              " Settings for legacy Java features, supported in the Service YAML."
            ]
          },
          "ClientLibrarySettings:cpp_settings": {
            "paramName": "cpp_settings",
            "paramType": ".google.api.CppSettings",
            "comments": [
              " Settings for C++ client libraries."
            ]
          },
          "ClientLibrarySettings:php_settings": {
            "paramName": "php_settings",
            "paramType": ".google.api.PhpSettings",
            "comments": [
              " Settings for PHP client libraries."
            ]
          },
          "ClientLibrarySettings:python_settings": {
            "paramName": "python_settings",
            "paramType": ".google.api.PythonSettings",
            "comments": [
              " Settings for Python client libraries."
            ]
          },
          "ClientLibrarySettings:node_settings": {
            "paramName": "node_settings",
            "paramType": ".google.api.NodeSettings",
            "comments": [
              " Settings for Node client libraries."
            ]
          },
          "ClientLibrarySettings:dotnet_settings": {
            "paramName": "dotnet_settings",
            "paramType": ".google.api.DotnetSettings",
            "comments": [
              " Settings for .NET client libraries."
            ]
          },
          "ClientLibrarySettings:ruby_settings": {
            "paramName": "ruby_settings",
            "paramType": ".google.api.RubySettings",
            "comments": [
              " Settings for Ruby client libraries."
            ]
          },
          "ClientLibrarySettings:go_settings": {
            "paramName": "go_settings",
            "paramType": ".google.api.GoSettings",
            "comments": [
              " Settings for Go client libraries."
            ]
          },
          "Publishing:method_settings": {
            "paramName": "method_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of API method settings, e.g. the behavior for methods that use the",
              " long-running operation pattern."
            ]
          },
          "Publishing:new_issue_uri": {
            "paramName": "new_issue_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to a *public* URI where users can report issues.  Example:",
              " https://issuetracker.google.com/issues/new?component=190865&template=1161103"
            ]
          },
          "Publishing:documentation_uri": {
            "paramName": "documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to product home page.  Example:",
              " https://cloud.google.com/asset-inventory/docs/overview"
            ]
          },
          "Publishing:api_short_name": {
            "paramName": "api_short_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " Used as a tracking tag when collecting data about the APIs developer",
              " relations artifacts like docs, packages delivered to package managers,",
              " etc.  Example: \"speech\"."
            ]
          },
          "Publishing:github_label": {
            "paramName": "github_label",
            "paramType": "TYPE_STRING",
            "comments": [
              " GitHub label to apply to issues and pull requests opened for this API."
            ]
          },
          "Publishing:codeowner_github_teams": {
            "paramName": "codeowner_github_teams",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " GitHub teams to be added to CODEOWNERS in the directory in GitHub",
              " containing source code for the client libraries for this API."
            ]
          },
          "Publishing:doc_tag_prefix": {
            "paramName": "doc_tag_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " A prefix used in sample code when demarking regions to be included in",
              " documentation."
            ]
          },
          "Publishing:organization": {
            "paramName": "organization",
            "paramType": ".google.api.ClientLibraryOrganization",
            "comments": [
              " For whom the client library is being published."
            ]
          },
          "Publishing:library_settings": {
            "paramName": "library_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Client library settings.  If the same version string appears multiple",
              " times in this list, then the last one wins.  Settings from earlier",
              " settings with the same version string are discarded."
            ]
          },
          "Publishing:proto_reference_documentation_uri": {
            "paramName": "proto_reference_documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional link to proto reference documentation.  Example:",
              " https://cloud.google.com/pubsub/lite/docs/reference/rpc"
            ]
          },
          "JavaSettings:library_package": {
            "paramName": "library_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " The package name to use in Java. Clobbers the java_package option",
              " set in the protobuf. This should be used **only** by APIs",
              " who have already set the language_settings.java.package_name\" field",
              " in gapic.yaml. API teams should use the protobuf java_package option",
              " where possible.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      library_package: com.google.cloud.pubsub.v1"
            ]
          },
          "JavaSettings:service_class_names": {
            "paramName": "service_class_names",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Configure the Java class name to use instead of the service's for its",
              " corresponding generated GAPIC client. Keys are fully-qualified",
              " service names as they appear in the protobuf (including the full",
              " the language_settings.java.interface_names\" field in gapic.yaml. API",
              " teams should otherwise use the service name as it appears in the",
              " protobuf.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      service_class_names:",
              "        - google.pubsub.v1.Publisher: TopicAdmin",
              "        - google.pubsub.v1.Subscriber: SubscriptionAdmin"
            ]
          },
          "JavaSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "CppSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PhpSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PythonSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "NodeSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:renamed_services": {
            "paramName": "renamed_services",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from original service names to renamed versions.",
              " This is used when the default generated types",
              " would cause a naming conflict. (Neither name is",
              " fully-qualified.)",
              " Example: Subscriber to SubscriberServiceApi."
            ]
          },
          "DotnetSettings:renamed_resources": {
            "paramName": "renamed_resources",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from full resource types to the effective short name",
              " for the resource. This is used when otherwise resource",
              " named from different services would cause naming collisions.",
              " Example entry:",
              " \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\""
            ]
          },
          "DotnetSettings:ignored_resources": {
            "paramName": "ignored_resources",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " List of full resource types to ignore during generation.",
              " This is typically used for API-specific Location resources,",
              " which should be handled by the generator as if they were actually",
              " the common Location resources.",
              " Example entry: \"documentai.googleapis.com/Location\""
            ]
          },
          "DotnetSettings:forced_namespace_aliases": {
            "paramName": "forced_namespace_aliases",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Namespaces which must be aliased in snippets due to",
              " a known (but non-generator-predictable) naming collision"
            ]
          },
          "DotnetSettings:handwritten_signatures": {
            "paramName": "handwritten_signatures",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Method signatures (in the form \"service.method(signature)\")",
              " which are provided separately, so shouldn't be generated.",
              " Snippets *calling* these methods are still generated, however."
            ]
          },
          "RubySettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "GoSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "MethodSettings:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " The fully qualified name of the method, for which the options below apply.",
              " This is used to find the method to apply the options."
            ]
          },
          "MethodSettings:long_running": {
            "paramName": "long_running",
            "paramType": ".google.api.MethodSettings.LongRunning",
            "comments": [
              " Describes settings to use for long-running operations when generating",
              " API methods for RPCs. Complements RPCs that use the annotations in",
              " google/longrunning/operations.proto.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    method_settings:",
              "      - selector: google.cloud.speech.v2.Speech.BatchRecognize",
              "        long_running:",
              "          initial_poll_delay:",
              "            seconds: 60 # 1 minute",
              "          poll_delay_multiplier: 1.5",
              "          max_poll_delay:",
              "            seconds: 360 # 6 minutes",
              "          total_poll_timeout:",
              "             seconds: 54000 # 90 minutes"
            ]
          },
          "Compliance": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
              " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
              " correctly."
            ]
          },
          "Compliance:RepeatDataBody": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the entire request object in the REST body.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyInfo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the a message-type field in the REST body. Per AIP-127, only",
              " top-level, non-repeated fields can be sent this way.",
              ""
            ]
          },
          "Compliance:RepeatDataQuery": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending all request fields as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataSimplePath": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending some parameters as \"simple\" path variables (i.e., of the form",
              " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataPathResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a path resource.",
              ""
            ]
          },
          "Compliance:RepeatDataPathTrailingResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a trailing resource.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPut": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PUT method.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPatch": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PATCH method.",
              ""
            ]
          },
          "Compliance:GetEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
              " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
              " response from this RPC as the request to VerifyEnum()",
              "",
              " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
              " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "Compliance:VerifyEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
              " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
              " with the same EnumResponse; otherwise, the RPC errors.",
              "",
              " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
              " although they are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "RepeatRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "RepeatRequest:info": {
            "paramName": "info",
            "paramType": ".google.showcase.v1beta1.ComplianceData",
            "comments": []
          },
          "RepeatRequest:server_verify": {
            "paramName": "server_verify",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, the server will verify that the received request matches",
              " the request with the same name in the compliance test suite."
            ]
          },
          "RepeatRequest:intended_binding_uri": {
            "paramName": "intended_binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template this request is expected to be bound to server-side."
            ]
          },
          "RepeatRequest:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": [
              " Some top level fields, to test that these are encoded correctly",
              " in query params."
            ]
          },
          "RepeatRequest:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatRequest:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "RepeatRequest:p_int64": {
            "paramName": "p_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.RepeatRequest",
            "comments": []
          },
          "RepeatResponse:binding_uri": {
            "paramName": "binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template the request was bound to server-side."
            ]
          },
          "ComplianceSuite:group": {
            "paramName": "group",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceGroup:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceGroup:rpcs": {
            "paramName": "rpcs",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "ComplianceGroup:requests": {
            "paramName": "requests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceData:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:f_sint32": {
            "paramName": "f_sint32",
            "paramType": "TYPE_SINT32",
            "comments": []
          },
          "ComplianceData:f_sfixed32": {
            "paramName": "f_sfixed32",
            "paramType": "TYPE_SFIXED32",
            "comments": []
          },
          "ComplianceData:f_uint32": {
            "paramName": "f_uint32",
            "paramType": "TYPE_UINT32",
            "comments": []
          },
          "ComplianceData:f_fixed32": {
            "paramName": "f_fixed32",
            "paramType": "TYPE_FIXED32",
            "comments": []
          },
          "ComplianceData:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "ComplianceData:f_sint64": {
            "paramName": "f_sint64",
            "paramType": "TYPE_SINT64",
            "comments": []
          },
          "ComplianceData:f_sfixed64": {
            "paramName": "f_sfixed64",
            "paramType": "TYPE_SFIXED64",
            "comments": []
          },
          "ComplianceData:f_uint64": {
            "paramName": "f_uint64",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "ComplianceData:f_fixed64": {
            "paramName": "f_fixed64",
            "paramType": "TYPE_FIXED64",
            "comments": []
          },
          "ComplianceData:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceData:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:f_bytes": {
            "paramName": "f_bytes",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "ComplianceData:f_kingdom": {
            "paramName": "f_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceData:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:p_kingdom": {
            "paramName": "p_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceDataChild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:f_continent": {
            "paramName": "f_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataChild:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:p_float": {
            "paramName": "p_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:p_continent": {
            "paramName": "p_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataGrandchild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataGrandchild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataGrandchild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "EnumRequest:unknown_enum": {
            "paramName": "unknown_enum",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
            ]
          },
          "EnumResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.EnumRequest",
            "comments": [
              " The original request for a known or unknown enum from the server."
            ]
          },
          "EnumResponse:continent": {
            "paramName": "continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": [
              " The actual enum the server provided."
            ]
          },
          "RoutingRule:routing_parameters": {
            "paramName": "routing_parameters",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A collection of Routing Parameter specifications.",
              " **NOTE:** If multiple Routing Parameters describe the same key",
              " (via the `path_template` field or via the `field` field when",
              " `path_template` is not provided), \"last one wins\" rule",
              " determines which Parameter gets used.",
              " See the examples for more details."
            ]
          },
          "RoutingParameter:field": {
            "paramName": "field",
            "paramType": "TYPE_STRING",
            "comments": [
              " A request field to extract the header key-value pair from."
            ]
          },
          "RoutingParameter:path_template": {
            "paramName": "path_template",
            "paramType": "TYPE_STRING",
            "comments": [
              " A pattern matching the key-value field. Optional.",
              " If not specified, the whole field specified in the `field` field will be",
              " taken as value, and its name used as key. If specified, it MUST contain",
              " exactly one named segment (along with any number of unnamed segments) The",
              " pattern will be matched over the field specified in the `field` field, then",
              " if the match is successful:",
              " - the name of the single named segment will be used as a header name,",
              " - the match value of the segment will be used as a header value;",
              " if the match is NOT successful, nothing will be sent.",
              "",
              " Example:",
              "",
              "               -- This is a field in the request message",
              "              |   that the header value will be extracted from.",
              "              |",
              "              |                     -- This is the key name in the",
              "              |                    |   routing header.",
              "              V                    |",
              "     field: \"table_name\"           v",
              "     path_template: \"projects/*/{table_location=instances/*}/tables/*\"",
              "                                                ^            ^",
              "                                                |            |",
              "       In the {} brackets is the pattern that --             |",
              "       specifies what to extract from the                    |",
              "       field as a value to be sent.                          |",
              "                                                             |",
              "      The string in the field must match the whole pattern --",
              "      before brackets, inside brackets, after brackets.",
              "",
              " When looking at this specific example, we can see that:",
              " - A key-value pair with the key `table_location`",
              "   and the value matching `instances/*` should be added",
              "   to the x-goog-request-params routing header.",
              " - The value is extracted from the request message's `table_name` field",
              "   if it matches the full pattern specified:",
              "   `projects/*/instances/*/tables/*`.",
              "",
              " **NB:** If the `path_template` field is not provided, the key name is",
              " equal to the field name, and the whole field should be sent as a value.",
              " This makes the pattern for the field and the value functionally equivalent",
              " to `**`, and the configuration",
              "",
              "     {",
              "       field: \"table_name\"",
              "     }",
              "",
              " is a functionally equivalent shorthand to:",
              "",
              "     {",
              "       field: \"table_name\"",
              "       path_template: \"{table_name=**}\"",
              "     }",
              "",
              " See Example 1 for more details."
            ]
          },
          "Any:type_url": {
            "paramName": "type_url",
            "paramType": "TYPE_STRING",
            "comments": [
              " A URL/resource name that uniquely identifies the type of the serialized",
              " protocol buffer message. This string must contain at least",
              " one \"/\" character. The last segment of the URL's path must represent",
              " the fully qualified name of the type (as in",
              " `path/google.protobuf.Duration`). The name should be in a canonical form",
              " (e.g., leading \".\" is not accepted).",
              "",
              " In practice, teams usually precompile into the binary all types that they",
              " expect it to use in the context of Any. However, for URLs which use the",
              " scheme `http`, `https`, or no scheme, one can optionally set up a type",
              " server that maps type URLs to message definitions as follows:",
              "",
              " * If no scheme is provided, `https` is assumed.",
              " * An HTTP GET on the URL must yield a [google.protobuf.Type][]",
              "   value in binary format, or produce an error.",
              " * Applications are allowed to cache lookup results based on the",
              "   URL, or have them precompiled into a binary to avoid any",
              "   lookup. Therefore, binary compatibility needs to be preserved",
              "   on changes to types. (Use versioned type names to manage",
              "   breaking changes.)",
              "",
              " Note: this functionality is not currently available in the official",
              " protobuf release, and it is not used for type URLs beginning with",
              " type.googleapis.com. As of May 2023, there are no widely used type server",
              " implementations and no plans to implement one.",
              "",
              " Schemes other than `http`, `https` (or the empty scheme) might be",
              " used with implementation specific semantics.",
              ""
            ]
          },
          "Any:value": {
            "paramName": "value",
            "paramType": "TYPE_BYTES",
            "comments": [
              " Must be a valid serialized protocol buffer of the above specified type."
            ]
          },
          "Status:code": {
            "paramName": "code",
            "paramType": "TYPE_INT32",
            "comments": [
              " The status code, which should be an enum value of",
              " [google.rpc.Code][google.rpc.Code]."
            ]
          },
          "Status:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " A developer-facing error message, which should be in English. Any",
              " user-facing error message should be localized and sent in the",
              " [google.rpc.Status.details][google.rpc.Status.details] field, or localized",
              " by the client."
            ]
          },
          "Status:details": {
            "paramName": "details",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of messages that carry the error details.  There is a common set of",
              " message types for APIs to use."
            ]
          },
          "Operations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Manages long-running operations with an API service.",
              "",
              " When an API method normally takes long time to complete, it can be designed",
              " to return [Operation][google.longrunning.Operation] to the client, and the client can use this",
              " interface to receive the real response asynchronously by polling the",
              " operation resource, or pass the operation resource to another API (such as",
              " Google Cloud Pub/Sub API) to receive the response.  Any API service that",
              " returns long-running operations should implement the `Operations` interface",
              " so developers can have a consistent client experience."
            ]
          },
          "Operations:ListOperations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists operations that match the specified filter in the request. If the",
              " server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "",
              " NOTE: the `name` binding allows API services to override the binding",
              " to use different resource name schemes, such as `users/*/operations`. To",
              " override the binding, API services can add a binding such as",
              " `\"/v1/{name=users/*}/operations\"` to their service configuration.",
              " For backwards compatibility, the default name includes the operations",
              " collection id, however overriding users must ensure the name binding",
              " is the parent resource, without the operations collection id.",
              ""
            ]
          },
          "Operations:GetOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets the latest state of a long-running operation.  Clients can use this",
              " method to poll the operation result at intervals as recommended by the API",
              " service.",
              ""
            ]
          },
          "Operations:DeleteOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a long-running operation. This method indicates that the client is",
              " no longer interested in the operation result. It does not cancel the",
              " operation. If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              ""
            ]
          },
          "Operations:CancelOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Starts asynchronous cancellation on a long-running operation.  The server",
              " makes a best effort to cancel the operation, but success is not",
              " guaranteed.  If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.  Clients can use",
              " [Operations.GetOperation][google.longrunning.Operations.GetOperation] or",
              " other methods to check whether the cancellation succeeded or whether the",
              " operation completed despite cancellation. On successful cancellation,",
              " the operation is not deleted; instead, it becomes an operation with",
              " an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,",
              " corresponding to `Code.CANCELLED`.",
              ""
            ]
          },
          "Operations:WaitOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Waits until the specified long-running operation is done or reaches at most",
              " a specified timeout, returning the latest state.  If the operation is",
              " already done, the latest state is immediately returned.  If the timeout",
              " specified is greater than the default HTTP/RPC timeout, the HTTP/RPC",
              " timeout is used.  If the server does not support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              " Note that this method is on a best-effort basis.  It may return the latest",
              " state before the specified timeout (including immediately), meaning even an",
              " immediate response is no guarantee that the operation is done.",
              ""
            ]
          },
          "Operation:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The server-assigned name, which is only unique within the same service that",
              " originally returns it. If you use the default HTTP mapping, the",
              " `name` should be a resource name ending with `operations/{unique_id}`."
            ]
          },
          "Operation:metadata": {
            "paramName": "metadata",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " Service-specific metadata associated with the operation.  It typically",
              " contains progress information and common metadata such as create time.",
              " Some services might not provide such metadata.  Any method that returns a",
              " long-running operation should document the metadata type, if any."
            ]
          },
          "Operation:done": {
            "paramName": "done",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If the value is `false`, it means the operation is still in progress.",
              " If `true`, the operation is completed, and either `error` or `response` is",
              " available."
            ]
          },
          "Operation:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error result of the operation in case of failure or cancellation."
            ]
          },
          "Operation:response": {
            "paramName": "response",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " The normal response of the operation in case of success.  If the original",
              " method returns no data on success, such as `Delete`, the response is",
              " `google.protobuf.Empty`.  If the original method is standard",
              " `Get`/`Create`/`Update`, the response should be the resource.  For other",
              " methods, the response should have the type `XxxResponse`, where `Xxx`",
              " is the original method name.  For example, if the original method name",
              " is `TakeSnapshot()`, the inferred response type is",
              " `TakeSnapshotResponse`."
            ]
          },
          "GetOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource."
            ]
          },
          "ListOperationsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation's parent resource."
            ]
          },
          "ListOperationsRequest:filter": {
            "paramName": "filter",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list filter."
            ]
          },
          "ListOperationsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The standard list page size."
            ]
          },
          "ListOperationsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list page token."
            ]
          },
          "ListOperationsResponse:operations": {
            "paramName": "operations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of operations that matches the specified filter in the request."
            ]
          },
          "ListOperationsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard List next-page token."
            ]
          },
          "CancelOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be cancelled."
            ]
          },
          "DeleteOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be deleted."
            ]
          },
          "WaitOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to wait on."
            ]
          },
          "WaitOperationRequest:timeout": {
            "paramName": "timeout",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The maximum duration to wait before timing out. If left blank, the wait",
              " will be at most the time permitted by the underlying HTTP/RPC protocol.",
              " If RPC context deadline is also specified, the shorter one will be used."
            ]
          },
          "OperationInfo:response_type": {
            "paramName": "response_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the primary return type for this",
              " long-running operation.",
              " This type will be used to deserialize the LRO's response.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "OperationInfo:metadata_type": {
            "paramName": "metadata_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the metadata type for this long-running",
              " operation.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "Timestamp:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Represents seconds of UTC time since Unix epoch",
              " 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to",
              " 9999-12-31T23:59:59Z inclusive."
            ]
          },
          "Timestamp:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Non-negative fractions of a second at nanosecond resolution. Negative",
              " second values with fractions must still have non-negative nanos values",
              " that count forward in time. Must be from 0 to 999,999,999",
              " inclusive."
            ]
          },
          "Echo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used showcase the four main types of rpcs - unary, server",
              " side streaming, client side streaming, and bidirectional streaming. This",
              " service also exposes methods that explicitly implement server delay, and",
              " paginated calls. Set the 'showcase-trailer' metadata key on any method",
              " to have the values echoed in the response trailers. Set the ",
              " 'x-goog-request-params' metadata key on any method to have the values",
              " echoed in the response headers."
            ]
          },
          "Echo:Expand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method splits the given content into words and will pass each word back",
              " through the stream. This method showcases server-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Collect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will collect the words given to it. When the stream is closed",
              " by the client, this method will return the a concatenation of the strings",
              " passed to it. This method showcases client-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Chat": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method, upon receiving a request on the stream, will pass the same",
              " content back on the stream. This method showcases bidirectional",
              " streaming RPCs.",
              ""
            ]
          },
          "Echo:PagedExpand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the Expand method but instead of returning a stream of",
              " expanded words, this method returns a paged list of expanded words.",
              ""
            ]
          },
          "Echo:PagedExpandLegacy": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the PagedExpand except that it uses",
              " max_results instead of page_size, as some legacy APIs still",
              " do. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:PagedExpandLegacyMapped": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method returns a map containing lists of words that appear in the input, keyed by their",
              " initial character. The only words returned are the ones included in the current page,",
              " as determined by page_token and page_size, which both refer to the word indices in the",
              " input. This paging result consisting of a map of lists is a pattern used by some legacy",
              " APIs. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:Wait": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will wait for the requested amount of time and then return.",
              " This method showcases how a client handles a request timeout.",
              ""
            ]
          },
          "Echo:Block": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will block (wait) for the requested amount of time",
              " and then return the response or error.",
              " This method showcases how a client handles delays or retries.",
              ""
            ]
          },
          "EchoRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content to be echoed by the server."
            ]
          },
          "EchoRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error to be thrown by the server."
            ]
          },
          "EchoRequest:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity to be echoed by the server."
            ]
          },
          "EchoRequest:header": {
            "paramName": "header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoRequest:other_header": {
            "paramName": "other_header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content specified in the request."
            ]
          },
          "EchoResponse:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity specified in the request."
            ]
          },
          "ExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content that will be split into words and returned on the stream."
            ]
          },
          "ExpandRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that is thrown after all words are sent on the stream."
            ]
          },
          "PagedExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page."
            ]
          },
          "PagedExpandRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandLegacyRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandLegacyRequest:max_results": {
            "paramName": "max_results",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
              "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
            ]
          },
          "PagedExpandLegacyRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandResponse:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded."
            ]
          },
          "PagedExpandResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "PagedExpandResponseList:words": {
            "paramName": "words",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "PagedExpandLegacyMappedResponse:alphabetized": {
            "paramName": "alphabetized",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded, indexed by their initial character.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates",
              "     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)"
            ]
          },
          "PagedExpandLegacyMappedResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "WaitRequest:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "WaitRequest:ttl": {
            "paramName": "ttl",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The duration of this operation."
            ]
          },
          "WaitRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "WaitRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.WaitResponse",
            "comments": [
              " The response to be returned on operation completion."
            ]
          },
          "WaitResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content of the result."
            ]
          },
          "WaitMetadata:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "BlockRequest:response_delay": {
            "paramName": "response_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The amount of time to block before returning a response."
            ]
          },
          "BlockRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "BlockRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.BlockResponse",
            "comments": [
              " The response to be returned that will signify successful method call."
            ]
          },
          "BlockResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content can contain anything, the server will not depend on a value",
              " here."
            ]
          },
          "ResourceDescriptor:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type. It must be in the format of",
              " {service_name}/{resource_type_kind}. The `resource_type_kind` must be",
              " singular and must not include version numbers.",
              "",
              " Example: `storage.googleapis.com/Bucket`",
              "",
              " The value of the resource_type_kind must follow the regular expression",
              " /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and",
              " should use PascalCase (UpperCamelCase). The maximum number of",
              " characters allowed for the `resource_type_kind` is 100."
            ]
          },
          "ResourceDescriptor:pattern": {
            "paramName": "pattern",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Optional. The relative resource name pattern associated with this resource",
              " type. The DNS prefix of the full resource name shouldn't be specified here.",
              "",
              " The path pattern must follow the syntax, which aligns with HTTP binding",
              " syntax:",
              "",
              "     Template = Segment { \"/\" Segment } ;",
              "     Segment = LITERAL | Variable ;",
              "     Variable = \"{\" LITERAL \"}\" ;",
              "",
              " Examples:",
              "",
              "     - \"projects/{project}/topics/{topic}\"",
              "     - \"projects/{project}/knowledgeBases/{knowledge_base}\"",
              "",
              " The components in braces correspond to the IDs for each resource in the",
              " hierarchy. It is expected that, if multiple patterns are provided,",
              " the same component name (e.g. \"project\") refers to IDs of the same",
              " type of resource."
            ]
          },
          "ResourceDescriptor:name_field": {
            "paramName": "name_field",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The field on the resource that designates the resource name",
              " field. If omitted, this is assumed to be \"name\"."
            ]
          },
          "ResourceDescriptor:history": {
            "paramName": "history",
            "paramType": ".google.api.ResourceDescriptor.History",
            "comments": [
              " Optional. The historical or future-looking state of the resource pattern.",
              "",
              " Example:",
              "",
              "     // The InspectTemplate message originally only supported resource",
              "     // names with organization, and project was added later.",
              "     message InspectTemplate {",
              "       option (google.api.resource) = {",
              "         type: \"dlp.googleapis.com/InspectTemplate\"",
              "         pattern:",
              "         \"organizations/{organization}/inspectTemplates/{inspect_template}\"",
              "         pattern: \"projects/{project}/inspectTemplates/{inspect_template}\"",
              "         history: ORIGINALLY_SINGLE_PATTERN",
              "       };",
              "     }"
            ]
          },
          "ResourceDescriptor:plural": {
            "paramName": "plural",
            "paramType": "TYPE_STRING",
            "comments": [
              " The plural name used in the resource name and permission names, such as",
              " 'projects' for the resource name of 'projects/{project}' and the permission",
              " name of 'cloudresourcemanager.googleapis.com/projects.get'. It is the same",
              " concept of the `plural` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              "",
              " Note: The plural form is required even for singleton resources. See",
              " https://aip.dev/156"
            ]
          },
          "ResourceDescriptor:singular": {
            "paramName": "singular",
            "paramType": "TYPE_STRING",
            "comments": [
              " The same concept of the `singular` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              " Such as \"project\" for the `resourcemanager.googleapis.com/Project` type."
            ]
          },
          "ResourceDescriptor:style": {
            "paramName": "style",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " Style flag(s) for this resource.",
              " These indicate that a resource is expected to conform to a given",
              " style. See the specific style flags for additional information."
            ]
          },
          "ResourceReference:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type that the annotated field references.",
              "",
              " Example:",
              "",
              "     message Subscription {",
              "       string topic = 2 [(google.api.resource_reference) = {",
              "         type: \"pubsub.googleapis.com/Topic\"",
              "       }];",
              "     }",
              "",
              " Occasionally, a field may reference an arbitrary resource. In this case,",
              " APIs use the special value * in their resource reference.",
              "",
              " Example:",
              "",
              "     message GetIamPolicyRequest {",
              "       string resource = 2 [(google.api.resource_reference) = {",
              "         type: \"*\"",
              "       }];",
              "     }"
            ]
          },
          "ResourceReference:child_type": {
            "paramName": "child_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type of a child collection that the annotated field",
              " references. This is useful for annotating the `parent` field that",
              " doesn't have a fixed resource type.",
              "",
              " Example:",
              "",
              "     message ListLogEntriesRequest {",
              "       string parent = 1 [(google.api.resource_reference) = {",
              "         child_type: \"logging.googleapis.com/LogEntry\"",
              "       };",
              "     }"
            ]
          },
          "FieldMask:paths": {
            "paramName": "paths",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The set of field mask paths."
            ]
          },
          "Identity": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple identity service."
            ]
          },
          "Identity:CreateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a user.",
              ""
            ]
          },
          "Identity:GetUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the User with the given uri.",
              ""
            ]
          },
          "Identity:UpdateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a user.",
              ""
            ]
          },
          "Identity:DeleteUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a user, their profile, and all of their authored messages.",
              ""
            ]
          },
          "Identity:ListUsers": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all users.",
              ""
            ]
          },
          "User:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user."
            ]
          },
          "User:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The display_name of the user."
            ],
            "fieldBehavior": 2
          },
          "User:email": {
            "paramName": "email",
            "paramType": "TYPE_STRING",
            "comments": [
              " The email address of the user."
            ],
            "fieldBehavior": 2
          },
          "User:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the user was created."
            ],
            "fieldBehavior": 3
          },
          "User:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the user was updated."
            ],
            "fieldBehavior": 3
          },
          "User:age": {
            "paramName": "age",
            "paramType": "TYPE_INT32",
            "comments": [
              " The age of the user in years."
            ]
          },
          "User:height_feet": {
            "paramName": "height_feet",
            "paramType": "TYPE_DOUBLE",
            "comments": [
              " The height of the user in feet."
            ]
          },
          "User:nickname": {
            "paramName": "nickname",
            "paramType": "TYPE_STRING",
            "comments": [
              " The nickname of the user.",
              "",
              " (-- aip.dev/not-precedent: An empty string is a valid nickname.",
              "     Ordinarily, proto3_optional should not be used on a `string` field. --)"
            ]
          },
          "User:enable_notifications": {
            "paramName": "enable_notifications",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the receiving of notifications. The default is true if unset.",
              "",
              " (-- aip.dev/not-precedent: The default for the feature is true.",
              "     Ordinarily, the default for a `bool` field should be false. --)"
            ]
          },
          "CreateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to create."
            ]
          },
          "GetUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested user."
            ],
            "fieldBehavior": 2
          },
          "UpdateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to update."
            ]
          },
          "UpdateUserRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user to delete."
            ],
            "fieldBehavior": 2
          },
          "ListUsersRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of users to return. Server may return fewer users",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListUsersRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Identity\\ListUsers` method."
            ]
          },
          "ListUsersResponse:users": {
            "paramName": "users",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of users."
            ]
          },
          "ListUsersResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListUsersRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Message\\ListUsers` method to retrieve the",
              " next page of results."
            ]
          },
          "ErrorInfo:reason": {
            "paramName": "reason",
            "paramType": "TYPE_STRING",
            "comments": [
              " The reason of the error. This is a constant value that identifies the",
              " proximate cause of the error. Error reasons are unique within a particular",
              " domain of errors. This should be at most 63 characters and match a",
              " regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents",
              " UPPER_SNAKE_CASE."
            ]
          },
          "ErrorInfo:domain": {
            "paramName": "domain",
            "paramType": "TYPE_STRING",
            "comments": [
              " The logical grouping to which the \"reason\" belongs. The error domain",
              " is typically the registered service name of the tool or product that",
              " generates the error. Example: \"pubsub.googleapis.com\". If the error is",
              " generated by some common infrastructure, the error domain must be a",
              " globally unique value that identifies the infrastructure. For Google API",
              " infrastructure, the error domain is \"googleapis.com\"."
            ]
          },
          "ErrorInfo:metadata": {
            "paramName": "metadata",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional structured details about this error.",
              "",
              " Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in",
              " length. When identifying the current value of an exceeded limit, the units",
              " should be contained in the key, not the value.  For example, rather than",
              " {\"instanceLimit\": \"100/request\"}, should be returned as,",
              " {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of",
              " instances that can be created in a single (batch) request."
            ]
          },
          "RetryInfo:retry_delay": {
            "paramName": "retry_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " Clients should wait at least this long between retrying the same request."
            ]
          },
          "DebugInfo:stack_entries": {
            "paramName": "stack_entries",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The stack trace entries indicating where the error occurred."
            ]
          },
          "DebugInfo:detail": {
            "paramName": "detail",
            "paramType": "TYPE_STRING",
            "comments": [
              " Additional debugging information provided by the server."
            ]
          },
          "QuotaFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all quota violations."
            ]
          },
          "PreconditionFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all precondition violations."
            ]
          },
          "BadRequest:field_violations": {
            "paramName": "field_violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all violations in a client request."
            ]
          },
          "RequestInfo:request_id": {
            "paramName": "request_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " An opaque string that should only be interpreted by the service generating",
              " it. For example, it can be used to identify requests in the service's logs."
            ]
          },
          "RequestInfo:serving_data": {
            "paramName": "serving_data",
            "paramType": "TYPE_STRING",
            "comments": [
              " Any data that was used to serve this request. For example, an encrypted",
              " stack trace that can be sent back to the service provider for debugging."
            ]
          },
          "ResourceInfo:resource_type": {
            "paramName": "resource_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " A name for the type of resource being accessed, e.g. \"sql table\",",
              " \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL",
              " of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\"."
            ]
          },
          "ResourceInfo:resource_name": {
            "paramName": "resource_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the resource being accessed.  For example, a shared calendar",
              " name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current",
              " error is",
              " [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED]."
            ]
          },
          "ResourceInfo:owner": {
            "paramName": "owner",
            "paramType": "TYPE_STRING",
            "comments": [
              " The owner of the resource (optional).",
              " For example, \"user:<owner email>\" or \"project:<Google developer project",
              " id>\"."
            ]
          },
          "ResourceInfo:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " Describes what error is encountered when accessing this resource.",
              " For example, updating a cloud project may require the `writer` permission",
              " on the developer console project."
            ]
          },
          "Help:links": {
            "paramName": "links",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " URL(s) pointing to additional information on handling the current error."
            ]
          },
          "LocalizedMessage:locale": {
            "paramName": "locale",
            "paramType": "TYPE_STRING",
            "comments": [
              " The locale used following the specification defined at",
              " https://www.rfc-editor.org/rfc/bcp/bcp47.txt.",
              " Examples are: \"en-US\", \"fr-CH\", \"es-MX\""
            ]
          },
          "LocalizedMessage:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " The localized error message in the above locale."
            ]
          },
          "Messaging": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple messaging service that implements chat rooms and profile posts.",
              "",
              " This messaging service showcases the features that API clients",
              " generated by gapic-generators implement."
            ]
          },
          "Messaging:CreateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a room.",
              ""
            ]
          },
          "Messaging:GetRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Room with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a room.",
              ""
            ]
          },
          "Messaging:DeleteRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a room and all of its blurbs.",
              ""
            ]
          },
          "Messaging:ListRooms": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all chat rooms.",
              ""
            ]
          },
          "Messaging:CreateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a blurb. If the parent is a room, the blurb is understood to be a",
              " message in that room. If the parent is a profile, the blurb is understood",
              " to be a post on the profile.",
              ""
            ]
          },
          "Messaging:GetBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Blurb with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a blurb.",
              ""
            ]
          },
          "Messaging:DeleteBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a blurb.",
              ""
            ]
          },
          "Messaging:ListBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists blurbs for a specific chat room or user profile depending on the",
              " parent resource name.",
              ""
            ]
          },
          "Messaging:SearchBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method searches through all blurbs across all rooms and profiles",
              " for blurbs containing to words found in the query. Only posts that",
              " contain an exact match of a queried word will be returned.",
              ""
            ]
          },
          "Messaging:StreamBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This returns a stream that emits the blurbs that are created for a",
              " particular chat room or user profile.",
              ""
            ]
          },
          "Messaging:SendBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is a stream to create multiple blurbs. If an invalid blurb is",
              " requested to be created, the stream will close with an error.",
              ""
            ]
          },
          "Messaging:Connect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method starts a bidirectional stream that receives all blurbs that",
              " are being created after the stream has started and sends requests to create",
              " blurbs. If an invalid blurb is requested to be created, the stream will",
              " close with an error.",
              ""
            ]
          },
          "Room:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Room:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The human readable name of the chat room."
            ],
            "fieldBehavior": 2
          },
          "Room:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " The description of the chat room."
            ]
          },
          "Room:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the room was created."
            ],
            "fieldBehavior": 3
          },
          "Room:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the room was updated."
            ],
            "fieldBehavior": 3
          },
          "CreateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to create."
            ]
          },
          "GetRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "UpdateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to update."
            ]
          },
          "UpdateRoomRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "ListRoomsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of rooms return. Server may return fewer rooms",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListRoomsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListRooms` method."
            ]
          },
          "ListRoomsResponse:rooms": {
            "paramName": "rooms",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of rooms."
            ]
          },
          "ListRoomsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListRoomsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Messaging\\ListRooms` method to retrieve",
              " the next page of results."
            ]
          },
          "Blurb:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Blurb:user": {
            "paramName": "user",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the blurb's author."
            ],
            "fieldBehavior": 2
          },
          "Blurb:text": {
            "paramName": "text",
            "paramType": "TYPE_STRING",
            "comments": [
              " The textual content of this blurb."
            ]
          },
          "Blurb:image": {
            "paramName": "image",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The image content of this blurb."
            ]
          },
          "Blurb:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the blurb was created."
            ],
            "fieldBehavior": 3
          },
          "Blurb:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the blurb was updated."
            ],
            "fieldBehavior": 3
          },
          "Blurb:legacy_room_id": {
            "paramName": "legacy_room_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the room. This field is used to signal",
              " the use of the compound resource pattern",
              " `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`"
            ]
          },
          "Blurb:legacy_user_id": {
            "paramName": "legacy_user_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the user. This field is used to signal",
              " the use of the compound resource pattern",
              " `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`"
            ]
          },
          "CreateBlurbRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room or user profile that this blurb will",
              " be tied to."
            ],
            "fieldBehavior": 2
          },
          "CreateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to create."
            ]
          },
          "GetBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "UpdateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to update."
            ]
          },
          "UpdateBlurbRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine wich fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room or profile whos blurbs to list."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs to return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "ListBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
            ]
          },
          "ListBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of blurbs."
            ]
          },
          "ListBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\ListBlurbs` method to retrieve",
              " the next page of results."
            ]
          },
          "SearchBlurbsRequest:query": {
            "paramName": "query",
            "paramType": "TYPE_STRING",
            "comments": [
              " The query used to search for blurbs containing to words of this string.",
              " Only posts that contain an exact match of a queried word will be returned."
            ],
            "fieldBehavior": 2
          },
          "SearchBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
              " rooms and all profiles."
            ]
          },
          "SearchBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "SearchBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of",
              " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
            ]
          },
          "SearchBlurbsMetadata:retry_info": {
            "paramName": "retry_info",
            "paramType": ".google.rpc.RetryInfo",
            "comments": [
              " This signals to the client when to next poll for response."
            ]
          },
          "SearchBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Blurbs that matched the search query."
            ]
          },
          "SearchBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in SearchBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\SearchBlurbs` method to",
              " retrieve the next page of results."
            ]
          },
          "StreamBlurbsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of a chat room or user profile whose blurbs to stream."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsRequest:expire_time": {
            "paramName": "expire_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time at which this stream will close."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsResponse:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb that was either created, updated, or deleted."
            ]
          },
          "StreamBlurbsResponse:action": {
            "paramName": "action",
            "paramType": ".google.showcase.v1beta1.StreamBlurbsResponse.Action",
            "comments": [
              " The action that triggered the blurb to be returned."
            ]
          },
          "SendBlurbsResponse:names": {
            "paramName": "names",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The names of successful blurb creations."
            ]
          },
          "ConnectRequest:config": {
            "paramName": "config",
            "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
            "comments": [
              " Provides information that specifies how to process subsequent requests.",
              " The first `ConnectRequest` message must contain a `config`  message."
            ]
          },
          "ConnectRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to be created."
            ]
          },
          "SequenceService": {
            "paramName": "",
            "paramType": "",
            "comments": []
          },
          "SequenceService:CreateSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a sequence.",
              ""
            ]
          },
          "SequenceService:GetSequenceReport": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves a sequence.",
              ""
            ]
          },
          "SequenceService:AttemptSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Attempts a sequence.",
              ""
            ]
          },
          "Sequence:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "Sequence:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Sequence of responses to return in order for each attempt. If empty, the",
              " default response is an immediate OK."
            ]
          },
          "SequenceReport:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "SequenceReport:attempts": {
            "paramName": "attempts",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The set of RPC attempts received by the server for a Sequence."
            ]
          },
          "CreateSequenceRequest:sequence": {
            "paramName": "sequence",
            "paramType": ".google.showcase.v1beta1.Sequence",
            "comments": []
          },
          "AttemptSequenceRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "GetSequenceReportRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "Testing": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A service to facilitate running discrete sets of tests",
              " against Showcase."
            ]
          },
          "Testing:CreateSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a new testing session.",
              ""
            ]
          },
          "Testing:GetSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets a testing session.",
              ""
            ]
          },
          "Testing:ListSessions": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists the current test sessions.",
              ""
            ]
          },
          "Testing:DeleteSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Delete a test session.",
              ""
            ]
          },
          "Testing:ReportSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Report on the status of a session.",
              " This generates a report detailing which tests have been completed,",
              " and an overall rollup.",
              ""
            ]
          },
          "Testing:ListTests": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " List the tests of a sessesion.",
              ""
            ]
          },
          "Testing:DeleteTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Explicitly decline to implement a test.",
              "",
              " This removes the test from subsequent `ListTests` calls, and",
              " attempting to do the test will error.",
              "",
              " This method will error if attempting to delete a required test.",
              ""
            ]
          },
          "Testing:VerifyTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Register a response to a test.",
              "",
              " In cases where a test involves registering a final answer at the",
              " end of the test, this method provides the means to do so.",
              ""
            ]
          },
          "Session:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the session. The ID must conform to ^[a-z]+$",
              " If this is not provided, Showcase chooses one at random."
            ]
          },
          "Session:version": {
            "paramName": "version",
            "paramType": ".google.showcase.v1beta1.Session.Version",
            "comments": [
              " Required. The version this session is using."
            ]
          },
          "CreateSessionRequest:session": {
            "paramName": "session",
            "paramType": ".google.showcase.v1beta1.Session",
            "comments": [
              " The session to be created.",
              " Sessions are immutable once they are created (although they can",
              " be deleted)."
            ]
          },
          "GetSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be retrieved."
            ]
          },
          "ListSessionsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of sessions to return per page."
            ]
          },
          "ListSessionsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListSessionsResponse:sessions": {
            "paramName": "sessions",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The sessions being returned."
            ]
          },
          "ListSessionsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "DeleteSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be deleted."
            ]
          },
          "ReportSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be reported on."
            ]
          },
          "ReportSessionResponse:result": {
            "paramName": "result",
            "paramType": ".google.showcase.v1beta1.ReportSessionResponse.Result",
            "comments": [
              " The state of the report."
            ]
          },
          "ReportSessionResponse:test_runs": {
            "paramName": "test_runs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The test runs of this session."
            ]
          },
          "Test:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "Test:expectation_level": {
            "paramName": "expectation_level",
            "paramType": ".google.showcase.v1beta1.Test.ExpectationLevel",
            "comments": [
              " The expectation level for this test."
            ]
          },
          "Test:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the test."
            ]
          },
          "Test:blueprints": {
            "paramName": "blueprints",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The blueprints that will satisfy this test. There may be multiple blueprints",
              " that can signal to the server that this test case is being exercised. Although",
              " multiple blueprints are specified, only a single blueprint needs to be run to",
              " signal that the test case was exercised."
            ]
          },
          "Issue:type": {
            "paramName": "type",
            "paramType": ".google.showcase.v1beta1.Issue.Type",
            "comments": [
              " The type of the issue."
            ]
          },
          "Issue:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Issue.Severity",
            "comments": [
              " The severity of the issue."
            ]
          },
          "Issue:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the issue."
            ]
          },
          "ListTestsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session."
            ]
          },
          "ListTestsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of tests to return per page."
            ]
          },
          "ListTestsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListTestsResponse:tests": {
            "paramName": "tests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The tests being returned."
            ]
          },
          "ListTestsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "TestRun:test": {
            "paramName": "test",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "TestRun:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue found with the test run. If empty, this test run was successful."
            ]
          },
          "DeleteTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to be deleted."
            ]
          },
          "VerifyTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to have an answer registered to it."
            ]
          },
          "VerifyTestRequest:answer": {
            "paramName": "answer",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The answer from the test."
            ]
          },
          "VerifyTestRequest:answers": {
            "paramName": "answers",
            "paramType": "TYPE_BYTES[]",
            "comments": [
              " The answers from the test if multiple are to be checked"
            ]
          },
          "VerifyTestResponse:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue if check answer was unsuccessful. This will be empty if the check answer succeeded."
            ]
          }
        }
      },
      "retryableCodeMap": {
        "codeEnumMapping": {
          "0": "OK",
          "1": "CANCELLED",
          "2": "UNKNOWN",
          "3": "INVALID_ARGUMENT",
          "4": "DEADLINE_EXCEEDED",
          "5": "NOT_FOUND",
          "6": "ALREADY_EXISTS",
          "7": "PERMISSION_DENIED",
          "8": "RESOURCE_EXHAUSTED",
          "9": "FAILED_PRECONDITION",
          "10": "ABORTED",
          "11": "OUT_OF_RANGE",
          "12": "UNIMPLEMENTED",
          "13": "INTERNAL",
          "14": "UNAVAILABLE",
          "15": "DATA_LOSS",
          "16": "UNAUTHENTICATED",
          "OK": "0",
          "CANCELLED": "1",
          "UNKNOWN": "2",
          "INVALID_ARGUMENT": "3",
          "DEADLINE_EXCEEDED": "4",
          "NOT_FOUND": "5",
          "ALREADY_EXISTS": "6",
          "PERMISSION_DENIED": "7",
          "RESOURCE_EXHAUSTED": "8",
          "FAILED_PRECONDITION": "9",
          "ABORTED": "10",
          "OUT_OF_RANGE": "11",
          "UNIMPLEMENTED": "12",
          "INTERNAL": "13",
          "UNAVAILABLE": "14",
          "DATA_LOSS": "15",
          "UNAUTHENTICATED": "16"
        },
        "uniqueCodesNamesMap": {
          "": "non_idempotent",
          "deadline_exceeded_unavailable": "idempotent"
        },
        "prettyCodesNamesMap": {
          "non_idempotent": [],
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ]
        },
        "uniqueParamsNamesMap": {
          "94312e9926796a52a8fcbbedaac41972e07ccd1c": "default"
        },
        "prettyParamNamesMap": {
          "default": {
            "initial_retry_delay_millis": 100,
            "retry_delay_multiplier": 1.3,
            "max_retry_delay_millis": 60000,
            "initial_rpc_timeout_millis": 60000,
            "rpc_timeout_multiplier": 1,
            "max_rpc_timeout_millis": 60000,
            "total_timeout_millis": 600000
          }
        }
      },
      "grpcServiceConfig": {},
      "bundleConfigs": [],
      "bundleConfigsMethods": [],
      "simpleMethods": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateUserRequest",
          "outputInterface": ".google.showcase.v1beta1.User",
          "comments": [
            " Creates a user.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateUser",
          "inputType": ".google.showcase.v1beta1.CreateUserRequest",
          "outputType": ".google.showcase.v1beta1.User",
          "options": {
            ".google.api.methodSignature": [
              "user.display_name,user.email",
              "user.display_name,user.email,user.age,user.nickname,user.enable_notifications,user.height_feet"
            ],
            ".google.api.http": {
              "post": "/v1beta1/users",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "user",
              "paramType": ".google.showcase.v1beta1.User",
              "comments": [
                " The user to create."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetUserRequest",
          "outputInterface": ".google.showcase.v1beta1.User",
          "comments": [
            " Retrieves the User with the given uri.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetUser",
          "inputType": ".google.showcase.v1beta1.GetUserRequest",
          "outputType": ".google.showcase.v1beta1.User",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=users/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested user."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.UpdateUserRequest",
          "outputInterface": ".google.showcase.v1beta1.User",
          "comments": [
            " Updates a user.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "UpdateUser",
          "inputType": ".google.showcase.v1beta1.UpdateUserRequest",
          "outputType": ".google.showcase.v1beta1.User",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/{user.name=users/*}",
              "body": "user",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "user",
              "paramType": ".google.showcase.v1beta1.User",
              "comments": [
                " The user to update."
              ]
            },
            {
              "paramName": "update_mask",
              "paramType": ".google.protobuf.FieldMask",
              "comments": [
                " The field mask to determine which fields are to be updated. If empty, the",
                " server will assume all fields are to be updated."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "user",
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteUserRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Deletes a user, their profile, and all of their authored messages.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteUser",
          "inputType": ".google.showcase.v1beta1.DeleteUserRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "delete": "/v1beta1/{name=users/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the user to delete."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "longRunning": [],
      "diregapicLRO": [],
      "streaming": [],
      "clientStreaming": [],
      "serverStreaming": [],
      "bidiStreaming": [],
      "paging": [
        {
          "pagingFieldName": "users",
          "pagingResponseType": ".google.showcase.v1beta1.User",
          "inputInterface": ".google.showcase.v1beta1.ListUsersRequest",
          "outputInterface": ".google.showcase.v1beta1.ListUsersResponse",
          "comments": [
            " Lists all users.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListUsers",
          "inputType": ".google.showcase.v1beta1.ListUsersRequest",
          "outputType": ".google.showcase.v1beta1.ListUsersResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/users",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of users to return. Server may return fewer users",
                " than requested. If unspecified, server will pick an appropriate default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Identity\\ListUsers` method."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "hostname": "localhost",
      "port": 7469,
      "oauthScopes": [],
      "pathTemplates": [
        {
          "name": "Blueprint",
          "params": [
            "session",
            "test",
            "blueprint"
          ],
          "type": "showcase.googleapis.com/Blueprint",
          "pattern": [
            "sessions/{session}/tests/{test}/blueprints/{blueprint}"
          ]
        },
        {
          "name": "Room",
          "params": [
            "room"
          ],
          "type": "showcase.googleapis.com/Room",
          "pattern": [
            "rooms/{room}"
          ]
        },
        {
          "name": "room_blurb",
          "params": [
            "room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "room_blurbs_legacy_room_blurb",
          "params": [
            "room",
            "legacy_room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "Sequence",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/Sequence",
          "pattern": [
            "sequences/{sequence}"
          ]
        },
        {
          "name": "SequenceReport",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/SequenceReport",
          "pattern": [
            "sequences/{sequence}/sequenceReport"
          ]
        },
        {
          "name": "Session",
          "params": [
            "session"
          ],
          "type": "showcase.googleapis.com/Session",
          "pattern": [
            "sessions/{session}"
          ]
        },
        {
          "name": "Test",
          "params": [
            "session",
            "test"
          ],
          "type": "showcase.googleapis.com/Test",
          "pattern": [
            "sessions/{session}/tests/{test}"
          ]
        },
        {
          "name": "User",
          "params": [
            "user"
          ],
          "type": "showcase.googleapis.com/User",
          "pattern": [
            "users/{user}"
          ]
        },
        {
          "name": "user_profile_blurb",
          "params": [
            "user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "user_profile_blurbs_legacy_user_blurb",
          "params": [
            "user",
            "legacy_user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        }
      ]
    },
    {
      "name": "Messaging",
      "method": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateRoomRequest",
          "outputInterface": ".google.showcase.v1beta1.Room",
          "comments": [
            " Creates a room.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateRoom",
          "inputType": ".google.showcase.v1beta1.CreateRoomRequest",
          "outputType": ".google.showcase.v1beta1.Room",
          "options": {
            ".google.api.methodSignature": [
              "room.display_name,room.description"
            ],
            ".google.api.http": {
              "post": "/v1beta1/rooms",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "room",
              "paramType": ".google.showcase.v1beta1.Room",
              "comments": [
                " The room to create."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetRoomRequest",
          "outputInterface": ".google.showcase.v1beta1.Room",
          "comments": [
            " Retrieves the Room with the given resource name.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetRoom",
          "inputType": ".google.showcase.v1beta1.GetRoomRequest",
          "outputType": ".google.showcase.v1beta1.Room",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=rooms/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested room."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.UpdateRoomRequest",
          "outputInterface": ".google.showcase.v1beta1.Room",
          "comments": [
            " Updates a room.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "UpdateRoom",
          "inputType": ".google.showcase.v1beta1.UpdateRoomRequest",
          "outputType": ".google.showcase.v1beta1.Room",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/{room.name=rooms/*}",
              "body": "room",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "room",
              "paramType": ".google.showcase.v1beta1.Room",
              "comments": [
                " The room to update."
              ]
            },
            {
              "paramName": "update_mask",
              "paramType": ".google.protobuf.FieldMask",
              "comments": [
                " The field mask to determine which fields are to be updated. If empty, the",
                " server will assume all fields are to be updated."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "room",
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteRoomRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Deletes a room and all of its blurbs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteRoom",
          "inputType": ".google.showcase.v1beta1.DeleteRoomRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "delete": "/v1beta1/{name=rooms/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested room."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "pagingFieldName": "rooms",
          "pagingResponseType": ".google.showcase.v1beta1.Room",
          "inputInterface": ".google.showcase.v1beta1.ListRoomsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListRoomsResponse",
          "comments": [
            " Lists all chat rooms.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListRooms",
          "inputType": ".google.showcase.v1beta1.ListRoomsRequest",
          "outputType": ".google.showcase.v1beta1.ListRoomsResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/rooms",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of rooms return. Server may return fewer rooms",
                " than requested. If unspecified, server will pick an appropriate default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Messaging\\ListRooms` method."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.Blurb",
          "comments": [
            " Creates a blurb. If the parent is a room, the blurb is understood to be a",
            " message in that room. If the parent is a profile, the blurb is understood",
            " to be a post on the profile.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateBlurb",
          "inputType": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.Blurb",
          "options": {
            ".google.api.methodSignature": [
              "parent,blurb.user,blurb.text",
              "parent,blurb.user,blurb.image"
            ],
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs",
                  "body": "*"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the chat room or user profile that this blurb will",
                " be tied to."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to create."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.Blurb",
          "comments": [
            " Retrieves the Blurb with the given resource name.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetBlurb",
          "inputType": ".google.showcase.v1beta1.GetBlurbRequest",
          "outputType": ".google.showcase.v1beta1.Blurb",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=rooms/*/blurbs/*}",
              "additionalBindings": [
                {
                  "get": "/v1beta1/{name=users/*/profile/blurbs/*}"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested blurb."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.UpdateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.Blurb",
          "comments": [
            " Updates a blurb.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "UpdateBlurb",
          "inputType": ".google.showcase.v1beta1.UpdateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.Blurb",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/{blurb.name=rooms/*/blurbs/*}",
              "body": "blurb",
              "additionalBindings": [
                {
                  "patch": "/v1beta1/{blurb.name=users/*/profile/blurbs/*}",
                  "body": "blurb"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to update."
              ]
            },
            {
              "paramName": "update_mask",
              "paramType": ".google.protobuf.FieldMask",
              "comments": [
                " The field mask to determine wich fields are to be updated. If empty, the",
                " server will assume all fields are to be updated."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "blurb",
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteBlurbRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Deletes a blurb.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteBlurb",
          "inputType": ".google.showcase.v1beta1.DeleteBlurbRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "delete": "/v1beta1/{name=rooms/*/blurbs/*}",
              "additionalBindings": [
                {
                  "delete": "/v1beta1/{name=users/*/profile/blurbs/*}"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested blurb."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "pagingFieldName": "blurbs",
          "pagingResponseType": ".google.showcase.v1beta1.Blurb",
          "inputInterface": ".google.showcase.v1beta1.ListBlurbsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListBlurbsResponse",
          "comments": [
            " Lists blurbs for a specific chat room or user profile depending on the",
            " parent resource name.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListBlurbs",
          "inputType": ".google.showcase.v1beta1.ListBlurbsRequest",
          "outputType": ".google.showcase.v1beta1.ListBlurbsResponse",
          "options": {
            ".google.api.methodSignature": [
              "parent"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{parent=rooms/*}/blurbs",
              "additionalBindings": [
                {
                  "get": "/v1beta1/{parent=users/*/profile}/blurbs"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested room or profile whos blurbs to list."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of blurbs to return. Server may return fewer",
                " blurbs than requested. If unspecified, server will pick an appropriate",
                " default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "longRunning": {
            "responseType": "SearchBlurbsResponse",
            "metadataType": "SearchBlurbsMetadata"
          },
          "longRunningResponseType": ".google.showcase.v1beta1.SearchBlurbsResponse",
          "longRunningMetadataType": ".google.showcase.v1beta1.SearchBlurbsMetadata",
          "inputInterface": ".google.showcase.v1beta1.SearchBlurbsRequest",
          "outputInterface": ".google.longrunning.Operation",
          "comments": [
            " This method searches through all blurbs across all rooms and profiles",
            " for blurbs containing to words found in the query. Only posts that",
            " contain an exact match of a queried word will be returned.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "SearchBlurbs",
          "inputType": ".google.showcase.v1beta1.SearchBlurbsRequest",
          "outputType": ".google.longrunning.Operation",
          "options": {
            ".google.longrunning.operationInfo": {
              "responseType": "SearchBlurbsResponse",
              "metadataType": "SearchBlurbsMetadata"
            },
            ".google.api.methodSignature": [
              "parent,query"
            ],
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs:search",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs:search"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "query",
              "paramType": "TYPE_STRING",
              "comments": [
                " The query used to search for blurbs containing to words of this string.",
                " Only posts that contain an exact match of a queried word will be returned."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
                " rooms and all profiles."
              ]
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of blurbs return. Server may return fewer",
                " blurbs than requested. If unspecified, server will pick an appropriate",
                " default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of",
                " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "streaming": "SERVER_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.StreamBlurbsRequest",
          "outputInterface": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "comments": [
            " This returns a stream that emits the blurbs that are created for a",
            " particular chat room or user profile.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "StreamBlurbs",
          "inputType": ".google.showcase.v1beta1.StreamBlurbsRequest",
          "outputType": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=rooms/*}/blurbs:stream",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{name=users/*/profile}/blurbs:stream",
                  "body": "*"
                }
              ]
            }
          },
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of a chat room or user profile whose blurbs to stream."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "expire_time",
              "paramType": ".google.protobuf.Timestamp",
              "comments": [
                " The time at which this stream will close."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "streaming": "CLIENT_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.SendBlurbsResponse",
          "comments": [
            " This is a stream to create multiple blurbs. If an invalid blurb is",
            " requested to be created, the stream will close with an error.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "SendBlurbs",
          "inputType": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.SendBlurbsResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs:send",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs:send",
                  "body": "*"
                }
              ]
            }
          },
          "clientStreaming": true,
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the chat room or user profile that this blurb will",
                " be tied to."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to create."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "streaming": "BIDI_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.ConnectRequest",
          "outputInterface": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "comments": [
            " This method starts a bidirectional stream that receives all blurbs that",
            " are being created after the stream has started and sends requests to create",
            " blurbs. If an invalid blurb is requested to be created, the stream will",
            " close with an error.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Connect",
          "inputType": ".google.showcase.v1beta1.ConnectRequest",
          "outputType": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "clientStreaming": true,
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "config",
              "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
              "comments": [
                " Provides information that specifies how to process subsequent requests.",
                " The first `ConnectRequest` message must contain a `config`  message."
              ]
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to be created."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "options": {
        ".google.api.defaultHost": "localhost:7469"
      },
      "packageName": "google.showcase.v1beta1",
      "protoFile": "google/showcase/v1beta1/messaging.proto",
      "IAMPolicyMixin": 0,
      "LocationMixin": 0,
      "comments": [
        " A simple messaging service that implements chat rooms and profile posts.",
        "",
        " This messaging service showcases the features that API clients",
        " generated by gapic-generators implement."
      ],
      "commentsMap": {
        "comments": {
          "Http:rules": {
            "paramName": "rules",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of HTTP configuration rules that apply to individual API methods.",
              "",
              " **NOTE:** All service configuration rules follow \"last one wins\" order."
            ]
          },
          "Http:fully_decode_reserved_expansion": {
            "paramName": "fully_decode_reserved_expansion",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When set to true, URL path parameters will be fully URI-decoded except in",
              " cases of single segment matches in reserved expansion, where \"%2F\" will be",
              " left encoded.",
              "",
              " The default behavior is to not decode RFC 6570 reserved characters in multi",
              " segment matches."
            ]
          },
          "HttpRule:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " Selects a method to which this rule applies.",
              "",
              " Refer to [selector][google.api.DocumentationRule.selector] for syntax",
              " details."
            ]
          },
          "HttpRule:get": {
            "paramName": "get",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP GET. Used for listing and getting information about",
              " resources."
            ]
          },
          "HttpRule:put": {
            "paramName": "put",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PUT. Used for replacing a resource."
            ]
          },
          "HttpRule:post": {
            "paramName": "post",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP POST. Used for creating a resource or performing an action."
            ]
          },
          "HttpRule:delete": {
            "paramName": "delete",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP DELETE. Used for deleting a resource."
            ]
          },
          "HttpRule:patch": {
            "paramName": "patch",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PATCH. Used for updating a resource."
            ]
          },
          "HttpRule:custom": {
            "paramName": "custom",
            "paramType": ".google.api.CustomHttpPattern",
            "comments": [
              " The custom pattern is used for specifying an HTTP method that is not",
              " included in the `pattern` field, such as HEAD, or \"*\" to leave the",
              " HTTP method unspecified for this rule. The wild-card rule is useful",
              " for services that provide content to Web (HTML) clients."
            ]
          },
          "HttpRule:body": {
            "paramName": "body",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the request field whose value is mapped to the HTTP request",
              " body, or `*` for mapping all request fields not captured by the path",
              " pattern to the HTTP body, or omitted for not having any HTTP request body.",
              "",
              " NOTE: the referred field must be present at the top-level of the request",
              " message type."
            ]
          },
          "HttpRule:response_body": {
            "paramName": "response_body",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The name of the response field whose value is mapped to the HTTP",
              " response body. When omitted, the entire response message will be used",
              " as the HTTP response body.",
              "",
              " NOTE: The referred field must be present at the top-level of the response",
              " message type."
            ]
          },
          "HttpRule:additional_bindings": {
            "paramName": "additional_bindings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional HTTP bindings for the selector. Nested bindings must",
              " not contain an `additional_bindings` field themselves (that is,",
              " the nesting may only be one level deep)."
            ]
          },
          "CustomHttpPattern:kind": {
            "paramName": "kind",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of this custom HTTP verb."
            ]
          },
          "CustomHttpPattern:path": {
            "paramName": "path",
            "paramType": "TYPE_STRING",
            "comments": [
              " The path matched by this custom verb."
            ]
          },
          "FileDescriptorSet:file": {
            "paramName": "file",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:package": {
            "paramName": "package",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:dependency": {
            "paramName": "dependency",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Names of files imported by this file."
            ]
          },
          "FileDescriptorProto:public_dependency": {
            "paramName": "public_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the public imported files in the dependency list above."
            ]
          },
          "FileDescriptorProto:weak_dependency": {
            "paramName": "weak_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the weak imported files in the dependency list.",
              " For Google-internal migration only. Do not use."
            ]
          },
          "FileDescriptorProto:message_type": {
            "paramName": "message_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " All top-level definitions in this file."
            ]
          },
          "FileDescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:service": {
            "paramName": "service",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FileOptions",
            "comments": []
          },
          "FileDescriptorProto:source_code_info": {
            "paramName": "source_code_info",
            "paramType": ".google.protobuf.SourceCodeInfo",
            "comments": [
              " This field contains optional information about the original source code.",
              " You may safely remove this entire field without harming runtime",
              " functionality of the descriptors -- the information is needed only by",
              " development tools."
            ]
          },
          "FileDescriptorProto:syntax": {
            "paramName": "syntax",
            "paramType": "TYPE_STRING",
            "comments": [
              " The syntax of the proto file.",
              " The supported values are \"proto2\", \"proto3\", and \"editions\".",
              "",
              " If `edition` is present, this value must be \"editions\"."
            ]
          },
          "FileDescriptorProto:edition": {
            "paramName": "edition",
            "paramType": "TYPE_STRING",
            "comments": [
              " The edition of the proto file, which is an opaque string."
            ]
          },
          "DescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "DescriptorProto:field": {
            "paramName": "field",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:nested_type": {
            "paramName": "nested_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension_range": {
            "paramName": "extension_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:oneof_decl": {
            "paramName": "oneof_decl",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MessageOptions",
            "comments": []
          },
          "DescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved field names, which may not be used by fields in the same message.",
              " A given name may only be reserved once."
            ]
          },
          "ExtensionRangeOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ExtensionRangeOptions:declaration": {
            "paramName": "declaration",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " For external users: DO NOT USE. We are in the process of open sourcing",
              " extension declaration and executing internal cleanups before it can be",
              " used externally."
            ]
          },
          "ExtensionRangeOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ExtensionRangeOptions:verification": {
            "paramName": "verification",
            "paramType": ".google.protobuf.ExtensionRangeOptions.VerificationState",
            "comments": [
              " The verification state of the range.",
              " TODO(b/278783756): flip the default to DECLARATION once all empty ranges",
              " are marked as UNVERIFIED."
            ]
          },
          "FieldDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FieldDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "FieldDescriptorProto:label": {
            "paramName": "label",
            "paramType": ".google.protobuf.FieldDescriptorProto.Label",
            "comments": []
          },
          "FieldDescriptorProto:type": {
            "paramName": "type",
            "paramType": ".google.protobuf.FieldDescriptorProto.Type",
            "comments": [
              " If type_name is set, this need not be set.  If both this and type_name",
              " are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
            ]
          },
          "FieldDescriptorProto:type_name": {
            "paramName": "type_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " For message and enum types, this is the name of the type.  If the name",
              " starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping",
              " rules are used to find the type (i.e. first the nested types within this",
              " message are searched, then within the parent, on up to the root",
              " namespace)."
            ]
          },
          "FieldDescriptorProto:extendee": {
            "paramName": "extendee",
            "paramType": "TYPE_STRING",
            "comments": [
              " For extensions, this is the name of the type being extended.  It is",
              " resolved in the same manner as type_name."
            ]
          },
          "FieldDescriptorProto:default_value": {
            "paramName": "default_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " For numeric types, contains the original text representation of the value.",
              " For booleans, \"true\" or \"false\".",
              " For strings, contains the default text contents (not escaped in any way).",
              " For bytes, contains the C escaped value.  All bytes >= 128 are escaped."
            ]
          },
          "FieldDescriptorProto:oneof_index": {
            "paramName": "oneof_index",
            "paramType": "TYPE_INT32",
            "comments": [
              " If set, gives the index of a oneof in the containing type's oneof_decl",
              " list.  This field is a member of that oneof."
            ]
          },
          "FieldDescriptorProto:json_name": {
            "paramName": "json_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " JSON name of this field. The value is set by protocol compiler. If the",
              " user has set a \"json_name\" option on this field, that option's value",
              " will be used. Otherwise, it's deduced from the field's name by converting",
              " it to camelCase."
            ]
          },
          "FieldDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FieldOptions",
            "comments": []
          },
          "FieldDescriptorProto:proto3_optional": {
            "paramName": "proto3_optional",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, this is a proto3 \"optional\". When a proto3 field is optional, it",
              " tracks presence regardless of field type.",
              "",
              " When proto3_optional is true, this field must be belong to a oneof to",
              " signal to old proto3 clients that presence is tracked for this field. This",
              " oneof is known as a \"synthetic\" oneof, and this field must be its sole",
              " member (each proto3 optional field gets its own synthetic oneof). Synthetic",
              " oneofs exist in the descriptor only, and do not generate any API. Synthetic",
              " oneofs must be ordered after all \"real\" oneofs.",
              "",
              " For message fields, proto3_optional doesn't create any semantic change,",
              " since non-repeated message fields always track presence. However it still",
              " indicates the semantic detail of whether the user wrote \"optional\" or not.",
              " This can be useful for round-tripping the .proto file. For consistency we",
              " give message fields a synthetic oneof also, even though it is not required",
              " to track presence. This is especially important because the parser can't",
              " tell if a field is a message or an enum, so it must always create a",
              " synthetic oneof.",
              "",
              " Proto2 optional fields do not set this flag, because they already indicate",
              " optional with `LABEL_OPTIONAL`."
            ]
          },
          "OneofDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "OneofDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.OneofOptions",
            "comments": []
          },
          "EnumDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumDescriptorProto:value": {
            "paramName": "value",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "EnumDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumOptions",
            "comments": []
          },
          "EnumDescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Range of reserved numeric values. Reserved numeric values may not be used",
              " by enum values in the same enum declaration. Reserved ranges may not",
              " overlap."
            ]
          },
          "EnumDescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved enum value names, which may not be reused. A given name may only",
              " be reserved once."
            ]
          },
          "EnumValueDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumValueDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "EnumValueDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumValueOptions",
            "comments": []
          },
          "ServiceDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ServiceDescriptorProto:method": {
            "paramName": "method",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ServiceDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.ServiceOptions",
            "comments": []
          },
          "MethodDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:input_type": {
            "paramName": "input_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Input and output type names.  These are resolved in the same way as",
              " FieldDescriptorProto.type_name, but must refer to a message type."
            ]
          },
          "MethodDescriptorProto:output_type": {
            "paramName": "output_type",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MethodOptions",
            "comments": []
          },
          "MethodDescriptorProto:client_streaming": {
            "paramName": "client_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if client streams multiple client messages"
            ]
          },
          "MethodDescriptorProto:server_streaming": {
            "paramName": "server_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if server streams multiple server messages"
            ]
          },
          "FileOptions:java_package": {
            "paramName": "java_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Java package where classes generated from this .proto will be",
              " placed.  By default, the proto package is used, but this is often",
              " inappropriate because proto packages do not normally start with backwards",
              " domain names."
            ]
          },
          "FileOptions:java_outer_classname": {
            "paramName": "java_outer_classname",
            "paramType": "TYPE_STRING",
            "comments": [
              " Controls the name of the wrapper Java class generated for the .proto file.",
              " That class will always contain the .proto file's getDescriptor() method as",
              " well as any top-level extensions defined in the .proto file.",
              " If java_multiple_files is disabled, then all the other classes from the",
              " .proto file will be nested inside the single wrapper outer class."
            ]
          },
          "FileOptions:java_multiple_files": {
            "paramName": "java_multiple_files",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If enabled, then the Java code generator will generate a separate .java",
              " file for each top-level message, enum, and service defined in the .proto",
              " file.  Thus, these types will *not* be nested inside the wrapper class",
              " named by java_outer_classname.  However, the wrapper class will still be",
              " generated to contain the file's getDescriptor() method as well as any",
              " top-level extensions defined in the file."
            ]
          },
          "FileOptions:java_generate_equals_and_hash": {
            "paramName": "java_generate_equals_and_hash",
            "paramType": "TYPE_BOOL",
            "comments": [
              " This option does nothing."
            ]
          },
          "FileOptions:java_string_check_utf8": {
            "paramName": "java_string_check_utf8",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If set true, then the Java2 code generator will generate code that",
              " throws an exception whenever an attempt is made to assign a non-UTF-8",
              " byte sequence to a string field.",
              " Message reflection will do the same.",
              " However, an extension field still accepts non-UTF-8 byte sequences.",
              " This option has no effect on when used with the lite runtime."
            ]
          },
          "FileOptions:optimize_for": {
            "paramName": "optimize_for",
            "paramType": ".google.protobuf.FileOptions.OptimizeMode",
            "comments": []
          },
          "FileOptions:go_package": {
            "paramName": "go_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Go package where structs generated from this .proto will be",
              " placed. If omitted, the Go package will be derived from the following:",
              "   - The basename of the package import path, if provided.",
              "   - Otherwise, the package statement in the .proto file, if present.",
              "   - Otherwise, the basename of the .proto file, without extension."
            ]
          },
          "FileOptions:cc_generic_services": {
            "paramName": "cc_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should generic services be generated in each language?  \"Generic\" services",
              " are not specific to any particular RPC system.  They are generated by the",
              " main code generators in each language (without additional plugins).",
              " Generic services were the only kind of service generation supported by",
              " early versions of google.protobuf.",
              "",
              " Generic services are now considered deprecated in favor of using plugins",
              " that generate code specific to your particular RPC system.  Therefore,",
              " these default to false.  Old code which depends on generic services should",
              " explicitly set them to true."
            ]
          },
          "FileOptions:java_generic_services": {
            "paramName": "java_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:py_generic_services": {
            "paramName": "py_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:php_generic_services": {
            "paramName": "php_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this file deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for everything in the file, or it will be completely ignored; in the very",
              " least, this is a formalization for deprecating files."
            ]
          },
          "FileOptions:cc_enable_arenas": {
            "paramName": "cc_enable_arenas",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the use of arenas for the proto messages in this file. This applies",
              " only to generated classes for C++."
            ]
          },
          "FileOptions:objc_class_prefix": {
            "paramName": "objc_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the objective c class prefix which is prepended to all objective c",
              " generated classes from this .proto. There is no default."
            ]
          },
          "FileOptions:csharp_namespace": {
            "paramName": "csharp_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Namespace for generated classes; defaults to the package."
            ]
          },
          "FileOptions:swift_prefix": {
            "paramName": "swift_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " By default Swift generators will take the proto package and CamelCase it",
              " replacing '.' with underscore and use that to prefix the types/symbols",
              " defined. When this options is provided, they will use this value instead",
              " to prefix the types/symbols defined."
            ]
          },
          "FileOptions:php_class_prefix": {
            "paramName": "php_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the php class prefix which is prepended to all php generated classes",
              " from this .proto. Default is empty."
            ]
          },
          "FileOptions:php_namespace": {
            "paramName": "php_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated classes. Default",
              " is empty. When this option is empty, the package name will be used for",
              " determining the namespace."
            ]
          },
          "FileOptions:php_metadata_namespace": {
            "paramName": "php_metadata_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated metadata classes.",
              " Default is empty. When this option is empty, the proto file name will be",
              " used for determining the namespace."
            ]
          },
          "FileOptions:ruby_package": {
            "paramName": "ruby_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the package of ruby generated classes. Default",
              " is empty. When this option is not set, the package name will be used for",
              " determining the ruby package."
            ]
          },
          "FileOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FileOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here.",
              " See the documentation for the \"Options\" section above."
            ]
          },
          "MessageOptions:message_set_wire_format": {
            "paramName": "message_set_wire_format",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set true to use the old proto1 MessageSet wire format for extensions.",
              " This is provided for backwards-compatibility with the MessageSet wire",
              " format.  You should not use this for any other reason:  It's less",
              " efficient, has fewer features, and is more complicated.",
              "",
              " The message must be defined exactly as follows:",
              "   message Foo {",
              "     option message_set_wire_format = true;",
              "     extensions 4 to max;",
              "   }",
              " Note that the message cannot have any defined fields; MessageSets only",
              " have extensions.",
              "",
              " All extensions of your type must be singular messages; e.g. they cannot",
              " be int32s, enums, or repeated messages.",
              "",
              " Because this is an option, the above two restrictions are not enforced by",
              " the protocol compiler."
            ]
          },
          "MessageOptions:no_standard_descriptor_accessor": {
            "paramName": "no_standard_descriptor_accessor",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Disables the generation of the standard \"descriptor()\" accessor, which can",
              " conflict with a field of the same name.  This is meant to make migration",
              " from proto1 easier; new code should avoid fields named \"descriptor\"."
            ]
          },
          "MessageOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this message deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the message, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating messages."
            ]
          },
          "MessageOptions:map_entry": {
            "paramName": "map_entry",
            "paramType": "TYPE_BOOL",
            "comments": [
              " NOTE: Do not set the option in .proto files. Always use the maps syntax",
              " instead. The option should only be implicitly set by the proto compiler",
              " parser.",
              "",
              " Whether the message is an automatically generated map entry type for the",
              " maps field.",
              "",
              " For maps fields:",
              "     map<KeyType, ValueType> map_field = 1;",
              " The parsed descriptor looks like:",
              "     message MapFieldEntry {",
              "         option map_entry = true;",
              "         optional KeyType key = 1;",
              "         optional ValueType value = 2;",
              "     }",
              "     repeated MapFieldEntry map_field = 1;",
              "",
              " Implementations may choose not to generate the map_entry=true message, but",
              " use a native map in the target language to hold the keys and values.",
              " The reflection APIs in such implementations still need to work as",
              " if the field is a repeated message field."
            ]
          },
          "MessageOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              "",
              " This should only be used as a temporary measure against broken builds due",
              " to the change in behavior for JSON field name conflicts.",
              "",
              " TODO(b/261750190) This is legacy behavior we plan to remove once downstream",
              " teams have had time to migrate."
            ]
          },
          "MessageOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MessageOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "FieldOptions:ctype": {
            "paramName": "ctype",
            "paramType": ".google.protobuf.FieldOptions.CType",
            "comments": [
              " The ctype option instructs the C++ code generator to use a different",
              " representation of the field than it normally would.  See the specific",
              " options below.  This option is only implemented to support use of",
              " [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of",
              " type \"bytes\" in the open source release -- sorry, we'll try to include",
              " other types in a future version!"
            ]
          },
          "FieldOptions:packed": {
            "paramName": "packed",
            "paramType": "TYPE_BOOL",
            "comments": [
              " The packed option can be enabled for repeated primitive fields to enable",
              " a more efficient representation on the wire. Rather than repeatedly",
              " writing the tag and type for each element, the entire array is encoded as",
              " a single length-delimited blob. In proto3, only explicit setting it to",
              " false will avoid using packed encoding."
            ]
          },
          "FieldOptions:jstype": {
            "paramName": "jstype",
            "paramType": ".google.protobuf.FieldOptions.JSType",
            "comments": [
              " The jstype option determines the JavaScript type used for values of the",
              " field.  The option is permitted only for 64 bit integral and fixed types",
              " (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING",
              " is represented as JavaScript string, which avoids loss of precision that",
              " can happen when a large value is converted to a floating point JavaScript.",
              " Specifying JS_NUMBER for the jstype causes the generated JavaScript code to",
              " use the JavaScript \"number\" type.  The behavior of the default option",
              " JS_NORMAL is implementation dependent.",
              "",
              " This option is an enum to permit additional types to be added, e.g.",
              " goog.math.Integer."
            ]
          },
          "FieldOptions:lazy": {
            "paramName": "lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should this field be parsed lazily?  Lazy applies only to message-type",
              " fields.  It means that when the outer message is initially parsed, the",
              " inner message's contents will not be parsed but instead stored in encoded",
              " form.  The inner message will actually be parsed when it is first accessed.",
              "",
              " This is only a hint.  Implementations are free to choose whether to use",
              " eager or lazy parsing regardless of the value of this option.  However,",
              " setting this option true suggests that the protocol author believes that",
              " using lazy parsing on this field is worth the additional bookkeeping",
              " overhead typically needed to implement it.",
              "",
              " This option does not affect the public interface of any generated code;",
              " all method signatures remain the same.  Furthermore, thread-safety of the",
              " interface is not affected by this option; const methods remain safe to",
              " call from multiple threads concurrently, while non-const methods continue",
              " to require exclusive access.",
              "",
              " Note that implementations may choose not to check required fields within",
              " a lazy sub-message.  That is, calling IsInitialized() on the outer message",
              " may return true even if the inner message has missing required fields.",
              " This is necessary because otherwise the inner message would have to be",
              " parsed in order to perform the check, defeating the purpose of lazy",
              " parsing.  An implementation which chooses not to check required fields",
              " must be consistent about it.  That is, for any particular sub-message, the",
              " implementation must either *always* check its required fields, or *never*",
              " check its required fields, regardless of whether or not the message has",
              " been parsed.",
              "",
              " As of May 2022, lazy verifies the contents of the byte stream during",
              " parsing.  An invalid byte stream will cause the overall parsing to fail."
            ]
          },
          "FieldOptions:unverified_lazy": {
            "paramName": "unverified_lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " unverified_lazy does no correctness checks on the byte stream. This should",
              " only be used where lazy with verification is prohibitive for performance",
              " reasons."
            ]
          },
          "FieldOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this field deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for accessors, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating fields."
            ]
          },
          "FieldOptions:weak": {
            "paramName": "weak",
            "paramType": "TYPE_BOOL",
            "comments": [
              " For Google-internal migration only. Do not use."
            ]
          },
          "FieldOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that the field value should not be printed out when using debug",
              " formats, e.g. when the field contains sensitive credentials."
            ]
          },
          "FieldOptions:retention": {
            "paramName": "retention",
            "paramType": ".google.protobuf.FieldOptions.OptionRetention",
            "comments": []
          },
          "FieldOptions:targets": {
            "paramName": "targets",
            "paramType": "TYPE_ENUM[]",
            "comments": []
          },
          "FieldOptions:edition_defaults": {
            "paramName": "edition_defaults",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FieldOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FieldOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "OneofOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "OneofOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumOptions:allow_alias": {
            "paramName": "allow_alias",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set this option to true to allow mapping different tag names to the same",
              " value."
            ]
          },
          "EnumOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating enums."
            ]
          },
          "EnumOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              " TODO(b/261750190) Remove this legacy behavior once downstream teams have",
              " had time to migrate."
            ]
          },
          "EnumOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumValueOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum value deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum value, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating enum values."
            ]
          },
          "EnumValueOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumValueOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that fields annotated with this enum value should not be printed",
              " out when using debug formats, e.g. when the field contains sensitive",
              " credentials."
            ]
          },
          "EnumValueOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ServiceOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ServiceOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this service deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the service, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating services."
            ]
          },
          "ServiceOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "MethodOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this method deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the method, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating methods."
            ]
          },
          "MethodOptions:idempotency_level": {
            "paramName": "idempotency_level",
            "paramType": ".google.protobuf.MethodOptions.IdempotencyLevel",
            "comments": []
          },
          "MethodOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MethodOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "UninterpretedOption:name": {
            "paramName": "name",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "UninterpretedOption:identifier_value": {
            "paramName": "identifier_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of the uninterpreted option, in whatever type the tokenizer",
              " identified it as during parsing. Exactly one of these should be set."
            ]
          },
          "UninterpretedOption:positive_int_value": {
            "paramName": "positive_int_value",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "UninterpretedOption:negative_int_value": {
            "paramName": "negative_int_value",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "UninterpretedOption:double_value": {
            "paramName": "double_value",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "UninterpretedOption:string_value": {
            "paramName": "string_value",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "UninterpretedOption:aggregate_value": {
            "paramName": "aggregate_value",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FeatureSet:field_presence": {
            "paramName": "field_presence",
            "paramType": ".google.protobuf.FeatureSet.FieldPresence",
            "comments": []
          },
          "FeatureSet:enum_type": {
            "paramName": "enum_type",
            "paramType": ".google.protobuf.FeatureSet.EnumType",
            "comments": []
          },
          "FeatureSet:repeated_field_encoding": {
            "paramName": "repeated_field_encoding",
            "paramType": ".google.protobuf.FeatureSet.RepeatedFieldEncoding",
            "comments": []
          },
          "FeatureSet:string_field_validation": {
            "paramName": "string_field_validation",
            "paramType": ".google.protobuf.FeatureSet.StringFieldValidation",
            "comments": []
          },
          "FeatureSet:message_encoding": {
            "paramName": "message_encoding",
            "paramType": ".google.protobuf.FeatureSet.MessageEncoding",
            "comments": []
          },
          "FeatureSet:json_format": {
            "paramName": "json_format",
            "paramType": ".google.protobuf.FeatureSet.JsonFormat",
            "comments": []
          },
          "FeatureSet:raw_features": {
            "paramName": "raw_features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": []
          },
          "SourceCodeInfo:location": {
            "paramName": "location",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A Location identifies a piece of source code in a .proto file which",
              " corresponds to a particular definition.  This information is intended",
              " to be useful to IDEs, code indexers, documentation generators, and similar",
              " tools.",
              "",
              " For example, say we have a file like:",
              "   message Foo {",
              "     optional string foo = 1;",
              "   }",
              " Let's look at just the field definition:",
              "   optional string foo = 1;",
              "   ^       ^^     ^^  ^  ^^^",
              "   a       bc     de  f  ghi",
              " We have the following locations:",
              "   span   path               represents",
              "   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.",
              "   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).",
              "   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).",
              "   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).",
              "   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).",
              "",
              " Notes:",
              " - A location may refer to a repeated field itself (i.e. not to any",
              "   particular index within it).  This is used whenever a set of elements are",
              "   logically enclosed in a single code segment.  For example, an entire",
              "   extend block (possibly containing multiple extension definitions) will",
              "   have an outer location whose path refers to the \"extensions\" repeated",
              "   field without an index.",
              " - Multiple locations may have the same path.  This happens when a single",
              "   logical declaration is spread out across multiple places.  The most",
              "   obvious example is the \"extend\" block again -- there may be multiple",
              "   extend blocks in the same scope, each of which will have the same path.",
              " - A location's span is not always a subset of its parent's span.  For",
              "   example, the \"extendee\" of an extension declaration appears at the",
              "   beginning of the \"extend\" block and is shared by all extensions within",
              "   the block.",
              " - Just because a location's span is a subset of some other location's span",
              "   does not mean that it is a descendant.  For example, a \"group\" defines",
              "   both a type and a field in a single declaration.  Thus, the locations",
              "   corresponding to the type and field and their components will overlap.",
              " - Code which tries to interpret locations should probably be designed to",
              "   ignore those that it doesn't understand, as more types of locations could",
              "   be recorded in the future."
            ]
          },
          "GeneratedCodeInfo:annotation": {
            "paramName": "annotation",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " An Annotation connects some span of text in generated code to an element",
              " of its generating .proto file."
            ]
          },
          "Duration:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Signed seconds of the span of time. Must be from -315,576,000,000",
              " to +315,576,000,000 inclusive. Note: these bounds are computed from:",
              " 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
            ]
          },
          "Duration:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Signed fractions of a second at nanosecond resolution of the span",
              " of time. Durations less than one second are represented with a 0",
              " `seconds` field and a positive or negative `nanos` field. For durations",
              " of one second or more, a non-zero value for the `nanos` field must be",
              " of the same sign as the `seconds` field. Must be from -999,999,999",
              " to +999,999,999 inclusive."
            ]
          },
          "CommonLanguageSettings:reference_docs_uri": {
            "paramName": "reference_docs_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to automatically generated reference documentation.  Example:",
              " https://cloud.google.com/nodejs/docs/reference/asset/latest"
            ]
          },
          "CommonLanguageSettings:destinations": {
            "paramName": "destinations",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " The destination where API teams want this client library to be published."
            ]
          },
          "ClientLibrarySettings:version": {
            "paramName": "version",
            "paramType": "TYPE_STRING",
            "comments": [
              " Version of the API to apply these settings to. This is the full protobuf",
              " package for the API, ending in the version element.",
              " Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\"."
            ]
          },
          "ClientLibrarySettings:launch_stage": {
            "paramName": "launch_stage",
            "paramType": ".google.api.LaunchStage",
            "comments": [
              " Launch stage of this version of the API."
            ]
          },
          "ClientLibrarySettings:rest_numeric_enums": {
            "paramName": "rest_numeric_enums",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When using transport=rest, the client request will encode enums as",
              " numbers rather than strings."
            ]
          },
          "ClientLibrarySettings:java_settings": {
            "paramName": "java_settings",
            "paramType": ".google.api.JavaSettings",
            "comments": [
              " Settings for legacy Java features, supported in the Service YAML."
            ]
          },
          "ClientLibrarySettings:cpp_settings": {
            "paramName": "cpp_settings",
            "paramType": ".google.api.CppSettings",
            "comments": [
              " Settings for C++ client libraries."
            ]
          },
          "ClientLibrarySettings:php_settings": {
            "paramName": "php_settings",
            "paramType": ".google.api.PhpSettings",
            "comments": [
              " Settings for PHP client libraries."
            ]
          },
          "ClientLibrarySettings:python_settings": {
            "paramName": "python_settings",
            "paramType": ".google.api.PythonSettings",
            "comments": [
              " Settings for Python client libraries."
            ]
          },
          "ClientLibrarySettings:node_settings": {
            "paramName": "node_settings",
            "paramType": ".google.api.NodeSettings",
            "comments": [
              " Settings for Node client libraries."
            ]
          },
          "ClientLibrarySettings:dotnet_settings": {
            "paramName": "dotnet_settings",
            "paramType": ".google.api.DotnetSettings",
            "comments": [
              " Settings for .NET client libraries."
            ]
          },
          "ClientLibrarySettings:ruby_settings": {
            "paramName": "ruby_settings",
            "paramType": ".google.api.RubySettings",
            "comments": [
              " Settings for Ruby client libraries."
            ]
          },
          "ClientLibrarySettings:go_settings": {
            "paramName": "go_settings",
            "paramType": ".google.api.GoSettings",
            "comments": [
              " Settings for Go client libraries."
            ]
          },
          "Publishing:method_settings": {
            "paramName": "method_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of API method settings, e.g. the behavior for methods that use the",
              " long-running operation pattern."
            ]
          },
          "Publishing:new_issue_uri": {
            "paramName": "new_issue_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to a *public* URI where users can report issues.  Example:",
              " https://issuetracker.google.com/issues/new?component=190865&template=1161103"
            ]
          },
          "Publishing:documentation_uri": {
            "paramName": "documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to product home page.  Example:",
              " https://cloud.google.com/asset-inventory/docs/overview"
            ]
          },
          "Publishing:api_short_name": {
            "paramName": "api_short_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " Used as a tracking tag when collecting data about the APIs developer",
              " relations artifacts like docs, packages delivered to package managers,",
              " etc.  Example: \"speech\"."
            ]
          },
          "Publishing:github_label": {
            "paramName": "github_label",
            "paramType": "TYPE_STRING",
            "comments": [
              " GitHub label to apply to issues and pull requests opened for this API."
            ]
          },
          "Publishing:codeowner_github_teams": {
            "paramName": "codeowner_github_teams",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " GitHub teams to be added to CODEOWNERS in the directory in GitHub",
              " containing source code for the client libraries for this API."
            ]
          },
          "Publishing:doc_tag_prefix": {
            "paramName": "doc_tag_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " A prefix used in sample code when demarking regions to be included in",
              " documentation."
            ]
          },
          "Publishing:organization": {
            "paramName": "organization",
            "paramType": ".google.api.ClientLibraryOrganization",
            "comments": [
              " For whom the client library is being published."
            ]
          },
          "Publishing:library_settings": {
            "paramName": "library_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Client library settings.  If the same version string appears multiple",
              " times in this list, then the last one wins.  Settings from earlier",
              " settings with the same version string are discarded."
            ]
          },
          "Publishing:proto_reference_documentation_uri": {
            "paramName": "proto_reference_documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional link to proto reference documentation.  Example:",
              " https://cloud.google.com/pubsub/lite/docs/reference/rpc"
            ]
          },
          "JavaSettings:library_package": {
            "paramName": "library_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " The package name to use in Java. Clobbers the java_package option",
              " set in the protobuf. This should be used **only** by APIs",
              " who have already set the language_settings.java.package_name\" field",
              " in gapic.yaml. API teams should use the protobuf java_package option",
              " where possible.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      library_package: com.google.cloud.pubsub.v1"
            ]
          },
          "JavaSettings:service_class_names": {
            "paramName": "service_class_names",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Configure the Java class name to use instead of the service's for its",
              " corresponding generated GAPIC client. Keys are fully-qualified",
              " service names as they appear in the protobuf (including the full",
              " the language_settings.java.interface_names\" field in gapic.yaml. API",
              " teams should otherwise use the service name as it appears in the",
              " protobuf.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      service_class_names:",
              "        - google.pubsub.v1.Publisher: TopicAdmin",
              "        - google.pubsub.v1.Subscriber: SubscriptionAdmin"
            ]
          },
          "JavaSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "CppSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PhpSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PythonSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "NodeSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:renamed_services": {
            "paramName": "renamed_services",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from original service names to renamed versions.",
              " This is used when the default generated types",
              " would cause a naming conflict. (Neither name is",
              " fully-qualified.)",
              " Example: Subscriber to SubscriberServiceApi."
            ]
          },
          "DotnetSettings:renamed_resources": {
            "paramName": "renamed_resources",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from full resource types to the effective short name",
              " for the resource. This is used when otherwise resource",
              " named from different services would cause naming collisions.",
              " Example entry:",
              " \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\""
            ]
          },
          "DotnetSettings:ignored_resources": {
            "paramName": "ignored_resources",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " List of full resource types to ignore during generation.",
              " This is typically used for API-specific Location resources,",
              " which should be handled by the generator as if they were actually",
              " the common Location resources.",
              " Example entry: \"documentai.googleapis.com/Location\""
            ]
          },
          "DotnetSettings:forced_namespace_aliases": {
            "paramName": "forced_namespace_aliases",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Namespaces which must be aliased in snippets due to",
              " a known (but non-generator-predictable) naming collision"
            ]
          },
          "DotnetSettings:handwritten_signatures": {
            "paramName": "handwritten_signatures",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Method signatures (in the form \"service.method(signature)\")",
              " which are provided separately, so shouldn't be generated.",
              " Snippets *calling* these methods are still generated, however."
            ]
          },
          "RubySettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "GoSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "MethodSettings:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " The fully qualified name of the method, for which the options below apply.",
              " This is used to find the method to apply the options."
            ]
          },
          "MethodSettings:long_running": {
            "paramName": "long_running",
            "paramType": ".google.api.MethodSettings.LongRunning",
            "comments": [
              " Describes settings to use for long-running operations when generating",
              " API methods for RPCs. Complements RPCs that use the annotations in",
              " google/longrunning/operations.proto.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    method_settings:",
              "      - selector: google.cloud.speech.v2.Speech.BatchRecognize",
              "        long_running:",
              "          initial_poll_delay:",
              "            seconds: 60 # 1 minute",
              "          poll_delay_multiplier: 1.5",
              "          max_poll_delay:",
              "            seconds: 360 # 6 minutes",
              "          total_poll_timeout:",
              "             seconds: 54000 # 90 minutes"
            ]
          },
          "Compliance": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
              " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
              " correctly."
            ]
          },
          "Compliance:RepeatDataBody": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the entire request object in the REST body.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyInfo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the a message-type field in the REST body. Per AIP-127, only",
              " top-level, non-repeated fields can be sent this way.",
              ""
            ]
          },
          "Compliance:RepeatDataQuery": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending all request fields as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataSimplePath": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending some parameters as \"simple\" path variables (i.e., of the form",
              " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataPathResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a path resource.",
              ""
            ]
          },
          "Compliance:RepeatDataPathTrailingResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a trailing resource.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPut": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PUT method.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPatch": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PATCH method.",
              ""
            ]
          },
          "Compliance:GetEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
              " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
              " response from this RPC as the request to VerifyEnum()",
              "",
              " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
              " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "Compliance:VerifyEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
              " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
              " with the same EnumResponse; otherwise, the RPC errors.",
              "",
              " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
              " although they are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "RepeatRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "RepeatRequest:info": {
            "paramName": "info",
            "paramType": ".google.showcase.v1beta1.ComplianceData",
            "comments": []
          },
          "RepeatRequest:server_verify": {
            "paramName": "server_verify",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, the server will verify that the received request matches",
              " the request with the same name in the compliance test suite."
            ]
          },
          "RepeatRequest:intended_binding_uri": {
            "paramName": "intended_binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template this request is expected to be bound to server-side."
            ]
          },
          "RepeatRequest:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": [
              " Some top level fields, to test that these are encoded correctly",
              " in query params."
            ]
          },
          "RepeatRequest:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatRequest:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "RepeatRequest:p_int64": {
            "paramName": "p_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.RepeatRequest",
            "comments": []
          },
          "RepeatResponse:binding_uri": {
            "paramName": "binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template the request was bound to server-side."
            ]
          },
          "ComplianceSuite:group": {
            "paramName": "group",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceGroup:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceGroup:rpcs": {
            "paramName": "rpcs",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "ComplianceGroup:requests": {
            "paramName": "requests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceData:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:f_sint32": {
            "paramName": "f_sint32",
            "paramType": "TYPE_SINT32",
            "comments": []
          },
          "ComplianceData:f_sfixed32": {
            "paramName": "f_sfixed32",
            "paramType": "TYPE_SFIXED32",
            "comments": []
          },
          "ComplianceData:f_uint32": {
            "paramName": "f_uint32",
            "paramType": "TYPE_UINT32",
            "comments": []
          },
          "ComplianceData:f_fixed32": {
            "paramName": "f_fixed32",
            "paramType": "TYPE_FIXED32",
            "comments": []
          },
          "ComplianceData:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "ComplianceData:f_sint64": {
            "paramName": "f_sint64",
            "paramType": "TYPE_SINT64",
            "comments": []
          },
          "ComplianceData:f_sfixed64": {
            "paramName": "f_sfixed64",
            "paramType": "TYPE_SFIXED64",
            "comments": []
          },
          "ComplianceData:f_uint64": {
            "paramName": "f_uint64",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "ComplianceData:f_fixed64": {
            "paramName": "f_fixed64",
            "paramType": "TYPE_FIXED64",
            "comments": []
          },
          "ComplianceData:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceData:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:f_bytes": {
            "paramName": "f_bytes",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "ComplianceData:f_kingdom": {
            "paramName": "f_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceData:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:p_kingdom": {
            "paramName": "p_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceDataChild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:f_continent": {
            "paramName": "f_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataChild:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:p_float": {
            "paramName": "p_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:p_continent": {
            "paramName": "p_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataGrandchild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataGrandchild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataGrandchild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "EnumRequest:unknown_enum": {
            "paramName": "unknown_enum",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
            ]
          },
          "EnumResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.EnumRequest",
            "comments": [
              " The original request for a known or unknown enum from the server."
            ]
          },
          "EnumResponse:continent": {
            "paramName": "continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": [
              " The actual enum the server provided."
            ]
          },
          "RoutingRule:routing_parameters": {
            "paramName": "routing_parameters",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A collection of Routing Parameter specifications.",
              " **NOTE:** If multiple Routing Parameters describe the same key",
              " (via the `path_template` field or via the `field` field when",
              " `path_template` is not provided), \"last one wins\" rule",
              " determines which Parameter gets used.",
              " See the examples for more details."
            ]
          },
          "RoutingParameter:field": {
            "paramName": "field",
            "paramType": "TYPE_STRING",
            "comments": [
              " A request field to extract the header key-value pair from."
            ]
          },
          "RoutingParameter:path_template": {
            "paramName": "path_template",
            "paramType": "TYPE_STRING",
            "comments": [
              " A pattern matching the key-value field. Optional.",
              " If not specified, the whole field specified in the `field` field will be",
              " taken as value, and its name used as key. If specified, it MUST contain",
              " exactly one named segment (along with any number of unnamed segments) The",
              " pattern will be matched over the field specified in the `field` field, then",
              " if the match is successful:",
              " - the name of the single named segment will be used as a header name,",
              " - the match value of the segment will be used as a header value;",
              " if the match is NOT successful, nothing will be sent.",
              "",
              " Example:",
              "",
              "               -- This is a field in the request message",
              "              |   that the header value will be extracted from.",
              "              |",
              "              |                     -- This is the key name in the",
              "              |                    |   routing header.",
              "              V                    |",
              "     field: \"table_name\"           v",
              "     path_template: \"projects/*/{table_location=instances/*}/tables/*\"",
              "                                                ^            ^",
              "                                                |            |",
              "       In the {} brackets is the pattern that --             |",
              "       specifies what to extract from the                    |",
              "       field as a value to be sent.                          |",
              "                                                             |",
              "      The string in the field must match the whole pattern --",
              "      before brackets, inside brackets, after brackets.",
              "",
              " When looking at this specific example, we can see that:",
              " - A key-value pair with the key `table_location`",
              "   and the value matching `instances/*` should be added",
              "   to the x-goog-request-params routing header.",
              " - The value is extracted from the request message's `table_name` field",
              "   if it matches the full pattern specified:",
              "   `projects/*/instances/*/tables/*`.",
              "",
              " **NB:** If the `path_template` field is not provided, the key name is",
              " equal to the field name, and the whole field should be sent as a value.",
              " This makes the pattern for the field and the value functionally equivalent",
              " to `**`, and the configuration",
              "",
              "     {",
              "       field: \"table_name\"",
              "     }",
              "",
              " is a functionally equivalent shorthand to:",
              "",
              "     {",
              "       field: \"table_name\"",
              "       path_template: \"{table_name=**}\"",
              "     }",
              "",
              " See Example 1 for more details."
            ]
          },
          "Any:type_url": {
            "paramName": "type_url",
            "paramType": "TYPE_STRING",
            "comments": [
              " A URL/resource name that uniquely identifies the type of the serialized",
              " protocol buffer message. This string must contain at least",
              " one \"/\" character. The last segment of the URL's path must represent",
              " the fully qualified name of the type (as in",
              " `path/google.protobuf.Duration`). The name should be in a canonical form",
              " (e.g., leading \".\" is not accepted).",
              "",
              " In practice, teams usually precompile into the binary all types that they",
              " expect it to use in the context of Any. However, for URLs which use the",
              " scheme `http`, `https`, or no scheme, one can optionally set up a type",
              " server that maps type URLs to message definitions as follows:",
              "",
              " * If no scheme is provided, `https` is assumed.",
              " * An HTTP GET on the URL must yield a [google.protobuf.Type][]",
              "   value in binary format, or produce an error.",
              " * Applications are allowed to cache lookup results based on the",
              "   URL, or have them precompiled into a binary to avoid any",
              "   lookup. Therefore, binary compatibility needs to be preserved",
              "   on changes to types. (Use versioned type names to manage",
              "   breaking changes.)",
              "",
              " Note: this functionality is not currently available in the official",
              " protobuf release, and it is not used for type URLs beginning with",
              " type.googleapis.com. As of May 2023, there are no widely used type server",
              " implementations and no plans to implement one.",
              "",
              " Schemes other than `http`, `https` (or the empty scheme) might be",
              " used with implementation specific semantics.",
              ""
            ]
          },
          "Any:value": {
            "paramName": "value",
            "paramType": "TYPE_BYTES",
            "comments": [
              " Must be a valid serialized protocol buffer of the above specified type."
            ]
          },
          "Status:code": {
            "paramName": "code",
            "paramType": "TYPE_INT32",
            "comments": [
              " The status code, which should be an enum value of",
              " [google.rpc.Code][google.rpc.Code]."
            ]
          },
          "Status:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " A developer-facing error message, which should be in English. Any",
              " user-facing error message should be localized and sent in the",
              " [google.rpc.Status.details][google.rpc.Status.details] field, or localized",
              " by the client."
            ]
          },
          "Status:details": {
            "paramName": "details",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of messages that carry the error details.  There is a common set of",
              " message types for APIs to use."
            ]
          },
          "Operations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Manages long-running operations with an API service.",
              "",
              " When an API method normally takes long time to complete, it can be designed",
              " to return [Operation][google.longrunning.Operation] to the client, and the client can use this",
              " interface to receive the real response asynchronously by polling the",
              " operation resource, or pass the operation resource to another API (such as",
              " Google Cloud Pub/Sub API) to receive the response.  Any API service that",
              " returns long-running operations should implement the `Operations` interface",
              " so developers can have a consistent client experience."
            ]
          },
          "Operations:ListOperations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists operations that match the specified filter in the request. If the",
              " server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "",
              " NOTE: the `name` binding allows API services to override the binding",
              " to use different resource name schemes, such as `users/*/operations`. To",
              " override the binding, API services can add a binding such as",
              " `\"/v1/{name=users/*}/operations\"` to their service configuration.",
              " For backwards compatibility, the default name includes the operations",
              " collection id, however overriding users must ensure the name binding",
              " is the parent resource, without the operations collection id.",
              ""
            ]
          },
          "Operations:GetOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets the latest state of a long-running operation.  Clients can use this",
              " method to poll the operation result at intervals as recommended by the API",
              " service.",
              ""
            ]
          },
          "Operations:DeleteOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a long-running operation. This method indicates that the client is",
              " no longer interested in the operation result. It does not cancel the",
              " operation. If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              ""
            ]
          },
          "Operations:CancelOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Starts asynchronous cancellation on a long-running operation.  The server",
              " makes a best effort to cancel the operation, but success is not",
              " guaranteed.  If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.  Clients can use",
              " [Operations.GetOperation][google.longrunning.Operations.GetOperation] or",
              " other methods to check whether the cancellation succeeded or whether the",
              " operation completed despite cancellation. On successful cancellation,",
              " the operation is not deleted; instead, it becomes an operation with",
              " an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,",
              " corresponding to `Code.CANCELLED`.",
              ""
            ]
          },
          "Operations:WaitOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Waits until the specified long-running operation is done or reaches at most",
              " a specified timeout, returning the latest state.  If the operation is",
              " already done, the latest state is immediately returned.  If the timeout",
              " specified is greater than the default HTTP/RPC timeout, the HTTP/RPC",
              " timeout is used.  If the server does not support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              " Note that this method is on a best-effort basis.  It may return the latest",
              " state before the specified timeout (including immediately), meaning even an",
              " immediate response is no guarantee that the operation is done.",
              ""
            ]
          },
          "Operation:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The server-assigned name, which is only unique within the same service that",
              " originally returns it. If you use the default HTTP mapping, the",
              " `name` should be a resource name ending with `operations/{unique_id}`."
            ]
          },
          "Operation:metadata": {
            "paramName": "metadata",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " Service-specific metadata associated with the operation.  It typically",
              " contains progress information and common metadata such as create time.",
              " Some services might not provide such metadata.  Any method that returns a",
              " long-running operation should document the metadata type, if any."
            ]
          },
          "Operation:done": {
            "paramName": "done",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If the value is `false`, it means the operation is still in progress.",
              " If `true`, the operation is completed, and either `error` or `response` is",
              " available."
            ]
          },
          "Operation:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error result of the operation in case of failure or cancellation."
            ]
          },
          "Operation:response": {
            "paramName": "response",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " The normal response of the operation in case of success.  If the original",
              " method returns no data on success, such as `Delete`, the response is",
              " `google.protobuf.Empty`.  If the original method is standard",
              " `Get`/`Create`/`Update`, the response should be the resource.  For other",
              " methods, the response should have the type `XxxResponse`, where `Xxx`",
              " is the original method name.  For example, if the original method name",
              " is `TakeSnapshot()`, the inferred response type is",
              " `TakeSnapshotResponse`."
            ]
          },
          "GetOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource."
            ]
          },
          "ListOperationsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation's parent resource."
            ]
          },
          "ListOperationsRequest:filter": {
            "paramName": "filter",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list filter."
            ]
          },
          "ListOperationsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The standard list page size."
            ]
          },
          "ListOperationsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list page token."
            ]
          },
          "ListOperationsResponse:operations": {
            "paramName": "operations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of operations that matches the specified filter in the request."
            ]
          },
          "ListOperationsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard List next-page token."
            ]
          },
          "CancelOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be cancelled."
            ]
          },
          "DeleteOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be deleted."
            ]
          },
          "WaitOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to wait on."
            ]
          },
          "WaitOperationRequest:timeout": {
            "paramName": "timeout",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The maximum duration to wait before timing out. If left blank, the wait",
              " will be at most the time permitted by the underlying HTTP/RPC protocol.",
              " If RPC context deadline is also specified, the shorter one will be used."
            ]
          },
          "OperationInfo:response_type": {
            "paramName": "response_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the primary return type for this",
              " long-running operation.",
              " This type will be used to deserialize the LRO's response.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "OperationInfo:metadata_type": {
            "paramName": "metadata_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the metadata type for this long-running",
              " operation.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "Timestamp:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Represents seconds of UTC time since Unix epoch",
              " 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to",
              " 9999-12-31T23:59:59Z inclusive."
            ]
          },
          "Timestamp:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Non-negative fractions of a second at nanosecond resolution. Negative",
              " second values with fractions must still have non-negative nanos values",
              " that count forward in time. Must be from 0 to 999,999,999",
              " inclusive."
            ]
          },
          "Echo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used showcase the four main types of rpcs - unary, server",
              " side streaming, client side streaming, and bidirectional streaming. This",
              " service also exposes methods that explicitly implement server delay, and",
              " paginated calls. Set the 'showcase-trailer' metadata key on any method",
              " to have the values echoed in the response trailers. Set the ",
              " 'x-goog-request-params' metadata key on any method to have the values",
              " echoed in the response headers."
            ]
          },
          "Echo:Expand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method splits the given content into words and will pass each word back",
              " through the stream. This method showcases server-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Collect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will collect the words given to it. When the stream is closed",
              " by the client, this method will return the a concatenation of the strings",
              " passed to it. This method showcases client-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Chat": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method, upon receiving a request on the stream, will pass the same",
              " content back on the stream. This method showcases bidirectional",
              " streaming RPCs.",
              ""
            ]
          },
          "Echo:PagedExpand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the Expand method but instead of returning a stream of",
              " expanded words, this method returns a paged list of expanded words.",
              ""
            ]
          },
          "Echo:PagedExpandLegacy": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the PagedExpand except that it uses",
              " max_results instead of page_size, as some legacy APIs still",
              " do. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:PagedExpandLegacyMapped": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method returns a map containing lists of words that appear in the input, keyed by their",
              " initial character. The only words returned are the ones included in the current page,",
              " as determined by page_token and page_size, which both refer to the word indices in the",
              " input. This paging result consisting of a map of lists is a pattern used by some legacy",
              " APIs. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:Wait": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will wait for the requested amount of time and then return.",
              " This method showcases how a client handles a request timeout.",
              ""
            ]
          },
          "Echo:Block": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will block (wait) for the requested amount of time",
              " and then return the response or error.",
              " This method showcases how a client handles delays or retries.",
              ""
            ]
          },
          "EchoRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content to be echoed by the server."
            ]
          },
          "EchoRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error to be thrown by the server."
            ]
          },
          "EchoRequest:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity to be echoed by the server."
            ]
          },
          "EchoRequest:header": {
            "paramName": "header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoRequest:other_header": {
            "paramName": "other_header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content specified in the request."
            ]
          },
          "EchoResponse:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity specified in the request."
            ]
          },
          "ExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content that will be split into words and returned on the stream."
            ]
          },
          "ExpandRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that is thrown after all words are sent on the stream."
            ]
          },
          "PagedExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page."
            ]
          },
          "PagedExpandRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandLegacyRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandLegacyRequest:max_results": {
            "paramName": "max_results",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
              "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
            ]
          },
          "PagedExpandLegacyRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandResponse:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded."
            ]
          },
          "PagedExpandResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "PagedExpandResponseList:words": {
            "paramName": "words",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "PagedExpandLegacyMappedResponse:alphabetized": {
            "paramName": "alphabetized",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded, indexed by their initial character.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates",
              "     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)"
            ]
          },
          "PagedExpandLegacyMappedResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "WaitRequest:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "WaitRequest:ttl": {
            "paramName": "ttl",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The duration of this operation."
            ]
          },
          "WaitRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "WaitRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.WaitResponse",
            "comments": [
              " The response to be returned on operation completion."
            ]
          },
          "WaitResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content of the result."
            ]
          },
          "WaitMetadata:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "BlockRequest:response_delay": {
            "paramName": "response_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The amount of time to block before returning a response."
            ]
          },
          "BlockRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "BlockRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.BlockResponse",
            "comments": [
              " The response to be returned that will signify successful method call."
            ]
          },
          "BlockResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content can contain anything, the server will not depend on a value",
              " here."
            ]
          },
          "ResourceDescriptor:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type. It must be in the format of",
              " {service_name}/{resource_type_kind}. The `resource_type_kind` must be",
              " singular and must not include version numbers.",
              "",
              " Example: `storage.googleapis.com/Bucket`",
              "",
              " The value of the resource_type_kind must follow the regular expression",
              " /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and",
              " should use PascalCase (UpperCamelCase). The maximum number of",
              " characters allowed for the `resource_type_kind` is 100."
            ]
          },
          "ResourceDescriptor:pattern": {
            "paramName": "pattern",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Optional. The relative resource name pattern associated with this resource",
              " type. The DNS prefix of the full resource name shouldn't be specified here.",
              "",
              " The path pattern must follow the syntax, which aligns with HTTP binding",
              " syntax:",
              "",
              "     Template = Segment { \"/\" Segment } ;",
              "     Segment = LITERAL | Variable ;",
              "     Variable = \"{\" LITERAL \"}\" ;",
              "",
              " Examples:",
              "",
              "     - \"projects/{project}/topics/{topic}\"",
              "     - \"projects/{project}/knowledgeBases/{knowledge_base}\"",
              "",
              " The components in braces correspond to the IDs for each resource in the",
              " hierarchy. It is expected that, if multiple patterns are provided,",
              " the same component name (e.g. \"project\") refers to IDs of the same",
              " type of resource."
            ]
          },
          "ResourceDescriptor:name_field": {
            "paramName": "name_field",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The field on the resource that designates the resource name",
              " field. If omitted, this is assumed to be \"name\"."
            ]
          },
          "ResourceDescriptor:history": {
            "paramName": "history",
            "paramType": ".google.api.ResourceDescriptor.History",
            "comments": [
              " Optional. The historical or future-looking state of the resource pattern.",
              "",
              " Example:",
              "",
              "     // The InspectTemplate message originally only supported resource",
              "     // names with organization, and project was added later.",
              "     message InspectTemplate {",
              "       option (google.api.resource) = {",
              "         type: \"dlp.googleapis.com/InspectTemplate\"",
              "         pattern:",
              "         \"organizations/{organization}/inspectTemplates/{inspect_template}\"",
              "         pattern: \"projects/{project}/inspectTemplates/{inspect_template}\"",
              "         history: ORIGINALLY_SINGLE_PATTERN",
              "       };",
              "     }"
            ]
          },
          "ResourceDescriptor:plural": {
            "paramName": "plural",
            "paramType": "TYPE_STRING",
            "comments": [
              " The plural name used in the resource name and permission names, such as",
              " 'projects' for the resource name of 'projects/{project}' and the permission",
              " name of 'cloudresourcemanager.googleapis.com/projects.get'. It is the same",
              " concept of the `plural` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              "",
              " Note: The plural form is required even for singleton resources. See",
              " https://aip.dev/156"
            ]
          },
          "ResourceDescriptor:singular": {
            "paramName": "singular",
            "paramType": "TYPE_STRING",
            "comments": [
              " The same concept of the `singular` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              " Such as \"project\" for the `resourcemanager.googleapis.com/Project` type."
            ]
          },
          "ResourceDescriptor:style": {
            "paramName": "style",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " Style flag(s) for this resource.",
              " These indicate that a resource is expected to conform to a given",
              " style. See the specific style flags for additional information."
            ]
          },
          "ResourceReference:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type that the annotated field references.",
              "",
              " Example:",
              "",
              "     message Subscription {",
              "       string topic = 2 [(google.api.resource_reference) = {",
              "         type: \"pubsub.googleapis.com/Topic\"",
              "       }];",
              "     }",
              "",
              " Occasionally, a field may reference an arbitrary resource. In this case,",
              " APIs use the special value * in their resource reference.",
              "",
              " Example:",
              "",
              "     message GetIamPolicyRequest {",
              "       string resource = 2 [(google.api.resource_reference) = {",
              "         type: \"*\"",
              "       }];",
              "     }"
            ]
          },
          "ResourceReference:child_type": {
            "paramName": "child_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type of a child collection that the annotated field",
              " references. This is useful for annotating the `parent` field that",
              " doesn't have a fixed resource type.",
              "",
              " Example:",
              "",
              "     message ListLogEntriesRequest {",
              "       string parent = 1 [(google.api.resource_reference) = {",
              "         child_type: \"logging.googleapis.com/LogEntry\"",
              "       };",
              "     }"
            ]
          },
          "FieldMask:paths": {
            "paramName": "paths",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The set of field mask paths."
            ]
          },
          "Identity": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple identity service."
            ]
          },
          "Identity:CreateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a user.",
              ""
            ]
          },
          "Identity:GetUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the User with the given uri.",
              ""
            ]
          },
          "Identity:UpdateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a user.",
              ""
            ]
          },
          "Identity:DeleteUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a user, their profile, and all of their authored messages.",
              ""
            ]
          },
          "Identity:ListUsers": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all users.",
              ""
            ]
          },
          "User:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user."
            ]
          },
          "User:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The display_name of the user."
            ],
            "fieldBehavior": 2
          },
          "User:email": {
            "paramName": "email",
            "paramType": "TYPE_STRING",
            "comments": [
              " The email address of the user."
            ],
            "fieldBehavior": 2
          },
          "User:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the user was created."
            ],
            "fieldBehavior": 3
          },
          "User:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the user was updated."
            ],
            "fieldBehavior": 3
          },
          "User:age": {
            "paramName": "age",
            "paramType": "TYPE_INT32",
            "comments": [
              " The age of the user in years."
            ]
          },
          "User:height_feet": {
            "paramName": "height_feet",
            "paramType": "TYPE_DOUBLE",
            "comments": [
              " The height of the user in feet."
            ]
          },
          "User:nickname": {
            "paramName": "nickname",
            "paramType": "TYPE_STRING",
            "comments": [
              " The nickname of the user.",
              "",
              " (-- aip.dev/not-precedent: An empty string is a valid nickname.",
              "     Ordinarily, proto3_optional should not be used on a `string` field. --)"
            ]
          },
          "User:enable_notifications": {
            "paramName": "enable_notifications",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the receiving of notifications. The default is true if unset.",
              "",
              " (-- aip.dev/not-precedent: The default for the feature is true.",
              "     Ordinarily, the default for a `bool` field should be false. --)"
            ]
          },
          "CreateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to create."
            ]
          },
          "GetUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested user."
            ],
            "fieldBehavior": 2
          },
          "UpdateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to update."
            ]
          },
          "UpdateUserRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user to delete."
            ],
            "fieldBehavior": 2
          },
          "ListUsersRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of users to return. Server may return fewer users",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListUsersRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Identity\\ListUsers` method."
            ]
          },
          "ListUsersResponse:users": {
            "paramName": "users",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of users."
            ]
          },
          "ListUsersResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListUsersRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Message\\ListUsers` method to retrieve the",
              " next page of results."
            ]
          },
          "ErrorInfo:reason": {
            "paramName": "reason",
            "paramType": "TYPE_STRING",
            "comments": [
              " The reason of the error. This is a constant value that identifies the",
              " proximate cause of the error. Error reasons are unique within a particular",
              " domain of errors. This should be at most 63 characters and match a",
              " regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents",
              " UPPER_SNAKE_CASE."
            ]
          },
          "ErrorInfo:domain": {
            "paramName": "domain",
            "paramType": "TYPE_STRING",
            "comments": [
              " The logical grouping to which the \"reason\" belongs. The error domain",
              " is typically the registered service name of the tool or product that",
              " generates the error. Example: \"pubsub.googleapis.com\". If the error is",
              " generated by some common infrastructure, the error domain must be a",
              " globally unique value that identifies the infrastructure. For Google API",
              " infrastructure, the error domain is \"googleapis.com\"."
            ]
          },
          "ErrorInfo:metadata": {
            "paramName": "metadata",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional structured details about this error.",
              "",
              " Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in",
              " length. When identifying the current value of an exceeded limit, the units",
              " should be contained in the key, not the value.  For example, rather than",
              " {\"instanceLimit\": \"100/request\"}, should be returned as,",
              " {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of",
              " instances that can be created in a single (batch) request."
            ]
          },
          "RetryInfo:retry_delay": {
            "paramName": "retry_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " Clients should wait at least this long between retrying the same request."
            ]
          },
          "DebugInfo:stack_entries": {
            "paramName": "stack_entries",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The stack trace entries indicating where the error occurred."
            ]
          },
          "DebugInfo:detail": {
            "paramName": "detail",
            "paramType": "TYPE_STRING",
            "comments": [
              " Additional debugging information provided by the server."
            ]
          },
          "QuotaFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all quota violations."
            ]
          },
          "PreconditionFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all precondition violations."
            ]
          },
          "BadRequest:field_violations": {
            "paramName": "field_violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all violations in a client request."
            ]
          },
          "RequestInfo:request_id": {
            "paramName": "request_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " An opaque string that should only be interpreted by the service generating",
              " it. For example, it can be used to identify requests in the service's logs."
            ]
          },
          "RequestInfo:serving_data": {
            "paramName": "serving_data",
            "paramType": "TYPE_STRING",
            "comments": [
              " Any data that was used to serve this request. For example, an encrypted",
              " stack trace that can be sent back to the service provider for debugging."
            ]
          },
          "ResourceInfo:resource_type": {
            "paramName": "resource_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " A name for the type of resource being accessed, e.g. \"sql table\",",
              " \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL",
              " of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\"."
            ]
          },
          "ResourceInfo:resource_name": {
            "paramName": "resource_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the resource being accessed.  For example, a shared calendar",
              " name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current",
              " error is",
              " [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED]."
            ]
          },
          "ResourceInfo:owner": {
            "paramName": "owner",
            "paramType": "TYPE_STRING",
            "comments": [
              " The owner of the resource (optional).",
              " For example, \"user:<owner email>\" or \"project:<Google developer project",
              " id>\"."
            ]
          },
          "ResourceInfo:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " Describes what error is encountered when accessing this resource.",
              " For example, updating a cloud project may require the `writer` permission",
              " on the developer console project."
            ]
          },
          "Help:links": {
            "paramName": "links",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " URL(s) pointing to additional information on handling the current error."
            ]
          },
          "LocalizedMessage:locale": {
            "paramName": "locale",
            "paramType": "TYPE_STRING",
            "comments": [
              " The locale used following the specification defined at",
              " https://www.rfc-editor.org/rfc/bcp/bcp47.txt.",
              " Examples are: \"en-US\", \"fr-CH\", \"es-MX\""
            ]
          },
          "LocalizedMessage:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " The localized error message in the above locale."
            ]
          },
          "Messaging": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple messaging service that implements chat rooms and profile posts.",
              "",
              " This messaging service showcases the features that API clients",
              " generated by gapic-generators implement."
            ]
          },
          "Messaging:CreateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a room.",
              ""
            ]
          },
          "Messaging:GetRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Room with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a room.",
              ""
            ]
          },
          "Messaging:DeleteRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a room and all of its blurbs.",
              ""
            ]
          },
          "Messaging:ListRooms": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all chat rooms.",
              ""
            ]
          },
          "Messaging:CreateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a blurb. If the parent is a room, the blurb is understood to be a",
              " message in that room. If the parent is a profile, the blurb is understood",
              " to be a post on the profile.",
              ""
            ]
          },
          "Messaging:GetBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Blurb with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a blurb.",
              ""
            ]
          },
          "Messaging:DeleteBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a blurb.",
              ""
            ]
          },
          "Messaging:ListBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists blurbs for a specific chat room or user profile depending on the",
              " parent resource name.",
              ""
            ]
          },
          "Messaging:SearchBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method searches through all blurbs across all rooms and profiles",
              " for blurbs containing to words found in the query. Only posts that",
              " contain an exact match of a queried word will be returned.",
              ""
            ]
          },
          "Messaging:StreamBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This returns a stream that emits the blurbs that are created for a",
              " particular chat room or user profile.",
              ""
            ]
          },
          "Messaging:SendBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is a stream to create multiple blurbs. If an invalid blurb is",
              " requested to be created, the stream will close with an error.",
              ""
            ]
          },
          "Messaging:Connect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method starts a bidirectional stream that receives all blurbs that",
              " are being created after the stream has started and sends requests to create",
              " blurbs. If an invalid blurb is requested to be created, the stream will",
              " close with an error.",
              ""
            ]
          },
          "Room:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Room:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The human readable name of the chat room."
            ],
            "fieldBehavior": 2
          },
          "Room:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " The description of the chat room."
            ]
          },
          "Room:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the room was created."
            ],
            "fieldBehavior": 3
          },
          "Room:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the room was updated."
            ],
            "fieldBehavior": 3
          },
          "CreateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to create."
            ]
          },
          "GetRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "UpdateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to update."
            ]
          },
          "UpdateRoomRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "ListRoomsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of rooms return. Server may return fewer rooms",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListRoomsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListRooms` method."
            ]
          },
          "ListRoomsResponse:rooms": {
            "paramName": "rooms",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of rooms."
            ]
          },
          "ListRoomsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListRoomsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Messaging\\ListRooms` method to retrieve",
              " the next page of results."
            ]
          },
          "Blurb:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Blurb:user": {
            "paramName": "user",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the blurb's author."
            ],
            "fieldBehavior": 2
          },
          "Blurb:text": {
            "paramName": "text",
            "paramType": "TYPE_STRING",
            "comments": [
              " The textual content of this blurb."
            ]
          },
          "Blurb:image": {
            "paramName": "image",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The image content of this blurb."
            ]
          },
          "Blurb:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the blurb was created."
            ],
            "fieldBehavior": 3
          },
          "Blurb:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the blurb was updated."
            ],
            "fieldBehavior": 3
          },
          "Blurb:legacy_room_id": {
            "paramName": "legacy_room_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the room. This field is used to signal",
              " the use of the compound resource pattern",
              " `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`"
            ]
          },
          "Blurb:legacy_user_id": {
            "paramName": "legacy_user_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the user. This field is used to signal",
              " the use of the compound resource pattern",
              " `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`"
            ]
          },
          "CreateBlurbRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room or user profile that this blurb will",
              " be tied to."
            ],
            "fieldBehavior": 2
          },
          "CreateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to create."
            ]
          },
          "GetBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "UpdateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to update."
            ]
          },
          "UpdateBlurbRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine wich fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room or profile whos blurbs to list."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs to return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "ListBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
            ]
          },
          "ListBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of blurbs."
            ]
          },
          "ListBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\ListBlurbs` method to retrieve",
              " the next page of results."
            ]
          },
          "SearchBlurbsRequest:query": {
            "paramName": "query",
            "paramType": "TYPE_STRING",
            "comments": [
              " The query used to search for blurbs containing to words of this string.",
              " Only posts that contain an exact match of a queried word will be returned."
            ],
            "fieldBehavior": 2
          },
          "SearchBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
              " rooms and all profiles."
            ]
          },
          "SearchBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "SearchBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of",
              " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
            ]
          },
          "SearchBlurbsMetadata:retry_info": {
            "paramName": "retry_info",
            "paramType": ".google.rpc.RetryInfo",
            "comments": [
              " This signals to the client when to next poll for response."
            ]
          },
          "SearchBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Blurbs that matched the search query."
            ]
          },
          "SearchBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in SearchBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\SearchBlurbs` method to",
              " retrieve the next page of results."
            ]
          },
          "StreamBlurbsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of a chat room or user profile whose blurbs to stream."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsRequest:expire_time": {
            "paramName": "expire_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time at which this stream will close."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsResponse:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb that was either created, updated, or deleted."
            ]
          },
          "StreamBlurbsResponse:action": {
            "paramName": "action",
            "paramType": ".google.showcase.v1beta1.StreamBlurbsResponse.Action",
            "comments": [
              " The action that triggered the blurb to be returned."
            ]
          },
          "SendBlurbsResponse:names": {
            "paramName": "names",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The names of successful blurb creations."
            ]
          },
          "ConnectRequest:config": {
            "paramName": "config",
            "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
            "comments": [
              " Provides information that specifies how to process subsequent requests.",
              " The first `ConnectRequest` message must contain a `config`  message."
            ]
          },
          "ConnectRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to be created."
            ]
          },
          "SequenceService": {
            "paramName": "",
            "paramType": "",
            "comments": []
          },
          "SequenceService:CreateSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a sequence.",
              ""
            ]
          },
          "SequenceService:GetSequenceReport": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves a sequence.",
              ""
            ]
          },
          "SequenceService:AttemptSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Attempts a sequence.",
              ""
            ]
          },
          "Sequence:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "Sequence:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Sequence of responses to return in order for each attempt. If empty, the",
              " default response is an immediate OK."
            ]
          },
          "SequenceReport:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "SequenceReport:attempts": {
            "paramName": "attempts",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The set of RPC attempts received by the server for a Sequence."
            ]
          },
          "CreateSequenceRequest:sequence": {
            "paramName": "sequence",
            "paramType": ".google.showcase.v1beta1.Sequence",
            "comments": []
          },
          "AttemptSequenceRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "GetSequenceReportRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "Testing": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A service to facilitate running discrete sets of tests",
              " against Showcase."
            ]
          },
          "Testing:CreateSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a new testing session.",
              ""
            ]
          },
          "Testing:GetSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets a testing session.",
              ""
            ]
          },
          "Testing:ListSessions": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists the current test sessions.",
              ""
            ]
          },
          "Testing:DeleteSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Delete a test session.",
              ""
            ]
          },
          "Testing:ReportSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Report on the status of a session.",
              " This generates a report detailing which tests have been completed,",
              " and an overall rollup.",
              ""
            ]
          },
          "Testing:ListTests": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " List the tests of a sessesion.",
              ""
            ]
          },
          "Testing:DeleteTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Explicitly decline to implement a test.",
              "",
              " This removes the test from subsequent `ListTests` calls, and",
              " attempting to do the test will error.",
              "",
              " This method will error if attempting to delete a required test.",
              ""
            ]
          },
          "Testing:VerifyTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Register a response to a test.",
              "",
              " In cases where a test involves registering a final answer at the",
              " end of the test, this method provides the means to do so.",
              ""
            ]
          },
          "Session:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the session. The ID must conform to ^[a-z]+$",
              " If this is not provided, Showcase chooses one at random."
            ]
          },
          "Session:version": {
            "paramName": "version",
            "paramType": ".google.showcase.v1beta1.Session.Version",
            "comments": [
              " Required. The version this session is using."
            ]
          },
          "CreateSessionRequest:session": {
            "paramName": "session",
            "paramType": ".google.showcase.v1beta1.Session",
            "comments": [
              " The session to be created.",
              " Sessions are immutable once they are created (although they can",
              " be deleted)."
            ]
          },
          "GetSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be retrieved."
            ]
          },
          "ListSessionsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of sessions to return per page."
            ]
          },
          "ListSessionsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListSessionsResponse:sessions": {
            "paramName": "sessions",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The sessions being returned."
            ]
          },
          "ListSessionsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "DeleteSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be deleted."
            ]
          },
          "ReportSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be reported on."
            ]
          },
          "ReportSessionResponse:result": {
            "paramName": "result",
            "paramType": ".google.showcase.v1beta1.ReportSessionResponse.Result",
            "comments": [
              " The state of the report."
            ]
          },
          "ReportSessionResponse:test_runs": {
            "paramName": "test_runs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The test runs of this session."
            ]
          },
          "Test:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "Test:expectation_level": {
            "paramName": "expectation_level",
            "paramType": ".google.showcase.v1beta1.Test.ExpectationLevel",
            "comments": [
              " The expectation level for this test."
            ]
          },
          "Test:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the test."
            ]
          },
          "Test:blueprints": {
            "paramName": "blueprints",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The blueprints that will satisfy this test. There may be multiple blueprints",
              " that can signal to the server that this test case is being exercised. Although",
              " multiple blueprints are specified, only a single blueprint needs to be run to",
              " signal that the test case was exercised."
            ]
          },
          "Issue:type": {
            "paramName": "type",
            "paramType": ".google.showcase.v1beta1.Issue.Type",
            "comments": [
              " The type of the issue."
            ]
          },
          "Issue:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Issue.Severity",
            "comments": [
              " The severity of the issue."
            ]
          },
          "Issue:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the issue."
            ]
          },
          "ListTestsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session."
            ]
          },
          "ListTestsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of tests to return per page."
            ]
          },
          "ListTestsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListTestsResponse:tests": {
            "paramName": "tests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The tests being returned."
            ]
          },
          "ListTestsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "TestRun:test": {
            "paramName": "test",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "TestRun:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue found with the test run. If empty, this test run was successful."
            ]
          },
          "DeleteTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to be deleted."
            ]
          },
          "VerifyTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to have an answer registered to it."
            ]
          },
          "VerifyTestRequest:answer": {
            "paramName": "answer",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The answer from the test."
            ]
          },
          "VerifyTestRequest:answers": {
            "paramName": "answers",
            "paramType": "TYPE_BYTES[]",
            "comments": [
              " The answers from the test if multiple are to be checked"
            ]
          },
          "VerifyTestResponse:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue if check answer was unsuccessful. This will be empty if the check answer succeeded."
            ]
          }
        }
      },
      "retryableCodeMap": {
        "codeEnumMapping": {
          "0": "OK",
          "1": "CANCELLED",
          "2": "UNKNOWN",
          "3": "INVALID_ARGUMENT",
          "4": "DEADLINE_EXCEEDED",
          "5": "NOT_FOUND",
          "6": "ALREADY_EXISTS",
          "7": "PERMISSION_DENIED",
          "8": "RESOURCE_EXHAUSTED",
          "9": "FAILED_PRECONDITION",
          "10": "ABORTED",
          "11": "OUT_OF_RANGE",
          "12": "UNIMPLEMENTED",
          "13": "INTERNAL",
          "14": "UNAVAILABLE",
          "15": "DATA_LOSS",
          "16": "UNAUTHENTICATED",
          "OK": "0",
          "CANCELLED": "1",
          "UNKNOWN": "2",
          "INVALID_ARGUMENT": "3",
          "DEADLINE_EXCEEDED": "4",
          "NOT_FOUND": "5",
          "ALREADY_EXISTS": "6",
          "PERMISSION_DENIED": "7",
          "RESOURCE_EXHAUSTED": "8",
          "FAILED_PRECONDITION": "9",
          "ABORTED": "10",
          "OUT_OF_RANGE": "11",
          "UNIMPLEMENTED": "12",
          "INTERNAL": "13",
          "UNAVAILABLE": "14",
          "DATA_LOSS": "15",
          "UNAUTHENTICATED": "16"
        },
        "uniqueCodesNamesMap": {
          "": "non_idempotent",
          "deadline_exceeded_unavailable": "idempotent"
        },
        "prettyCodesNamesMap": {
          "non_idempotent": [],
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ]
        },
        "uniqueParamsNamesMap": {
          "94312e9926796a52a8fcbbedaac41972e07ccd1c": "default"
        },
        "prettyParamNamesMap": {
          "default": {
            "initial_retry_delay_millis": 100,
            "retry_delay_multiplier": 1.3,
            "max_retry_delay_millis": 60000,
            "initial_rpc_timeout_millis": 60000,
            "rpc_timeout_multiplier": 1,
            "max_rpc_timeout_millis": 60000,
            "total_timeout_millis": 600000
          }
        }
      },
      "grpcServiceConfig": {},
      "bundleConfigs": [],
      "bundleConfigsMethods": [],
      "simpleMethods": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateRoomRequest",
          "outputInterface": ".google.showcase.v1beta1.Room",
          "comments": [
            " Creates a room.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateRoom",
          "inputType": ".google.showcase.v1beta1.CreateRoomRequest",
          "outputType": ".google.showcase.v1beta1.Room",
          "options": {
            ".google.api.methodSignature": [
              "room.display_name,room.description"
            ],
            ".google.api.http": {
              "post": "/v1beta1/rooms",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "room",
              "paramType": ".google.showcase.v1beta1.Room",
              "comments": [
                " The room to create."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetRoomRequest",
          "outputInterface": ".google.showcase.v1beta1.Room",
          "comments": [
            " Retrieves the Room with the given resource name.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetRoom",
          "inputType": ".google.showcase.v1beta1.GetRoomRequest",
          "outputType": ".google.showcase.v1beta1.Room",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=rooms/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested room."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.UpdateRoomRequest",
          "outputInterface": ".google.showcase.v1beta1.Room",
          "comments": [
            " Updates a room.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "UpdateRoom",
          "inputType": ".google.showcase.v1beta1.UpdateRoomRequest",
          "outputType": ".google.showcase.v1beta1.Room",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/{room.name=rooms/*}",
              "body": "room",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "room",
              "paramType": ".google.showcase.v1beta1.Room",
              "comments": [
                " The room to update."
              ]
            },
            {
              "paramName": "update_mask",
              "paramType": ".google.protobuf.FieldMask",
              "comments": [
                " The field mask to determine which fields are to be updated. If empty, the",
                " server will assume all fields are to be updated."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "room",
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteRoomRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Deletes a room and all of its blurbs.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteRoom",
          "inputType": ".google.showcase.v1beta1.DeleteRoomRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "delete": "/v1beta1/{name=rooms/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested room."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.Blurb",
          "comments": [
            " Creates a blurb. If the parent is a room, the blurb is understood to be a",
            " message in that room. If the parent is a profile, the blurb is understood",
            " to be a post on the profile.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateBlurb",
          "inputType": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.Blurb",
          "options": {
            ".google.api.methodSignature": [
              "parent,blurb.user,blurb.text",
              "parent,blurb.user,blurb.image"
            ],
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs",
                  "body": "*"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the chat room or user profile that this blurb will",
                " be tied to."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to create."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.Blurb",
          "comments": [
            " Retrieves the Blurb with the given resource name.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetBlurb",
          "inputType": ".google.showcase.v1beta1.GetBlurbRequest",
          "outputType": ".google.showcase.v1beta1.Blurb",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=rooms/*/blurbs/*}",
              "additionalBindings": [
                {
                  "get": "/v1beta1/{name=users/*/profile/blurbs/*}"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested blurb."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.UpdateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.Blurb",
          "comments": [
            " Updates a blurb.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "UpdateBlurb",
          "inputType": ".google.showcase.v1beta1.UpdateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.Blurb",
          "options": {
            ".google.api.http": {
              "patch": "/v1beta1/{blurb.name=rooms/*/blurbs/*}",
              "body": "blurb",
              "additionalBindings": [
                {
                  "patch": "/v1beta1/{blurb.name=users/*/profile/blurbs/*}",
                  "body": "blurb"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to update."
              ]
            },
            {
              "paramName": "update_mask",
              "paramType": ".google.protobuf.FieldMask",
              "comments": [
                " The field mask to determine wich fields are to be updated. If empty, the",
                " server will assume all fields are to be updated."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "blurb",
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteBlurbRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Deletes a blurb.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteBlurb",
          "inputType": ".google.showcase.v1beta1.DeleteBlurbRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "delete": "/v1beta1/{name=rooms/*/blurbs/*}",
              "additionalBindings": [
                {
                  "delete": "/v1beta1/{name=users/*/profile/blurbs/*}"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested blurb."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "longRunning": [
        {
          "longRunning": {
            "responseType": "SearchBlurbsResponse",
            "metadataType": "SearchBlurbsMetadata"
          },
          "longRunningResponseType": ".google.showcase.v1beta1.SearchBlurbsResponse",
          "longRunningMetadataType": ".google.showcase.v1beta1.SearchBlurbsMetadata",
          "inputInterface": ".google.showcase.v1beta1.SearchBlurbsRequest",
          "outputInterface": ".google.longrunning.Operation",
          "comments": [
            " This method searches through all blurbs across all rooms and profiles",
            " for blurbs containing to words found in the query. Only posts that",
            " contain an exact match of a queried word will be returned.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "SearchBlurbs",
          "inputType": ".google.showcase.v1beta1.SearchBlurbsRequest",
          "outputType": ".google.longrunning.Operation",
          "options": {
            ".google.longrunning.operationInfo": {
              "responseType": "SearchBlurbsResponse",
              "metadataType": "SearchBlurbsMetadata"
            },
            ".google.api.methodSignature": [
              "parent,query"
            ],
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs:search",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs:search"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "query",
              "paramType": "TYPE_STRING",
              "comments": [
                " The query used to search for blurbs containing to words of this string.",
                " Only posts that contain an exact match of a queried word will be returned."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
                " rooms and all profiles."
              ]
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of blurbs return. Server may return fewer",
                " blurbs than requested. If unspecified, server will pick an appropriate",
                " default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of",
                " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        }
      ],
      "diregapicLRO": [],
      "streaming": [
        {
          "streaming": "SERVER_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.StreamBlurbsRequest",
          "outputInterface": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "comments": [
            " This returns a stream that emits the blurbs that are created for a",
            " particular chat room or user profile.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "StreamBlurbs",
          "inputType": ".google.showcase.v1beta1.StreamBlurbsRequest",
          "outputType": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=rooms/*}/blurbs:stream",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{name=users/*/profile}/blurbs:stream",
                  "body": "*"
                }
              ]
            }
          },
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of a chat room or user profile whose blurbs to stream."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "expire_time",
              "paramType": ".google.protobuf.Timestamp",
              "comments": [
                " The time at which this stream will close."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "streaming": "CLIENT_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.SendBlurbsResponse",
          "comments": [
            " This is a stream to create multiple blurbs. If an invalid blurb is",
            " requested to be created, the stream will close with an error.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "SendBlurbs",
          "inputType": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.SendBlurbsResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs:send",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs:send",
                  "body": "*"
                }
              ]
            }
          },
          "clientStreaming": true,
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the chat room or user profile that this blurb will",
                " be tied to."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to create."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "streaming": "BIDI_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.ConnectRequest",
          "outputInterface": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "comments": [
            " This method starts a bidirectional stream that receives all blurbs that",
            " are being created after the stream has started and sends requests to create",
            " blurbs. If an invalid blurb is requested to be created, the stream will",
            " close with an error.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Connect",
          "inputType": ".google.showcase.v1beta1.ConnectRequest",
          "outputType": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "clientStreaming": true,
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "config",
              "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
              "comments": [
                " Provides information that specifies how to process subsequent requests.",
                " The first `ConnectRequest` message must contain a `config`  message."
              ]
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to be created."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "clientStreaming": [
        {
          "streaming": "CLIENT_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputInterface": ".google.showcase.v1beta1.SendBlurbsResponse",
          "comments": [
            " This is a stream to create multiple blurbs. If an invalid blurb is",
            " requested to be created, the stream will close with an error.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "SendBlurbs",
          "inputType": ".google.showcase.v1beta1.CreateBlurbRequest",
          "outputType": ".google.showcase.v1beta1.SendBlurbsResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{parent=rooms/*}/blurbs:send",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{parent=users/*/profile}/blurbs:send",
                  "body": "*"
                }
              ]
            }
          },
          "clientStreaming": true,
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the chat room or user profile that this blurb will",
                " be tied to."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to create."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        }
      ],
      "serverStreaming": [
        {
          "streaming": "SERVER_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.StreamBlurbsRequest",
          "outputInterface": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "comments": [
            " This returns a stream that emits the blurbs that are created for a",
            " particular chat room or user profile.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "StreamBlurbs",
          "inputType": ".google.showcase.v1beta1.StreamBlurbsRequest",
          "outputType": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=rooms/*}/blurbs:stream",
              "body": "*",
              "additionalBindings": [
                {
                  "post": "/v1beta1/{name=users/*/profile}/blurbs:stream",
                  "body": "*"
                }
              ]
            }
          },
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of a chat room or user profile whose blurbs to stream."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "expire_time",
              "paramType": ".google.protobuf.Timestamp",
              "comments": [
                " The time at which this stream will close."
              ],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "bidiStreaming": [
        {
          "streaming": "BIDI_STREAMING",
          "inputInterface": ".google.showcase.v1beta1.ConnectRequest",
          "outputInterface": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "comments": [
            " This method starts a bidirectional stream that receives all blurbs that",
            " are being created after the stream has started and sends requests to create",
            " blurbs. If an invalid blurb is requested to be created, the stream will",
            " close with an error.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "Connect",
          "inputType": ".google.showcase.v1beta1.ConnectRequest",
          "outputType": ".google.showcase.v1beta1.StreamBlurbsResponse",
          "clientStreaming": true,
          "serverStreaming": true,
          "paramComment": [
            {
              "paramName": "config",
              "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
              "comments": [
                " Provides information that specifies how to process subsequent requests.",
                " The first `ConnectRequest` message must contain a `config`  message."
              ]
            },
            {
              "paramName": "blurb",
              "paramType": ".google.showcase.v1beta1.Blurb",
              "comments": [
                " The blurb to be created."
              ]
            }
          ],
          "headerRequestParams": []
        }
      ],
      "paging": [
        {
          "pagingFieldName": "rooms",
          "pagingResponseType": ".google.showcase.v1beta1.Room",
          "inputInterface": ".google.showcase.v1beta1.ListRoomsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListRoomsResponse",
          "comments": [
            " Lists all chat rooms.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListRooms",
          "inputType": ".google.showcase.v1beta1.ListRoomsRequest",
          "outputType": ".google.showcase.v1beta1.ListRoomsResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/rooms",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of rooms return. Server may return fewer rooms",
                " than requested. If unspecified, server will pick an appropriate default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Messaging\\ListRooms` method."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "pagingFieldName": "blurbs",
          "pagingResponseType": ".google.showcase.v1beta1.Blurb",
          "inputInterface": ".google.showcase.v1beta1.ListBlurbsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListBlurbsResponse",
          "comments": [
            " Lists blurbs for a specific chat room or user profile depending on the",
            " parent resource name.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListBlurbs",
          "inputType": ".google.showcase.v1beta1.ListBlurbsRequest",
          "outputType": ".google.showcase.v1beta1.ListBlurbsResponse",
          "options": {
            ".google.api.methodSignature": [
              "parent"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{parent=rooms/*}/blurbs",
              "additionalBindings": [
                {
                  "get": "/v1beta1/{parent=users/*/profile}/blurbs"
                }
              ]
            }
          },
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The resource name of the requested room or profile whos blurbs to list."
              ],
              "fieldBehavior": 2
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of blurbs to return. Server may return fewer",
                " blurbs than requested. If unspecified, server will pick an appropriate",
                " default."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
                " returned from the previous call to",
                " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        }
      ],
      "hostname": "localhost",
      "port": 7469,
      "oauthScopes": [],
      "pathTemplates": [
        {
          "name": "Blueprint",
          "params": [
            "session",
            "test",
            "blueprint"
          ],
          "type": "showcase.googleapis.com/Blueprint",
          "pattern": [
            "sessions/{session}/tests/{test}/blueprints/{blueprint}"
          ]
        },
        {
          "name": "Room",
          "params": [
            "room"
          ],
          "type": "showcase.googleapis.com/Room",
          "pattern": [
            "rooms/{room}"
          ]
        },
        {
          "name": "room_blurb",
          "params": [
            "room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "room_blurbs_legacy_room_blurb",
          "params": [
            "room",
            "legacy_room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "Sequence",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/Sequence",
          "pattern": [
            "sequences/{sequence}"
          ]
        },
        {
          "name": "SequenceReport",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/SequenceReport",
          "pattern": [
            "sequences/{sequence}/sequenceReport"
          ]
        },
        {
          "name": "Session",
          "params": [
            "session"
          ],
          "type": "showcase.googleapis.com/Session",
          "pattern": [
            "sessions/{session}"
          ]
        },
        {
          "name": "Test",
          "params": [
            "session",
            "test"
          ],
          "type": "showcase.googleapis.com/Test",
          "pattern": [
            "sessions/{session}/tests/{test}"
          ]
        },
        {
          "name": "User",
          "params": [
            "user"
          ],
          "type": "showcase.googleapis.com/User",
          "pattern": [
            "users/{user}"
          ]
        },
        {
          "name": "user_profile_blurb",
          "params": [
            "user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "user_profile_blurbs_legacy_user_blurb",
          "params": [
            "user",
            "legacy_user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        }
      ]
    },
    {
      "name": "SequenceService",
      "method": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateSequenceRequest",
          "outputInterface": ".google.showcase.v1beta1.Sequence",
          "comments": [
            " Creates a sequence.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateSequence",
          "inputType": ".google.showcase.v1beta1.CreateSequenceRequest",
          "outputType": ".google.showcase.v1beta1.Sequence",
          "options": {
            ".google.api.methodSignature": [
              "sequence"
            ],
            ".google.api.http": {
              "post": "/v1beta1/sequences",
              "body": "sequence",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "sequence",
              "paramType": ".google.showcase.v1beta1.Sequence",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetSequenceReportRequest",
          "outputInterface": ".google.showcase.v1beta1.SequenceReport",
          "comments": [
            " Retrieves a sequence.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetSequenceReport",
          "inputType": ".google.showcase.v1beta1.GetSequenceReportRequest",
          "outputType": ".google.showcase.v1beta1.SequenceReport",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=sequences/*/sequenceReport}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.AttemptSequenceRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Attempts a sequence.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "AttemptSequence",
          "inputType": ".google.showcase.v1beta1.AttemptSequenceRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "post": "/v1beta1/{name=sequences/*}",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "options": {
        ".google.api.defaultHost": "localhost:7469"
      },
      "packageName": "google.showcase.v1beta1",
      "protoFile": "google/showcase/v1beta1/sequence.proto",
      "IAMPolicyMixin": 0,
      "LocationMixin": 0,
      "comments": [],
      "commentsMap": {
        "comments": {
          "Http:rules": {
            "paramName": "rules",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of HTTP configuration rules that apply to individual API methods.",
              "",
              " **NOTE:** All service configuration rules follow \"last one wins\" order."
            ]
          },
          "Http:fully_decode_reserved_expansion": {
            "paramName": "fully_decode_reserved_expansion",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When set to true, URL path parameters will be fully URI-decoded except in",
              " cases of single segment matches in reserved expansion, where \"%2F\" will be",
              " left encoded.",
              "",
              " The default behavior is to not decode RFC 6570 reserved characters in multi",
              " segment matches."
            ]
          },
          "HttpRule:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " Selects a method to which this rule applies.",
              "",
              " Refer to [selector][google.api.DocumentationRule.selector] for syntax",
              " details."
            ]
          },
          "HttpRule:get": {
            "paramName": "get",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP GET. Used for listing and getting information about",
              " resources."
            ]
          },
          "HttpRule:put": {
            "paramName": "put",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PUT. Used for replacing a resource."
            ]
          },
          "HttpRule:post": {
            "paramName": "post",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP POST. Used for creating a resource or performing an action."
            ]
          },
          "HttpRule:delete": {
            "paramName": "delete",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP DELETE. Used for deleting a resource."
            ]
          },
          "HttpRule:patch": {
            "paramName": "patch",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PATCH. Used for updating a resource."
            ]
          },
          "HttpRule:custom": {
            "paramName": "custom",
            "paramType": ".google.api.CustomHttpPattern",
            "comments": [
              " The custom pattern is used for specifying an HTTP method that is not",
              " included in the `pattern` field, such as HEAD, or \"*\" to leave the",
              " HTTP method unspecified for this rule. The wild-card rule is useful",
              " for services that provide content to Web (HTML) clients."
            ]
          },
          "HttpRule:body": {
            "paramName": "body",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the request field whose value is mapped to the HTTP request",
              " body, or `*` for mapping all request fields not captured by the path",
              " pattern to the HTTP body, or omitted for not having any HTTP request body.",
              "",
              " NOTE: the referred field must be present at the top-level of the request",
              " message type."
            ]
          },
          "HttpRule:response_body": {
            "paramName": "response_body",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The name of the response field whose value is mapped to the HTTP",
              " response body. When omitted, the entire response message will be used",
              " as the HTTP response body.",
              "",
              " NOTE: The referred field must be present at the top-level of the response",
              " message type."
            ]
          },
          "HttpRule:additional_bindings": {
            "paramName": "additional_bindings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional HTTP bindings for the selector. Nested bindings must",
              " not contain an `additional_bindings` field themselves (that is,",
              " the nesting may only be one level deep)."
            ]
          },
          "CustomHttpPattern:kind": {
            "paramName": "kind",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of this custom HTTP verb."
            ]
          },
          "CustomHttpPattern:path": {
            "paramName": "path",
            "paramType": "TYPE_STRING",
            "comments": [
              " The path matched by this custom verb."
            ]
          },
          "FileDescriptorSet:file": {
            "paramName": "file",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:package": {
            "paramName": "package",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:dependency": {
            "paramName": "dependency",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Names of files imported by this file."
            ]
          },
          "FileDescriptorProto:public_dependency": {
            "paramName": "public_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the public imported files in the dependency list above."
            ]
          },
          "FileDescriptorProto:weak_dependency": {
            "paramName": "weak_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the weak imported files in the dependency list.",
              " For Google-internal migration only. Do not use."
            ]
          },
          "FileDescriptorProto:message_type": {
            "paramName": "message_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " All top-level definitions in this file."
            ]
          },
          "FileDescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:service": {
            "paramName": "service",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FileOptions",
            "comments": []
          },
          "FileDescriptorProto:source_code_info": {
            "paramName": "source_code_info",
            "paramType": ".google.protobuf.SourceCodeInfo",
            "comments": [
              " This field contains optional information about the original source code.",
              " You may safely remove this entire field without harming runtime",
              " functionality of the descriptors -- the information is needed only by",
              " development tools."
            ]
          },
          "FileDescriptorProto:syntax": {
            "paramName": "syntax",
            "paramType": "TYPE_STRING",
            "comments": [
              " The syntax of the proto file.",
              " The supported values are \"proto2\", \"proto3\", and \"editions\".",
              "",
              " If `edition` is present, this value must be \"editions\"."
            ]
          },
          "FileDescriptorProto:edition": {
            "paramName": "edition",
            "paramType": "TYPE_STRING",
            "comments": [
              " The edition of the proto file, which is an opaque string."
            ]
          },
          "DescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "DescriptorProto:field": {
            "paramName": "field",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:nested_type": {
            "paramName": "nested_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension_range": {
            "paramName": "extension_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:oneof_decl": {
            "paramName": "oneof_decl",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MessageOptions",
            "comments": []
          },
          "DescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved field names, which may not be used by fields in the same message.",
              " A given name may only be reserved once."
            ]
          },
          "ExtensionRangeOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ExtensionRangeOptions:declaration": {
            "paramName": "declaration",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " For external users: DO NOT USE. We are in the process of open sourcing",
              " extension declaration and executing internal cleanups before it can be",
              " used externally."
            ]
          },
          "ExtensionRangeOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ExtensionRangeOptions:verification": {
            "paramName": "verification",
            "paramType": ".google.protobuf.ExtensionRangeOptions.VerificationState",
            "comments": [
              " The verification state of the range.",
              " TODO(b/278783756): flip the default to DECLARATION once all empty ranges",
              " are marked as UNVERIFIED."
            ]
          },
          "FieldDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FieldDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "FieldDescriptorProto:label": {
            "paramName": "label",
            "paramType": ".google.protobuf.FieldDescriptorProto.Label",
            "comments": []
          },
          "FieldDescriptorProto:type": {
            "paramName": "type",
            "paramType": ".google.protobuf.FieldDescriptorProto.Type",
            "comments": [
              " If type_name is set, this need not be set.  If both this and type_name",
              " are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
            ]
          },
          "FieldDescriptorProto:type_name": {
            "paramName": "type_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " For message and enum types, this is the name of the type.  If the name",
              " starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping",
              " rules are used to find the type (i.e. first the nested types within this",
              " message are searched, then within the parent, on up to the root",
              " namespace)."
            ]
          },
          "FieldDescriptorProto:extendee": {
            "paramName": "extendee",
            "paramType": "TYPE_STRING",
            "comments": [
              " For extensions, this is the name of the type being extended.  It is",
              " resolved in the same manner as type_name."
            ]
          },
          "FieldDescriptorProto:default_value": {
            "paramName": "default_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " For numeric types, contains the original text representation of the value.",
              " For booleans, \"true\" or \"false\".",
              " For strings, contains the default text contents (not escaped in any way).",
              " For bytes, contains the C escaped value.  All bytes >= 128 are escaped."
            ]
          },
          "FieldDescriptorProto:oneof_index": {
            "paramName": "oneof_index",
            "paramType": "TYPE_INT32",
            "comments": [
              " If set, gives the index of a oneof in the containing type's oneof_decl",
              " list.  This field is a member of that oneof."
            ]
          },
          "FieldDescriptorProto:json_name": {
            "paramName": "json_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " JSON name of this field. The value is set by protocol compiler. If the",
              " user has set a \"json_name\" option on this field, that option's value",
              " will be used. Otherwise, it's deduced from the field's name by converting",
              " it to camelCase."
            ]
          },
          "FieldDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FieldOptions",
            "comments": []
          },
          "FieldDescriptorProto:proto3_optional": {
            "paramName": "proto3_optional",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, this is a proto3 \"optional\". When a proto3 field is optional, it",
              " tracks presence regardless of field type.",
              "",
              " When proto3_optional is true, this field must be belong to a oneof to",
              " signal to old proto3 clients that presence is tracked for this field. This",
              " oneof is known as a \"synthetic\" oneof, and this field must be its sole",
              " member (each proto3 optional field gets its own synthetic oneof). Synthetic",
              " oneofs exist in the descriptor only, and do not generate any API. Synthetic",
              " oneofs must be ordered after all \"real\" oneofs.",
              "",
              " For message fields, proto3_optional doesn't create any semantic change,",
              " since non-repeated message fields always track presence. However it still",
              " indicates the semantic detail of whether the user wrote \"optional\" or not.",
              " This can be useful for round-tripping the .proto file. For consistency we",
              " give message fields a synthetic oneof also, even though it is not required",
              " to track presence. This is especially important because the parser can't",
              " tell if a field is a message or an enum, so it must always create a",
              " synthetic oneof.",
              "",
              " Proto2 optional fields do not set this flag, because they already indicate",
              " optional with `LABEL_OPTIONAL`."
            ]
          },
          "OneofDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "OneofDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.OneofOptions",
            "comments": []
          },
          "EnumDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumDescriptorProto:value": {
            "paramName": "value",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "EnumDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumOptions",
            "comments": []
          },
          "EnumDescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Range of reserved numeric values. Reserved numeric values may not be used",
              " by enum values in the same enum declaration. Reserved ranges may not",
              " overlap."
            ]
          },
          "EnumDescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved enum value names, which may not be reused. A given name may only",
              " be reserved once."
            ]
          },
          "EnumValueDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumValueDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "EnumValueDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumValueOptions",
            "comments": []
          },
          "ServiceDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ServiceDescriptorProto:method": {
            "paramName": "method",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ServiceDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.ServiceOptions",
            "comments": []
          },
          "MethodDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:input_type": {
            "paramName": "input_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Input and output type names.  These are resolved in the same way as",
              " FieldDescriptorProto.type_name, but must refer to a message type."
            ]
          },
          "MethodDescriptorProto:output_type": {
            "paramName": "output_type",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MethodOptions",
            "comments": []
          },
          "MethodDescriptorProto:client_streaming": {
            "paramName": "client_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if client streams multiple client messages"
            ]
          },
          "MethodDescriptorProto:server_streaming": {
            "paramName": "server_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if server streams multiple server messages"
            ]
          },
          "FileOptions:java_package": {
            "paramName": "java_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Java package where classes generated from this .proto will be",
              " placed.  By default, the proto package is used, but this is often",
              " inappropriate because proto packages do not normally start with backwards",
              " domain names."
            ]
          },
          "FileOptions:java_outer_classname": {
            "paramName": "java_outer_classname",
            "paramType": "TYPE_STRING",
            "comments": [
              " Controls the name of the wrapper Java class generated for the .proto file.",
              " That class will always contain the .proto file's getDescriptor() method as",
              " well as any top-level extensions defined in the .proto file.",
              " If java_multiple_files is disabled, then all the other classes from the",
              " .proto file will be nested inside the single wrapper outer class."
            ]
          },
          "FileOptions:java_multiple_files": {
            "paramName": "java_multiple_files",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If enabled, then the Java code generator will generate a separate .java",
              " file for each top-level message, enum, and service defined in the .proto",
              " file.  Thus, these types will *not* be nested inside the wrapper class",
              " named by java_outer_classname.  However, the wrapper class will still be",
              " generated to contain the file's getDescriptor() method as well as any",
              " top-level extensions defined in the file."
            ]
          },
          "FileOptions:java_generate_equals_and_hash": {
            "paramName": "java_generate_equals_and_hash",
            "paramType": "TYPE_BOOL",
            "comments": [
              " This option does nothing."
            ]
          },
          "FileOptions:java_string_check_utf8": {
            "paramName": "java_string_check_utf8",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If set true, then the Java2 code generator will generate code that",
              " throws an exception whenever an attempt is made to assign a non-UTF-8",
              " byte sequence to a string field.",
              " Message reflection will do the same.",
              " However, an extension field still accepts non-UTF-8 byte sequences.",
              " This option has no effect on when used with the lite runtime."
            ]
          },
          "FileOptions:optimize_for": {
            "paramName": "optimize_for",
            "paramType": ".google.protobuf.FileOptions.OptimizeMode",
            "comments": []
          },
          "FileOptions:go_package": {
            "paramName": "go_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Go package where structs generated from this .proto will be",
              " placed. If omitted, the Go package will be derived from the following:",
              "   - The basename of the package import path, if provided.",
              "   - Otherwise, the package statement in the .proto file, if present.",
              "   - Otherwise, the basename of the .proto file, without extension."
            ]
          },
          "FileOptions:cc_generic_services": {
            "paramName": "cc_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should generic services be generated in each language?  \"Generic\" services",
              " are not specific to any particular RPC system.  They are generated by the",
              " main code generators in each language (without additional plugins).",
              " Generic services were the only kind of service generation supported by",
              " early versions of google.protobuf.",
              "",
              " Generic services are now considered deprecated in favor of using plugins",
              " that generate code specific to your particular RPC system.  Therefore,",
              " these default to false.  Old code which depends on generic services should",
              " explicitly set them to true."
            ]
          },
          "FileOptions:java_generic_services": {
            "paramName": "java_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:py_generic_services": {
            "paramName": "py_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:php_generic_services": {
            "paramName": "php_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this file deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for everything in the file, or it will be completely ignored; in the very",
              " least, this is a formalization for deprecating files."
            ]
          },
          "FileOptions:cc_enable_arenas": {
            "paramName": "cc_enable_arenas",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the use of arenas for the proto messages in this file. This applies",
              " only to generated classes for C++."
            ]
          },
          "FileOptions:objc_class_prefix": {
            "paramName": "objc_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the objective c class prefix which is prepended to all objective c",
              " generated classes from this .proto. There is no default."
            ]
          },
          "FileOptions:csharp_namespace": {
            "paramName": "csharp_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Namespace for generated classes; defaults to the package."
            ]
          },
          "FileOptions:swift_prefix": {
            "paramName": "swift_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " By default Swift generators will take the proto package and CamelCase it",
              " replacing '.' with underscore and use that to prefix the types/symbols",
              " defined. When this options is provided, they will use this value instead",
              " to prefix the types/symbols defined."
            ]
          },
          "FileOptions:php_class_prefix": {
            "paramName": "php_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the php class prefix which is prepended to all php generated classes",
              " from this .proto. Default is empty."
            ]
          },
          "FileOptions:php_namespace": {
            "paramName": "php_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated classes. Default",
              " is empty. When this option is empty, the package name will be used for",
              " determining the namespace."
            ]
          },
          "FileOptions:php_metadata_namespace": {
            "paramName": "php_metadata_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated metadata classes.",
              " Default is empty. When this option is empty, the proto file name will be",
              " used for determining the namespace."
            ]
          },
          "FileOptions:ruby_package": {
            "paramName": "ruby_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the package of ruby generated classes. Default",
              " is empty. When this option is not set, the package name will be used for",
              " determining the ruby package."
            ]
          },
          "FileOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FileOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here.",
              " See the documentation for the \"Options\" section above."
            ]
          },
          "MessageOptions:message_set_wire_format": {
            "paramName": "message_set_wire_format",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set true to use the old proto1 MessageSet wire format for extensions.",
              " This is provided for backwards-compatibility with the MessageSet wire",
              " format.  You should not use this for any other reason:  It's less",
              " efficient, has fewer features, and is more complicated.",
              "",
              " The message must be defined exactly as follows:",
              "   message Foo {",
              "     option message_set_wire_format = true;",
              "     extensions 4 to max;",
              "   }",
              " Note that the message cannot have any defined fields; MessageSets only",
              " have extensions.",
              "",
              " All extensions of your type must be singular messages; e.g. they cannot",
              " be int32s, enums, or repeated messages.",
              "",
              " Because this is an option, the above two restrictions are not enforced by",
              " the protocol compiler."
            ]
          },
          "MessageOptions:no_standard_descriptor_accessor": {
            "paramName": "no_standard_descriptor_accessor",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Disables the generation of the standard \"descriptor()\" accessor, which can",
              " conflict with a field of the same name.  This is meant to make migration",
              " from proto1 easier; new code should avoid fields named \"descriptor\"."
            ]
          },
          "MessageOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this message deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the message, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating messages."
            ]
          },
          "MessageOptions:map_entry": {
            "paramName": "map_entry",
            "paramType": "TYPE_BOOL",
            "comments": [
              " NOTE: Do not set the option in .proto files. Always use the maps syntax",
              " instead. The option should only be implicitly set by the proto compiler",
              " parser.",
              "",
              " Whether the message is an automatically generated map entry type for the",
              " maps field.",
              "",
              " For maps fields:",
              "     map<KeyType, ValueType> map_field = 1;",
              " The parsed descriptor looks like:",
              "     message MapFieldEntry {",
              "         option map_entry = true;",
              "         optional KeyType key = 1;",
              "         optional ValueType value = 2;",
              "     }",
              "     repeated MapFieldEntry map_field = 1;",
              "",
              " Implementations may choose not to generate the map_entry=true message, but",
              " use a native map in the target language to hold the keys and values.",
              " The reflection APIs in such implementations still need to work as",
              " if the field is a repeated message field."
            ]
          },
          "MessageOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              "",
              " This should only be used as a temporary measure against broken builds due",
              " to the change in behavior for JSON field name conflicts.",
              "",
              " TODO(b/261750190) This is legacy behavior we plan to remove once downstream",
              " teams have had time to migrate."
            ]
          },
          "MessageOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MessageOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "FieldOptions:ctype": {
            "paramName": "ctype",
            "paramType": ".google.protobuf.FieldOptions.CType",
            "comments": [
              " The ctype option instructs the C++ code generator to use a different",
              " representation of the field than it normally would.  See the specific",
              " options below.  This option is only implemented to support use of",
              " [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of",
              " type \"bytes\" in the open source release -- sorry, we'll try to include",
              " other types in a future version!"
            ]
          },
          "FieldOptions:packed": {
            "paramName": "packed",
            "paramType": "TYPE_BOOL",
            "comments": [
              " The packed option can be enabled for repeated primitive fields to enable",
              " a more efficient representation on the wire. Rather than repeatedly",
              " writing the tag and type for each element, the entire array is encoded as",
              " a single length-delimited blob. In proto3, only explicit setting it to",
              " false will avoid using packed encoding."
            ]
          },
          "FieldOptions:jstype": {
            "paramName": "jstype",
            "paramType": ".google.protobuf.FieldOptions.JSType",
            "comments": [
              " The jstype option determines the JavaScript type used for values of the",
              " field.  The option is permitted only for 64 bit integral and fixed types",
              " (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING",
              " is represented as JavaScript string, which avoids loss of precision that",
              " can happen when a large value is converted to a floating point JavaScript.",
              " Specifying JS_NUMBER for the jstype causes the generated JavaScript code to",
              " use the JavaScript \"number\" type.  The behavior of the default option",
              " JS_NORMAL is implementation dependent.",
              "",
              " This option is an enum to permit additional types to be added, e.g.",
              " goog.math.Integer."
            ]
          },
          "FieldOptions:lazy": {
            "paramName": "lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should this field be parsed lazily?  Lazy applies only to message-type",
              " fields.  It means that when the outer message is initially parsed, the",
              " inner message's contents will not be parsed but instead stored in encoded",
              " form.  The inner message will actually be parsed when it is first accessed.",
              "",
              " This is only a hint.  Implementations are free to choose whether to use",
              " eager or lazy parsing regardless of the value of this option.  However,",
              " setting this option true suggests that the protocol author believes that",
              " using lazy parsing on this field is worth the additional bookkeeping",
              " overhead typically needed to implement it.",
              "",
              " This option does not affect the public interface of any generated code;",
              " all method signatures remain the same.  Furthermore, thread-safety of the",
              " interface is not affected by this option; const methods remain safe to",
              " call from multiple threads concurrently, while non-const methods continue",
              " to require exclusive access.",
              "",
              " Note that implementations may choose not to check required fields within",
              " a lazy sub-message.  That is, calling IsInitialized() on the outer message",
              " may return true even if the inner message has missing required fields.",
              " This is necessary because otherwise the inner message would have to be",
              " parsed in order to perform the check, defeating the purpose of lazy",
              " parsing.  An implementation which chooses not to check required fields",
              " must be consistent about it.  That is, for any particular sub-message, the",
              " implementation must either *always* check its required fields, or *never*",
              " check its required fields, regardless of whether or not the message has",
              " been parsed.",
              "",
              " As of May 2022, lazy verifies the contents of the byte stream during",
              " parsing.  An invalid byte stream will cause the overall parsing to fail."
            ]
          },
          "FieldOptions:unverified_lazy": {
            "paramName": "unverified_lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " unverified_lazy does no correctness checks on the byte stream. This should",
              " only be used where lazy with verification is prohibitive for performance",
              " reasons."
            ]
          },
          "FieldOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this field deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for accessors, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating fields."
            ]
          },
          "FieldOptions:weak": {
            "paramName": "weak",
            "paramType": "TYPE_BOOL",
            "comments": [
              " For Google-internal migration only. Do not use."
            ]
          },
          "FieldOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that the field value should not be printed out when using debug",
              " formats, e.g. when the field contains sensitive credentials."
            ]
          },
          "FieldOptions:retention": {
            "paramName": "retention",
            "paramType": ".google.protobuf.FieldOptions.OptionRetention",
            "comments": []
          },
          "FieldOptions:targets": {
            "paramName": "targets",
            "paramType": "TYPE_ENUM[]",
            "comments": []
          },
          "FieldOptions:edition_defaults": {
            "paramName": "edition_defaults",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FieldOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FieldOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "OneofOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "OneofOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumOptions:allow_alias": {
            "paramName": "allow_alias",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set this option to true to allow mapping different tag names to the same",
              " value."
            ]
          },
          "EnumOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating enums."
            ]
          },
          "EnumOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              " TODO(b/261750190) Remove this legacy behavior once downstream teams have",
              " had time to migrate."
            ]
          },
          "EnumOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumValueOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum value deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum value, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating enum values."
            ]
          },
          "EnumValueOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumValueOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that fields annotated with this enum value should not be printed",
              " out when using debug formats, e.g. when the field contains sensitive",
              " credentials."
            ]
          },
          "EnumValueOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ServiceOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ServiceOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this service deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the service, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating services."
            ]
          },
          "ServiceOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "MethodOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this method deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the method, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating methods."
            ]
          },
          "MethodOptions:idempotency_level": {
            "paramName": "idempotency_level",
            "paramType": ".google.protobuf.MethodOptions.IdempotencyLevel",
            "comments": []
          },
          "MethodOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MethodOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "UninterpretedOption:name": {
            "paramName": "name",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "UninterpretedOption:identifier_value": {
            "paramName": "identifier_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of the uninterpreted option, in whatever type the tokenizer",
              " identified it as during parsing. Exactly one of these should be set."
            ]
          },
          "UninterpretedOption:positive_int_value": {
            "paramName": "positive_int_value",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "UninterpretedOption:negative_int_value": {
            "paramName": "negative_int_value",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "UninterpretedOption:double_value": {
            "paramName": "double_value",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "UninterpretedOption:string_value": {
            "paramName": "string_value",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "UninterpretedOption:aggregate_value": {
            "paramName": "aggregate_value",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FeatureSet:field_presence": {
            "paramName": "field_presence",
            "paramType": ".google.protobuf.FeatureSet.FieldPresence",
            "comments": []
          },
          "FeatureSet:enum_type": {
            "paramName": "enum_type",
            "paramType": ".google.protobuf.FeatureSet.EnumType",
            "comments": []
          },
          "FeatureSet:repeated_field_encoding": {
            "paramName": "repeated_field_encoding",
            "paramType": ".google.protobuf.FeatureSet.RepeatedFieldEncoding",
            "comments": []
          },
          "FeatureSet:string_field_validation": {
            "paramName": "string_field_validation",
            "paramType": ".google.protobuf.FeatureSet.StringFieldValidation",
            "comments": []
          },
          "FeatureSet:message_encoding": {
            "paramName": "message_encoding",
            "paramType": ".google.protobuf.FeatureSet.MessageEncoding",
            "comments": []
          },
          "FeatureSet:json_format": {
            "paramName": "json_format",
            "paramType": ".google.protobuf.FeatureSet.JsonFormat",
            "comments": []
          },
          "FeatureSet:raw_features": {
            "paramName": "raw_features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": []
          },
          "SourceCodeInfo:location": {
            "paramName": "location",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A Location identifies a piece of source code in a .proto file which",
              " corresponds to a particular definition.  This information is intended",
              " to be useful to IDEs, code indexers, documentation generators, and similar",
              " tools.",
              "",
              " For example, say we have a file like:",
              "   message Foo {",
              "     optional string foo = 1;",
              "   }",
              " Let's look at just the field definition:",
              "   optional string foo = 1;",
              "   ^       ^^     ^^  ^  ^^^",
              "   a       bc     de  f  ghi",
              " We have the following locations:",
              "   span   path               represents",
              "   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.",
              "   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).",
              "   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).",
              "   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).",
              "   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).",
              "",
              " Notes:",
              " - A location may refer to a repeated field itself (i.e. not to any",
              "   particular index within it).  This is used whenever a set of elements are",
              "   logically enclosed in a single code segment.  For example, an entire",
              "   extend block (possibly containing multiple extension definitions) will",
              "   have an outer location whose path refers to the \"extensions\" repeated",
              "   field without an index.",
              " - Multiple locations may have the same path.  This happens when a single",
              "   logical declaration is spread out across multiple places.  The most",
              "   obvious example is the \"extend\" block again -- there may be multiple",
              "   extend blocks in the same scope, each of which will have the same path.",
              " - A location's span is not always a subset of its parent's span.  For",
              "   example, the \"extendee\" of an extension declaration appears at the",
              "   beginning of the \"extend\" block and is shared by all extensions within",
              "   the block.",
              " - Just because a location's span is a subset of some other location's span",
              "   does not mean that it is a descendant.  For example, a \"group\" defines",
              "   both a type and a field in a single declaration.  Thus, the locations",
              "   corresponding to the type and field and their components will overlap.",
              " - Code which tries to interpret locations should probably be designed to",
              "   ignore those that it doesn't understand, as more types of locations could",
              "   be recorded in the future."
            ]
          },
          "GeneratedCodeInfo:annotation": {
            "paramName": "annotation",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " An Annotation connects some span of text in generated code to an element",
              " of its generating .proto file."
            ]
          },
          "Duration:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Signed seconds of the span of time. Must be from -315,576,000,000",
              " to +315,576,000,000 inclusive. Note: these bounds are computed from:",
              " 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
            ]
          },
          "Duration:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Signed fractions of a second at nanosecond resolution of the span",
              " of time. Durations less than one second are represented with a 0",
              " `seconds` field and a positive or negative `nanos` field. For durations",
              " of one second or more, a non-zero value for the `nanos` field must be",
              " of the same sign as the `seconds` field. Must be from -999,999,999",
              " to +999,999,999 inclusive."
            ]
          },
          "CommonLanguageSettings:reference_docs_uri": {
            "paramName": "reference_docs_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to automatically generated reference documentation.  Example:",
              " https://cloud.google.com/nodejs/docs/reference/asset/latest"
            ]
          },
          "CommonLanguageSettings:destinations": {
            "paramName": "destinations",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " The destination where API teams want this client library to be published."
            ]
          },
          "ClientLibrarySettings:version": {
            "paramName": "version",
            "paramType": "TYPE_STRING",
            "comments": [
              " Version of the API to apply these settings to. This is the full protobuf",
              " package for the API, ending in the version element.",
              " Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\"."
            ]
          },
          "ClientLibrarySettings:launch_stage": {
            "paramName": "launch_stage",
            "paramType": ".google.api.LaunchStage",
            "comments": [
              " Launch stage of this version of the API."
            ]
          },
          "ClientLibrarySettings:rest_numeric_enums": {
            "paramName": "rest_numeric_enums",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When using transport=rest, the client request will encode enums as",
              " numbers rather than strings."
            ]
          },
          "ClientLibrarySettings:java_settings": {
            "paramName": "java_settings",
            "paramType": ".google.api.JavaSettings",
            "comments": [
              " Settings for legacy Java features, supported in the Service YAML."
            ]
          },
          "ClientLibrarySettings:cpp_settings": {
            "paramName": "cpp_settings",
            "paramType": ".google.api.CppSettings",
            "comments": [
              " Settings for C++ client libraries."
            ]
          },
          "ClientLibrarySettings:php_settings": {
            "paramName": "php_settings",
            "paramType": ".google.api.PhpSettings",
            "comments": [
              " Settings for PHP client libraries."
            ]
          },
          "ClientLibrarySettings:python_settings": {
            "paramName": "python_settings",
            "paramType": ".google.api.PythonSettings",
            "comments": [
              " Settings for Python client libraries."
            ]
          },
          "ClientLibrarySettings:node_settings": {
            "paramName": "node_settings",
            "paramType": ".google.api.NodeSettings",
            "comments": [
              " Settings for Node client libraries."
            ]
          },
          "ClientLibrarySettings:dotnet_settings": {
            "paramName": "dotnet_settings",
            "paramType": ".google.api.DotnetSettings",
            "comments": [
              " Settings for .NET client libraries."
            ]
          },
          "ClientLibrarySettings:ruby_settings": {
            "paramName": "ruby_settings",
            "paramType": ".google.api.RubySettings",
            "comments": [
              " Settings for Ruby client libraries."
            ]
          },
          "ClientLibrarySettings:go_settings": {
            "paramName": "go_settings",
            "paramType": ".google.api.GoSettings",
            "comments": [
              " Settings for Go client libraries."
            ]
          },
          "Publishing:method_settings": {
            "paramName": "method_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of API method settings, e.g. the behavior for methods that use the",
              " long-running operation pattern."
            ]
          },
          "Publishing:new_issue_uri": {
            "paramName": "new_issue_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to a *public* URI where users can report issues.  Example:",
              " https://issuetracker.google.com/issues/new?component=190865&template=1161103"
            ]
          },
          "Publishing:documentation_uri": {
            "paramName": "documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to product home page.  Example:",
              " https://cloud.google.com/asset-inventory/docs/overview"
            ]
          },
          "Publishing:api_short_name": {
            "paramName": "api_short_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " Used as a tracking tag when collecting data about the APIs developer",
              " relations artifacts like docs, packages delivered to package managers,",
              " etc.  Example: \"speech\"."
            ]
          },
          "Publishing:github_label": {
            "paramName": "github_label",
            "paramType": "TYPE_STRING",
            "comments": [
              " GitHub label to apply to issues and pull requests opened for this API."
            ]
          },
          "Publishing:codeowner_github_teams": {
            "paramName": "codeowner_github_teams",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " GitHub teams to be added to CODEOWNERS in the directory in GitHub",
              " containing source code for the client libraries for this API."
            ]
          },
          "Publishing:doc_tag_prefix": {
            "paramName": "doc_tag_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " A prefix used in sample code when demarking regions to be included in",
              " documentation."
            ]
          },
          "Publishing:organization": {
            "paramName": "organization",
            "paramType": ".google.api.ClientLibraryOrganization",
            "comments": [
              " For whom the client library is being published."
            ]
          },
          "Publishing:library_settings": {
            "paramName": "library_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Client library settings.  If the same version string appears multiple",
              " times in this list, then the last one wins.  Settings from earlier",
              " settings with the same version string are discarded."
            ]
          },
          "Publishing:proto_reference_documentation_uri": {
            "paramName": "proto_reference_documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional link to proto reference documentation.  Example:",
              " https://cloud.google.com/pubsub/lite/docs/reference/rpc"
            ]
          },
          "JavaSettings:library_package": {
            "paramName": "library_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " The package name to use in Java. Clobbers the java_package option",
              " set in the protobuf. This should be used **only** by APIs",
              " who have already set the language_settings.java.package_name\" field",
              " in gapic.yaml. API teams should use the protobuf java_package option",
              " where possible.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      library_package: com.google.cloud.pubsub.v1"
            ]
          },
          "JavaSettings:service_class_names": {
            "paramName": "service_class_names",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Configure the Java class name to use instead of the service's for its",
              " corresponding generated GAPIC client. Keys are fully-qualified",
              " service names as they appear in the protobuf (including the full",
              " the language_settings.java.interface_names\" field in gapic.yaml. API",
              " teams should otherwise use the service name as it appears in the",
              " protobuf.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      service_class_names:",
              "        - google.pubsub.v1.Publisher: TopicAdmin",
              "        - google.pubsub.v1.Subscriber: SubscriptionAdmin"
            ]
          },
          "JavaSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "CppSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PhpSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PythonSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "NodeSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:renamed_services": {
            "paramName": "renamed_services",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from original service names to renamed versions.",
              " This is used when the default generated types",
              " would cause a naming conflict. (Neither name is",
              " fully-qualified.)",
              " Example: Subscriber to SubscriberServiceApi."
            ]
          },
          "DotnetSettings:renamed_resources": {
            "paramName": "renamed_resources",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from full resource types to the effective short name",
              " for the resource. This is used when otherwise resource",
              " named from different services would cause naming collisions.",
              " Example entry:",
              " \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\""
            ]
          },
          "DotnetSettings:ignored_resources": {
            "paramName": "ignored_resources",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " List of full resource types to ignore during generation.",
              " This is typically used for API-specific Location resources,",
              " which should be handled by the generator as if they were actually",
              " the common Location resources.",
              " Example entry: \"documentai.googleapis.com/Location\""
            ]
          },
          "DotnetSettings:forced_namespace_aliases": {
            "paramName": "forced_namespace_aliases",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Namespaces which must be aliased in snippets due to",
              " a known (but non-generator-predictable) naming collision"
            ]
          },
          "DotnetSettings:handwritten_signatures": {
            "paramName": "handwritten_signatures",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Method signatures (in the form \"service.method(signature)\")",
              " which are provided separately, so shouldn't be generated.",
              " Snippets *calling* these methods are still generated, however."
            ]
          },
          "RubySettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "GoSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "MethodSettings:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " The fully qualified name of the method, for which the options below apply.",
              " This is used to find the method to apply the options."
            ]
          },
          "MethodSettings:long_running": {
            "paramName": "long_running",
            "paramType": ".google.api.MethodSettings.LongRunning",
            "comments": [
              " Describes settings to use for long-running operations when generating",
              " API methods for RPCs. Complements RPCs that use the annotations in",
              " google/longrunning/operations.proto.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    method_settings:",
              "      - selector: google.cloud.speech.v2.Speech.BatchRecognize",
              "        long_running:",
              "          initial_poll_delay:",
              "            seconds: 60 # 1 minute",
              "          poll_delay_multiplier: 1.5",
              "          max_poll_delay:",
              "            seconds: 360 # 6 minutes",
              "          total_poll_timeout:",
              "             seconds: 54000 # 90 minutes"
            ]
          },
          "Compliance": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
              " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
              " correctly."
            ]
          },
          "Compliance:RepeatDataBody": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the entire request object in the REST body.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyInfo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the a message-type field in the REST body. Per AIP-127, only",
              " top-level, non-repeated fields can be sent this way.",
              ""
            ]
          },
          "Compliance:RepeatDataQuery": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending all request fields as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataSimplePath": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending some parameters as \"simple\" path variables (i.e., of the form",
              " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataPathResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a path resource.",
              ""
            ]
          },
          "Compliance:RepeatDataPathTrailingResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a trailing resource.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPut": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PUT method.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPatch": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PATCH method.",
              ""
            ]
          },
          "Compliance:GetEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
              " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
              " response from this RPC as the request to VerifyEnum()",
              "",
              " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
              " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "Compliance:VerifyEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
              " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
              " with the same EnumResponse; otherwise, the RPC errors.",
              "",
              " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
              " although they are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "RepeatRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "RepeatRequest:info": {
            "paramName": "info",
            "paramType": ".google.showcase.v1beta1.ComplianceData",
            "comments": []
          },
          "RepeatRequest:server_verify": {
            "paramName": "server_verify",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, the server will verify that the received request matches",
              " the request with the same name in the compliance test suite."
            ]
          },
          "RepeatRequest:intended_binding_uri": {
            "paramName": "intended_binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template this request is expected to be bound to server-side."
            ]
          },
          "RepeatRequest:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": [
              " Some top level fields, to test that these are encoded correctly",
              " in query params."
            ]
          },
          "RepeatRequest:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatRequest:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "RepeatRequest:p_int64": {
            "paramName": "p_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.RepeatRequest",
            "comments": []
          },
          "RepeatResponse:binding_uri": {
            "paramName": "binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template the request was bound to server-side."
            ]
          },
          "ComplianceSuite:group": {
            "paramName": "group",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceGroup:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceGroup:rpcs": {
            "paramName": "rpcs",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "ComplianceGroup:requests": {
            "paramName": "requests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceData:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:f_sint32": {
            "paramName": "f_sint32",
            "paramType": "TYPE_SINT32",
            "comments": []
          },
          "ComplianceData:f_sfixed32": {
            "paramName": "f_sfixed32",
            "paramType": "TYPE_SFIXED32",
            "comments": []
          },
          "ComplianceData:f_uint32": {
            "paramName": "f_uint32",
            "paramType": "TYPE_UINT32",
            "comments": []
          },
          "ComplianceData:f_fixed32": {
            "paramName": "f_fixed32",
            "paramType": "TYPE_FIXED32",
            "comments": []
          },
          "ComplianceData:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "ComplianceData:f_sint64": {
            "paramName": "f_sint64",
            "paramType": "TYPE_SINT64",
            "comments": []
          },
          "ComplianceData:f_sfixed64": {
            "paramName": "f_sfixed64",
            "paramType": "TYPE_SFIXED64",
            "comments": []
          },
          "ComplianceData:f_uint64": {
            "paramName": "f_uint64",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "ComplianceData:f_fixed64": {
            "paramName": "f_fixed64",
            "paramType": "TYPE_FIXED64",
            "comments": []
          },
          "ComplianceData:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceData:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:f_bytes": {
            "paramName": "f_bytes",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "ComplianceData:f_kingdom": {
            "paramName": "f_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceData:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:p_kingdom": {
            "paramName": "p_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceDataChild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:f_continent": {
            "paramName": "f_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataChild:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:p_float": {
            "paramName": "p_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:p_continent": {
            "paramName": "p_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataGrandchild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataGrandchild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataGrandchild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "EnumRequest:unknown_enum": {
            "paramName": "unknown_enum",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
            ]
          },
          "EnumResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.EnumRequest",
            "comments": [
              " The original request for a known or unknown enum from the server."
            ]
          },
          "EnumResponse:continent": {
            "paramName": "continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": [
              " The actual enum the server provided."
            ]
          },
          "RoutingRule:routing_parameters": {
            "paramName": "routing_parameters",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A collection of Routing Parameter specifications.",
              " **NOTE:** If multiple Routing Parameters describe the same key",
              " (via the `path_template` field or via the `field` field when",
              " `path_template` is not provided), \"last one wins\" rule",
              " determines which Parameter gets used.",
              " See the examples for more details."
            ]
          },
          "RoutingParameter:field": {
            "paramName": "field",
            "paramType": "TYPE_STRING",
            "comments": [
              " A request field to extract the header key-value pair from."
            ]
          },
          "RoutingParameter:path_template": {
            "paramName": "path_template",
            "paramType": "TYPE_STRING",
            "comments": [
              " A pattern matching the key-value field. Optional.",
              " If not specified, the whole field specified in the `field` field will be",
              " taken as value, and its name used as key. If specified, it MUST contain",
              " exactly one named segment (along with any number of unnamed segments) The",
              " pattern will be matched over the field specified in the `field` field, then",
              " if the match is successful:",
              " - the name of the single named segment will be used as a header name,",
              " - the match value of the segment will be used as a header value;",
              " if the match is NOT successful, nothing will be sent.",
              "",
              " Example:",
              "",
              "               -- This is a field in the request message",
              "              |   that the header value will be extracted from.",
              "              |",
              "              |                     -- This is the key name in the",
              "              |                    |   routing header.",
              "              V                    |",
              "     field: \"table_name\"           v",
              "     path_template: \"projects/*/{table_location=instances/*}/tables/*\"",
              "                                                ^            ^",
              "                                                |            |",
              "       In the {} brackets is the pattern that --             |",
              "       specifies what to extract from the                    |",
              "       field as a value to be sent.                          |",
              "                                                             |",
              "      The string in the field must match the whole pattern --",
              "      before brackets, inside brackets, after brackets.",
              "",
              " When looking at this specific example, we can see that:",
              " - A key-value pair with the key `table_location`",
              "   and the value matching `instances/*` should be added",
              "   to the x-goog-request-params routing header.",
              " - The value is extracted from the request message's `table_name` field",
              "   if it matches the full pattern specified:",
              "   `projects/*/instances/*/tables/*`.",
              "",
              " **NB:** If the `path_template` field is not provided, the key name is",
              " equal to the field name, and the whole field should be sent as a value.",
              " This makes the pattern for the field and the value functionally equivalent",
              " to `**`, and the configuration",
              "",
              "     {",
              "       field: \"table_name\"",
              "     }",
              "",
              " is a functionally equivalent shorthand to:",
              "",
              "     {",
              "       field: \"table_name\"",
              "       path_template: \"{table_name=**}\"",
              "     }",
              "",
              " See Example 1 for more details."
            ]
          },
          "Any:type_url": {
            "paramName": "type_url",
            "paramType": "TYPE_STRING",
            "comments": [
              " A URL/resource name that uniquely identifies the type of the serialized",
              " protocol buffer message. This string must contain at least",
              " one \"/\" character. The last segment of the URL's path must represent",
              " the fully qualified name of the type (as in",
              " `path/google.protobuf.Duration`). The name should be in a canonical form",
              " (e.g., leading \".\" is not accepted).",
              "",
              " In practice, teams usually precompile into the binary all types that they",
              " expect it to use in the context of Any. However, for URLs which use the",
              " scheme `http`, `https`, or no scheme, one can optionally set up a type",
              " server that maps type URLs to message definitions as follows:",
              "",
              " * If no scheme is provided, `https` is assumed.",
              " * An HTTP GET on the URL must yield a [google.protobuf.Type][]",
              "   value in binary format, or produce an error.",
              " * Applications are allowed to cache lookup results based on the",
              "   URL, or have them precompiled into a binary to avoid any",
              "   lookup. Therefore, binary compatibility needs to be preserved",
              "   on changes to types. (Use versioned type names to manage",
              "   breaking changes.)",
              "",
              " Note: this functionality is not currently available in the official",
              " protobuf release, and it is not used for type URLs beginning with",
              " type.googleapis.com. As of May 2023, there are no widely used type server",
              " implementations and no plans to implement one.",
              "",
              " Schemes other than `http`, `https` (or the empty scheme) might be",
              " used with implementation specific semantics.",
              ""
            ]
          },
          "Any:value": {
            "paramName": "value",
            "paramType": "TYPE_BYTES",
            "comments": [
              " Must be a valid serialized protocol buffer of the above specified type."
            ]
          },
          "Status:code": {
            "paramName": "code",
            "paramType": "TYPE_INT32",
            "comments": [
              " The status code, which should be an enum value of",
              " [google.rpc.Code][google.rpc.Code]."
            ]
          },
          "Status:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " A developer-facing error message, which should be in English. Any",
              " user-facing error message should be localized and sent in the",
              " [google.rpc.Status.details][google.rpc.Status.details] field, or localized",
              " by the client."
            ]
          },
          "Status:details": {
            "paramName": "details",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of messages that carry the error details.  There is a common set of",
              " message types for APIs to use."
            ]
          },
          "Operations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Manages long-running operations with an API service.",
              "",
              " When an API method normally takes long time to complete, it can be designed",
              " to return [Operation][google.longrunning.Operation] to the client, and the client can use this",
              " interface to receive the real response asynchronously by polling the",
              " operation resource, or pass the operation resource to another API (such as",
              " Google Cloud Pub/Sub API) to receive the response.  Any API service that",
              " returns long-running operations should implement the `Operations` interface",
              " so developers can have a consistent client experience."
            ]
          },
          "Operations:ListOperations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists operations that match the specified filter in the request. If the",
              " server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "",
              " NOTE: the `name` binding allows API services to override the binding",
              " to use different resource name schemes, such as `users/*/operations`. To",
              " override the binding, API services can add a binding such as",
              " `\"/v1/{name=users/*}/operations\"` to their service configuration.",
              " For backwards compatibility, the default name includes the operations",
              " collection id, however overriding users must ensure the name binding",
              " is the parent resource, without the operations collection id.",
              ""
            ]
          },
          "Operations:GetOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets the latest state of a long-running operation.  Clients can use this",
              " method to poll the operation result at intervals as recommended by the API",
              " service.",
              ""
            ]
          },
          "Operations:DeleteOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a long-running operation. This method indicates that the client is",
              " no longer interested in the operation result. It does not cancel the",
              " operation. If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              ""
            ]
          },
          "Operations:CancelOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Starts asynchronous cancellation on a long-running operation.  The server",
              " makes a best effort to cancel the operation, but success is not",
              " guaranteed.  If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.  Clients can use",
              " [Operations.GetOperation][google.longrunning.Operations.GetOperation] or",
              " other methods to check whether the cancellation succeeded or whether the",
              " operation completed despite cancellation. On successful cancellation,",
              " the operation is not deleted; instead, it becomes an operation with",
              " an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,",
              " corresponding to `Code.CANCELLED`.",
              ""
            ]
          },
          "Operations:WaitOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Waits until the specified long-running operation is done or reaches at most",
              " a specified timeout, returning the latest state.  If the operation is",
              " already done, the latest state is immediately returned.  If the timeout",
              " specified is greater than the default HTTP/RPC timeout, the HTTP/RPC",
              " timeout is used.  If the server does not support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              " Note that this method is on a best-effort basis.  It may return the latest",
              " state before the specified timeout (including immediately), meaning even an",
              " immediate response is no guarantee that the operation is done.",
              ""
            ]
          },
          "Operation:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The server-assigned name, which is only unique within the same service that",
              " originally returns it. If you use the default HTTP mapping, the",
              " `name` should be a resource name ending with `operations/{unique_id}`."
            ]
          },
          "Operation:metadata": {
            "paramName": "metadata",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " Service-specific metadata associated with the operation.  It typically",
              " contains progress information and common metadata such as create time.",
              " Some services might not provide such metadata.  Any method that returns a",
              " long-running operation should document the metadata type, if any."
            ]
          },
          "Operation:done": {
            "paramName": "done",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If the value is `false`, it means the operation is still in progress.",
              " If `true`, the operation is completed, and either `error` or `response` is",
              " available."
            ]
          },
          "Operation:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error result of the operation in case of failure or cancellation."
            ]
          },
          "Operation:response": {
            "paramName": "response",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " The normal response of the operation in case of success.  If the original",
              " method returns no data on success, such as `Delete`, the response is",
              " `google.protobuf.Empty`.  If the original method is standard",
              " `Get`/`Create`/`Update`, the response should be the resource.  For other",
              " methods, the response should have the type `XxxResponse`, where `Xxx`",
              " is the original method name.  For example, if the original method name",
              " is `TakeSnapshot()`, the inferred response type is",
              " `TakeSnapshotResponse`."
            ]
          },
          "GetOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource."
            ]
          },
          "ListOperationsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation's parent resource."
            ]
          },
          "ListOperationsRequest:filter": {
            "paramName": "filter",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list filter."
            ]
          },
          "ListOperationsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The standard list page size."
            ]
          },
          "ListOperationsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list page token."
            ]
          },
          "ListOperationsResponse:operations": {
            "paramName": "operations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of operations that matches the specified filter in the request."
            ]
          },
          "ListOperationsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard List next-page token."
            ]
          },
          "CancelOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be cancelled."
            ]
          },
          "DeleteOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be deleted."
            ]
          },
          "WaitOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to wait on."
            ]
          },
          "WaitOperationRequest:timeout": {
            "paramName": "timeout",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The maximum duration to wait before timing out. If left blank, the wait",
              " will be at most the time permitted by the underlying HTTP/RPC protocol.",
              " If RPC context deadline is also specified, the shorter one will be used."
            ]
          },
          "OperationInfo:response_type": {
            "paramName": "response_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the primary return type for this",
              " long-running operation.",
              " This type will be used to deserialize the LRO's response.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "OperationInfo:metadata_type": {
            "paramName": "metadata_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the metadata type for this long-running",
              " operation.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "Timestamp:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Represents seconds of UTC time since Unix epoch",
              " 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to",
              " 9999-12-31T23:59:59Z inclusive."
            ]
          },
          "Timestamp:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Non-negative fractions of a second at nanosecond resolution. Negative",
              " second values with fractions must still have non-negative nanos values",
              " that count forward in time. Must be from 0 to 999,999,999",
              " inclusive."
            ]
          },
          "Echo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used showcase the four main types of rpcs - unary, server",
              " side streaming, client side streaming, and bidirectional streaming. This",
              " service also exposes methods that explicitly implement server delay, and",
              " paginated calls. Set the 'showcase-trailer' metadata key on any method",
              " to have the values echoed in the response trailers. Set the ",
              " 'x-goog-request-params' metadata key on any method to have the values",
              " echoed in the response headers."
            ]
          },
          "Echo:Expand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method splits the given content into words and will pass each word back",
              " through the stream. This method showcases server-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Collect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will collect the words given to it. When the stream is closed",
              " by the client, this method will return the a concatenation of the strings",
              " passed to it. This method showcases client-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Chat": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method, upon receiving a request on the stream, will pass the same",
              " content back on the stream. This method showcases bidirectional",
              " streaming RPCs.",
              ""
            ]
          },
          "Echo:PagedExpand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the Expand method but instead of returning a stream of",
              " expanded words, this method returns a paged list of expanded words.",
              ""
            ]
          },
          "Echo:PagedExpandLegacy": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the PagedExpand except that it uses",
              " max_results instead of page_size, as some legacy APIs still",
              " do. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:PagedExpandLegacyMapped": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method returns a map containing lists of words that appear in the input, keyed by their",
              " initial character. The only words returned are the ones included in the current page,",
              " as determined by page_token and page_size, which both refer to the word indices in the",
              " input. This paging result consisting of a map of lists is a pattern used by some legacy",
              " APIs. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:Wait": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will wait for the requested amount of time and then return.",
              " This method showcases how a client handles a request timeout.",
              ""
            ]
          },
          "Echo:Block": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will block (wait) for the requested amount of time",
              " and then return the response or error.",
              " This method showcases how a client handles delays or retries.",
              ""
            ]
          },
          "EchoRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content to be echoed by the server."
            ]
          },
          "EchoRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error to be thrown by the server."
            ]
          },
          "EchoRequest:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity to be echoed by the server."
            ]
          },
          "EchoRequest:header": {
            "paramName": "header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoRequest:other_header": {
            "paramName": "other_header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content specified in the request."
            ]
          },
          "EchoResponse:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity specified in the request."
            ]
          },
          "ExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content that will be split into words and returned on the stream."
            ]
          },
          "ExpandRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that is thrown after all words are sent on the stream."
            ]
          },
          "PagedExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page."
            ]
          },
          "PagedExpandRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandLegacyRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandLegacyRequest:max_results": {
            "paramName": "max_results",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
              "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
            ]
          },
          "PagedExpandLegacyRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandResponse:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded."
            ]
          },
          "PagedExpandResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "PagedExpandResponseList:words": {
            "paramName": "words",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "PagedExpandLegacyMappedResponse:alphabetized": {
            "paramName": "alphabetized",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded, indexed by their initial character.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates",
              "     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)"
            ]
          },
          "PagedExpandLegacyMappedResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "WaitRequest:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "WaitRequest:ttl": {
            "paramName": "ttl",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The duration of this operation."
            ]
          },
          "WaitRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "WaitRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.WaitResponse",
            "comments": [
              " The response to be returned on operation completion."
            ]
          },
          "WaitResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content of the result."
            ]
          },
          "WaitMetadata:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "BlockRequest:response_delay": {
            "paramName": "response_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The amount of time to block before returning a response."
            ]
          },
          "BlockRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "BlockRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.BlockResponse",
            "comments": [
              " The response to be returned that will signify successful method call."
            ]
          },
          "BlockResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content can contain anything, the server will not depend on a value",
              " here."
            ]
          },
          "ResourceDescriptor:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type. It must be in the format of",
              " {service_name}/{resource_type_kind}. The `resource_type_kind` must be",
              " singular and must not include version numbers.",
              "",
              " Example: `storage.googleapis.com/Bucket`",
              "",
              " The value of the resource_type_kind must follow the regular expression",
              " /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and",
              " should use PascalCase (UpperCamelCase). The maximum number of",
              " characters allowed for the `resource_type_kind` is 100."
            ]
          },
          "ResourceDescriptor:pattern": {
            "paramName": "pattern",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Optional. The relative resource name pattern associated with this resource",
              " type. The DNS prefix of the full resource name shouldn't be specified here.",
              "",
              " The path pattern must follow the syntax, which aligns with HTTP binding",
              " syntax:",
              "",
              "     Template = Segment { \"/\" Segment } ;",
              "     Segment = LITERAL | Variable ;",
              "     Variable = \"{\" LITERAL \"}\" ;",
              "",
              " Examples:",
              "",
              "     - \"projects/{project}/topics/{topic}\"",
              "     - \"projects/{project}/knowledgeBases/{knowledge_base}\"",
              "",
              " The components in braces correspond to the IDs for each resource in the",
              " hierarchy. It is expected that, if multiple patterns are provided,",
              " the same component name (e.g. \"project\") refers to IDs of the same",
              " type of resource."
            ]
          },
          "ResourceDescriptor:name_field": {
            "paramName": "name_field",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The field on the resource that designates the resource name",
              " field. If omitted, this is assumed to be \"name\"."
            ]
          },
          "ResourceDescriptor:history": {
            "paramName": "history",
            "paramType": ".google.api.ResourceDescriptor.History",
            "comments": [
              " Optional. The historical or future-looking state of the resource pattern.",
              "",
              " Example:",
              "",
              "     // The InspectTemplate message originally only supported resource",
              "     // names with organization, and project was added later.",
              "     message InspectTemplate {",
              "       option (google.api.resource) = {",
              "         type: \"dlp.googleapis.com/InspectTemplate\"",
              "         pattern:",
              "         \"organizations/{organization}/inspectTemplates/{inspect_template}\"",
              "         pattern: \"projects/{project}/inspectTemplates/{inspect_template}\"",
              "         history: ORIGINALLY_SINGLE_PATTERN",
              "       };",
              "     }"
            ]
          },
          "ResourceDescriptor:plural": {
            "paramName": "plural",
            "paramType": "TYPE_STRING",
            "comments": [
              " The plural name used in the resource name and permission names, such as",
              " 'projects' for the resource name of 'projects/{project}' and the permission",
              " name of 'cloudresourcemanager.googleapis.com/projects.get'. It is the same",
              " concept of the `plural` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              "",
              " Note: The plural form is required even for singleton resources. See",
              " https://aip.dev/156"
            ]
          },
          "ResourceDescriptor:singular": {
            "paramName": "singular",
            "paramType": "TYPE_STRING",
            "comments": [
              " The same concept of the `singular` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              " Such as \"project\" for the `resourcemanager.googleapis.com/Project` type."
            ]
          },
          "ResourceDescriptor:style": {
            "paramName": "style",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " Style flag(s) for this resource.",
              " These indicate that a resource is expected to conform to a given",
              " style. See the specific style flags for additional information."
            ]
          },
          "ResourceReference:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type that the annotated field references.",
              "",
              " Example:",
              "",
              "     message Subscription {",
              "       string topic = 2 [(google.api.resource_reference) = {",
              "         type: \"pubsub.googleapis.com/Topic\"",
              "       }];",
              "     }",
              "",
              " Occasionally, a field may reference an arbitrary resource. In this case,",
              " APIs use the special value * in their resource reference.",
              "",
              " Example:",
              "",
              "     message GetIamPolicyRequest {",
              "       string resource = 2 [(google.api.resource_reference) = {",
              "         type: \"*\"",
              "       }];",
              "     }"
            ]
          },
          "ResourceReference:child_type": {
            "paramName": "child_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type of a child collection that the annotated field",
              " references. This is useful for annotating the `parent` field that",
              " doesn't have a fixed resource type.",
              "",
              " Example:",
              "",
              "     message ListLogEntriesRequest {",
              "       string parent = 1 [(google.api.resource_reference) = {",
              "         child_type: \"logging.googleapis.com/LogEntry\"",
              "       };",
              "     }"
            ]
          },
          "FieldMask:paths": {
            "paramName": "paths",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The set of field mask paths."
            ]
          },
          "Identity": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple identity service."
            ]
          },
          "Identity:CreateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a user.",
              ""
            ]
          },
          "Identity:GetUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the User with the given uri.",
              ""
            ]
          },
          "Identity:UpdateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a user.",
              ""
            ]
          },
          "Identity:DeleteUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a user, their profile, and all of their authored messages.",
              ""
            ]
          },
          "Identity:ListUsers": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all users.",
              ""
            ]
          },
          "User:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user."
            ]
          },
          "User:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The display_name of the user."
            ],
            "fieldBehavior": 2
          },
          "User:email": {
            "paramName": "email",
            "paramType": "TYPE_STRING",
            "comments": [
              " The email address of the user."
            ],
            "fieldBehavior": 2
          },
          "User:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the user was created."
            ],
            "fieldBehavior": 3
          },
          "User:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the user was updated."
            ],
            "fieldBehavior": 3
          },
          "User:age": {
            "paramName": "age",
            "paramType": "TYPE_INT32",
            "comments": [
              " The age of the user in years."
            ]
          },
          "User:height_feet": {
            "paramName": "height_feet",
            "paramType": "TYPE_DOUBLE",
            "comments": [
              " The height of the user in feet."
            ]
          },
          "User:nickname": {
            "paramName": "nickname",
            "paramType": "TYPE_STRING",
            "comments": [
              " The nickname of the user.",
              "",
              " (-- aip.dev/not-precedent: An empty string is a valid nickname.",
              "     Ordinarily, proto3_optional should not be used on a `string` field. --)"
            ]
          },
          "User:enable_notifications": {
            "paramName": "enable_notifications",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the receiving of notifications. The default is true if unset.",
              "",
              " (-- aip.dev/not-precedent: The default for the feature is true.",
              "     Ordinarily, the default for a `bool` field should be false. --)"
            ]
          },
          "CreateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to create."
            ]
          },
          "GetUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested user."
            ],
            "fieldBehavior": 2
          },
          "UpdateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to update."
            ]
          },
          "UpdateUserRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user to delete."
            ],
            "fieldBehavior": 2
          },
          "ListUsersRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of users to return. Server may return fewer users",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListUsersRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Identity\\ListUsers` method."
            ]
          },
          "ListUsersResponse:users": {
            "paramName": "users",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of users."
            ]
          },
          "ListUsersResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListUsersRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Message\\ListUsers` method to retrieve the",
              " next page of results."
            ]
          },
          "ErrorInfo:reason": {
            "paramName": "reason",
            "paramType": "TYPE_STRING",
            "comments": [
              " The reason of the error. This is a constant value that identifies the",
              " proximate cause of the error. Error reasons are unique within a particular",
              " domain of errors. This should be at most 63 characters and match a",
              " regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents",
              " UPPER_SNAKE_CASE."
            ]
          },
          "ErrorInfo:domain": {
            "paramName": "domain",
            "paramType": "TYPE_STRING",
            "comments": [
              " The logical grouping to which the \"reason\" belongs. The error domain",
              " is typically the registered service name of the tool or product that",
              " generates the error. Example: \"pubsub.googleapis.com\". If the error is",
              " generated by some common infrastructure, the error domain must be a",
              " globally unique value that identifies the infrastructure. For Google API",
              " infrastructure, the error domain is \"googleapis.com\"."
            ]
          },
          "ErrorInfo:metadata": {
            "paramName": "metadata",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional structured details about this error.",
              "",
              " Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in",
              " length. When identifying the current value of an exceeded limit, the units",
              " should be contained in the key, not the value.  For example, rather than",
              " {\"instanceLimit\": \"100/request\"}, should be returned as,",
              " {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of",
              " instances that can be created in a single (batch) request."
            ]
          },
          "RetryInfo:retry_delay": {
            "paramName": "retry_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " Clients should wait at least this long between retrying the same request."
            ]
          },
          "DebugInfo:stack_entries": {
            "paramName": "stack_entries",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The stack trace entries indicating where the error occurred."
            ]
          },
          "DebugInfo:detail": {
            "paramName": "detail",
            "paramType": "TYPE_STRING",
            "comments": [
              " Additional debugging information provided by the server."
            ]
          },
          "QuotaFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all quota violations."
            ]
          },
          "PreconditionFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all precondition violations."
            ]
          },
          "BadRequest:field_violations": {
            "paramName": "field_violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all violations in a client request."
            ]
          },
          "RequestInfo:request_id": {
            "paramName": "request_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " An opaque string that should only be interpreted by the service generating",
              " it. For example, it can be used to identify requests in the service's logs."
            ]
          },
          "RequestInfo:serving_data": {
            "paramName": "serving_data",
            "paramType": "TYPE_STRING",
            "comments": [
              " Any data that was used to serve this request. For example, an encrypted",
              " stack trace that can be sent back to the service provider for debugging."
            ]
          },
          "ResourceInfo:resource_type": {
            "paramName": "resource_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " A name for the type of resource being accessed, e.g. \"sql table\",",
              " \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL",
              " of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\"."
            ]
          },
          "ResourceInfo:resource_name": {
            "paramName": "resource_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the resource being accessed.  For example, a shared calendar",
              " name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current",
              " error is",
              " [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED]."
            ]
          },
          "ResourceInfo:owner": {
            "paramName": "owner",
            "paramType": "TYPE_STRING",
            "comments": [
              " The owner of the resource (optional).",
              " For example, \"user:<owner email>\" or \"project:<Google developer project",
              " id>\"."
            ]
          },
          "ResourceInfo:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " Describes what error is encountered when accessing this resource.",
              " For example, updating a cloud project may require the `writer` permission",
              " on the developer console project."
            ]
          },
          "Help:links": {
            "paramName": "links",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " URL(s) pointing to additional information on handling the current error."
            ]
          },
          "LocalizedMessage:locale": {
            "paramName": "locale",
            "paramType": "TYPE_STRING",
            "comments": [
              " The locale used following the specification defined at",
              " https://www.rfc-editor.org/rfc/bcp/bcp47.txt.",
              " Examples are: \"en-US\", \"fr-CH\", \"es-MX\""
            ]
          },
          "LocalizedMessage:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " The localized error message in the above locale."
            ]
          },
          "Messaging": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple messaging service that implements chat rooms and profile posts.",
              "",
              " This messaging service showcases the features that API clients",
              " generated by gapic-generators implement."
            ]
          },
          "Messaging:CreateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a room.",
              ""
            ]
          },
          "Messaging:GetRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Room with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a room.",
              ""
            ]
          },
          "Messaging:DeleteRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a room and all of its blurbs.",
              ""
            ]
          },
          "Messaging:ListRooms": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all chat rooms.",
              ""
            ]
          },
          "Messaging:CreateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a blurb. If the parent is a room, the blurb is understood to be a",
              " message in that room. If the parent is a profile, the blurb is understood",
              " to be a post on the profile.",
              ""
            ]
          },
          "Messaging:GetBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Blurb with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a blurb.",
              ""
            ]
          },
          "Messaging:DeleteBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a blurb.",
              ""
            ]
          },
          "Messaging:ListBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists blurbs for a specific chat room or user profile depending on the",
              " parent resource name.",
              ""
            ]
          },
          "Messaging:SearchBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method searches through all blurbs across all rooms and profiles",
              " for blurbs containing to words found in the query. Only posts that",
              " contain an exact match of a queried word will be returned.",
              ""
            ]
          },
          "Messaging:StreamBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This returns a stream that emits the blurbs that are created for a",
              " particular chat room or user profile.",
              ""
            ]
          },
          "Messaging:SendBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is a stream to create multiple blurbs. If an invalid blurb is",
              " requested to be created, the stream will close with an error.",
              ""
            ]
          },
          "Messaging:Connect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method starts a bidirectional stream that receives all blurbs that",
              " are being created after the stream has started and sends requests to create",
              " blurbs. If an invalid blurb is requested to be created, the stream will",
              " close with an error.",
              ""
            ]
          },
          "Room:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Room:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The human readable name of the chat room."
            ],
            "fieldBehavior": 2
          },
          "Room:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " The description of the chat room."
            ]
          },
          "Room:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the room was created."
            ],
            "fieldBehavior": 3
          },
          "Room:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the room was updated."
            ],
            "fieldBehavior": 3
          },
          "CreateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to create."
            ]
          },
          "GetRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "UpdateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to update."
            ]
          },
          "UpdateRoomRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "ListRoomsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of rooms return. Server may return fewer rooms",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListRoomsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListRooms` method."
            ]
          },
          "ListRoomsResponse:rooms": {
            "paramName": "rooms",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of rooms."
            ]
          },
          "ListRoomsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListRoomsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Messaging\\ListRooms` method to retrieve",
              " the next page of results."
            ]
          },
          "Blurb:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Blurb:user": {
            "paramName": "user",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the blurb's author."
            ],
            "fieldBehavior": 2
          },
          "Blurb:text": {
            "paramName": "text",
            "paramType": "TYPE_STRING",
            "comments": [
              " The textual content of this blurb."
            ]
          },
          "Blurb:image": {
            "paramName": "image",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The image content of this blurb."
            ]
          },
          "Blurb:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the blurb was created."
            ],
            "fieldBehavior": 3
          },
          "Blurb:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the blurb was updated."
            ],
            "fieldBehavior": 3
          },
          "Blurb:legacy_room_id": {
            "paramName": "legacy_room_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the room. This field is used to signal",
              " the use of the compound resource pattern",
              " `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`"
            ]
          },
          "Blurb:legacy_user_id": {
            "paramName": "legacy_user_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the user. This field is used to signal",
              " the use of the compound resource pattern",
              " `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`"
            ]
          },
          "CreateBlurbRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room or user profile that this blurb will",
              " be tied to."
            ],
            "fieldBehavior": 2
          },
          "CreateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to create."
            ]
          },
          "GetBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "UpdateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to update."
            ]
          },
          "UpdateBlurbRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine wich fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room or profile whos blurbs to list."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs to return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "ListBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
            ]
          },
          "ListBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of blurbs."
            ]
          },
          "ListBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\ListBlurbs` method to retrieve",
              " the next page of results."
            ]
          },
          "SearchBlurbsRequest:query": {
            "paramName": "query",
            "paramType": "TYPE_STRING",
            "comments": [
              " The query used to search for blurbs containing to words of this string.",
              " Only posts that contain an exact match of a queried word will be returned."
            ],
            "fieldBehavior": 2
          },
          "SearchBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
              " rooms and all profiles."
            ]
          },
          "SearchBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "SearchBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of",
              " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
            ]
          },
          "SearchBlurbsMetadata:retry_info": {
            "paramName": "retry_info",
            "paramType": ".google.rpc.RetryInfo",
            "comments": [
              " This signals to the client when to next poll for response."
            ]
          },
          "SearchBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Blurbs that matched the search query."
            ]
          },
          "SearchBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in SearchBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\SearchBlurbs` method to",
              " retrieve the next page of results."
            ]
          },
          "StreamBlurbsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of a chat room or user profile whose blurbs to stream."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsRequest:expire_time": {
            "paramName": "expire_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time at which this stream will close."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsResponse:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb that was either created, updated, or deleted."
            ]
          },
          "StreamBlurbsResponse:action": {
            "paramName": "action",
            "paramType": ".google.showcase.v1beta1.StreamBlurbsResponse.Action",
            "comments": [
              " The action that triggered the blurb to be returned."
            ]
          },
          "SendBlurbsResponse:names": {
            "paramName": "names",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The names of successful blurb creations."
            ]
          },
          "ConnectRequest:config": {
            "paramName": "config",
            "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
            "comments": [
              " Provides information that specifies how to process subsequent requests.",
              " The first `ConnectRequest` message must contain a `config`  message."
            ]
          },
          "ConnectRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to be created."
            ]
          },
          "SequenceService": {
            "paramName": "",
            "paramType": "",
            "comments": []
          },
          "SequenceService:CreateSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a sequence.",
              ""
            ]
          },
          "SequenceService:GetSequenceReport": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves a sequence.",
              ""
            ]
          },
          "SequenceService:AttemptSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Attempts a sequence.",
              ""
            ]
          },
          "Sequence:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "Sequence:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Sequence of responses to return in order for each attempt. If empty, the",
              " default response is an immediate OK."
            ]
          },
          "SequenceReport:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "SequenceReport:attempts": {
            "paramName": "attempts",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The set of RPC attempts received by the server for a Sequence."
            ]
          },
          "CreateSequenceRequest:sequence": {
            "paramName": "sequence",
            "paramType": ".google.showcase.v1beta1.Sequence",
            "comments": []
          },
          "AttemptSequenceRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "GetSequenceReportRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "Testing": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A service to facilitate running discrete sets of tests",
              " against Showcase."
            ]
          },
          "Testing:CreateSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a new testing session.",
              ""
            ]
          },
          "Testing:GetSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets a testing session.",
              ""
            ]
          },
          "Testing:ListSessions": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists the current test sessions.",
              ""
            ]
          },
          "Testing:DeleteSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Delete a test session.",
              ""
            ]
          },
          "Testing:ReportSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Report on the status of a session.",
              " This generates a report detailing which tests have been completed,",
              " and an overall rollup.",
              ""
            ]
          },
          "Testing:ListTests": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " List the tests of a sessesion.",
              ""
            ]
          },
          "Testing:DeleteTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Explicitly decline to implement a test.",
              "",
              " This removes the test from subsequent `ListTests` calls, and",
              " attempting to do the test will error.",
              "",
              " This method will error if attempting to delete a required test.",
              ""
            ]
          },
          "Testing:VerifyTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Register a response to a test.",
              "",
              " In cases where a test involves registering a final answer at the",
              " end of the test, this method provides the means to do so.",
              ""
            ]
          },
          "Session:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the session. The ID must conform to ^[a-z]+$",
              " If this is not provided, Showcase chooses one at random."
            ]
          },
          "Session:version": {
            "paramName": "version",
            "paramType": ".google.showcase.v1beta1.Session.Version",
            "comments": [
              " Required. The version this session is using."
            ]
          },
          "CreateSessionRequest:session": {
            "paramName": "session",
            "paramType": ".google.showcase.v1beta1.Session",
            "comments": [
              " The session to be created.",
              " Sessions are immutable once they are created (although they can",
              " be deleted)."
            ]
          },
          "GetSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be retrieved."
            ]
          },
          "ListSessionsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of sessions to return per page."
            ]
          },
          "ListSessionsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListSessionsResponse:sessions": {
            "paramName": "sessions",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The sessions being returned."
            ]
          },
          "ListSessionsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "DeleteSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be deleted."
            ]
          },
          "ReportSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be reported on."
            ]
          },
          "ReportSessionResponse:result": {
            "paramName": "result",
            "paramType": ".google.showcase.v1beta1.ReportSessionResponse.Result",
            "comments": [
              " The state of the report."
            ]
          },
          "ReportSessionResponse:test_runs": {
            "paramName": "test_runs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The test runs of this session."
            ]
          },
          "Test:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "Test:expectation_level": {
            "paramName": "expectation_level",
            "paramType": ".google.showcase.v1beta1.Test.ExpectationLevel",
            "comments": [
              " The expectation level for this test."
            ]
          },
          "Test:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the test."
            ]
          },
          "Test:blueprints": {
            "paramName": "blueprints",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The blueprints that will satisfy this test. There may be multiple blueprints",
              " that can signal to the server that this test case is being exercised. Although",
              " multiple blueprints are specified, only a single blueprint needs to be run to",
              " signal that the test case was exercised."
            ]
          },
          "Issue:type": {
            "paramName": "type",
            "paramType": ".google.showcase.v1beta1.Issue.Type",
            "comments": [
              " The type of the issue."
            ]
          },
          "Issue:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Issue.Severity",
            "comments": [
              " The severity of the issue."
            ]
          },
          "Issue:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the issue."
            ]
          },
          "ListTestsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session."
            ]
          },
          "ListTestsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of tests to return per page."
            ]
          },
          "ListTestsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListTestsResponse:tests": {
            "paramName": "tests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The tests being returned."
            ]
          },
          "ListTestsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "TestRun:test": {
            "paramName": "test",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "TestRun:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue found with the test run. If empty, this test run was successful."
            ]
          },
          "DeleteTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to be deleted."
            ]
          },
          "VerifyTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to have an answer registered to it."
            ]
          },
          "VerifyTestRequest:answer": {
            "paramName": "answer",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The answer from the test."
            ]
          },
          "VerifyTestRequest:answers": {
            "paramName": "answers",
            "paramType": "TYPE_BYTES[]",
            "comments": [
              " The answers from the test if multiple are to be checked"
            ]
          },
          "VerifyTestResponse:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue if check answer was unsuccessful. This will be empty if the check answer succeeded."
            ]
          }
        }
      },
      "retryableCodeMap": {
        "codeEnumMapping": {
          "0": "OK",
          "1": "CANCELLED",
          "2": "UNKNOWN",
          "3": "INVALID_ARGUMENT",
          "4": "DEADLINE_EXCEEDED",
          "5": "NOT_FOUND",
          "6": "ALREADY_EXISTS",
          "7": "PERMISSION_DENIED",
          "8": "RESOURCE_EXHAUSTED",
          "9": "FAILED_PRECONDITION",
          "10": "ABORTED",
          "11": "OUT_OF_RANGE",
          "12": "UNIMPLEMENTED",
          "13": "INTERNAL",
          "14": "UNAVAILABLE",
          "15": "DATA_LOSS",
          "16": "UNAUTHENTICATED",
          "OK": "0",
          "CANCELLED": "1",
          "UNKNOWN": "2",
          "INVALID_ARGUMENT": "3",
          "DEADLINE_EXCEEDED": "4",
          "NOT_FOUND": "5",
          "ALREADY_EXISTS": "6",
          "PERMISSION_DENIED": "7",
          "RESOURCE_EXHAUSTED": "8",
          "FAILED_PRECONDITION": "9",
          "ABORTED": "10",
          "OUT_OF_RANGE": "11",
          "UNIMPLEMENTED": "12",
          "INTERNAL": "13",
          "UNAVAILABLE": "14",
          "DATA_LOSS": "15",
          "UNAUTHENTICATED": "16"
        },
        "uniqueCodesNamesMap": {
          "": "non_idempotent",
          "deadline_exceeded_unavailable": "idempotent"
        },
        "prettyCodesNamesMap": {
          "non_idempotent": [],
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ]
        },
        "uniqueParamsNamesMap": {
          "94312e9926796a52a8fcbbedaac41972e07ccd1c": "default"
        },
        "prettyParamNamesMap": {
          "default": {
            "initial_retry_delay_millis": 100,
            "retry_delay_multiplier": 1.3,
            "max_retry_delay_millis": 60000,
            "initial_rpc_timeout_millis": 60000,
            "rpc_timeout_multiplier": 1,
            "max_rpc_timeout_millis": 60000,
            "total_timeout_millis": 600000
          }
        }
      },
      "grpcServiceConfig": {},
      "bundleConfigs": [],
      "bundleConfigsMethods": [],
      "simpleMethods": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateSequenceRequest",
          "outputInterface": ".google.showcase.v1beta1.Sequence",
          "comments": [
            " Creates a sequence.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateSequence",
          "inputType": ".google.showcase.v1beta1.CreateSequenceRequest",
          "outputType": ".google.showcase.v1beta1.Sequence",
          "options": {
            ".google.api.methodSignature": [
              "sequence"
            ],
            ".google.api.http": {
              "post": "/v1beta1/sequences",
              "body": "sequence",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "sequence",
              "paramType": ".google.showcase.v1beta1.Sequence",
              "comments": []
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetSequenceReportRequest",
          "outputInterface": ".google.showcase.v1beta1.SequenceReport",
          "comments": [
            " Retrieves a sequence.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetSequenceReport",
          "inputType": ".google.showcase.v1beta1.GetSequenceReportRequest",
          "outputType": ".google.showcase.v1beta1.SequenceReport",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "get": "/v1beta1/{name=sequences/*/sequenceReport}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.AttemptSequenceRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Attempts a sequence.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "AttemptSequence",
          "inputType": ".google.showcase.v1beta1.AttemptSequenceRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.methodSignature": [
              "name"
            ],
            ".google.api.http": {
              "post": "/v1beta1/{name=sequences/*}",
              "body": "*",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [],
              "fieldBehavior": 2
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "longRunning": [],
      "diregapicLRO": [],
      "streaming": [],
      "clientStreaming": [],
      "serverStreaming": [],
      "bidiStreaming": [],
      "paging": [],
      "hostname": "localhost",
      "port": 7469,
      "oauthScopes": [],
      "pathTemplates": [
        {
          "name": "Blueprint",
          "params": [
            "session",
            "test",
            "blueprint"
          ],
          "type": "showcase.googleapis.com/Blueprint",
          "pattern": [
            "sessions/{session}/tests/{test}/blueprints/{blueprint}"
          ]
        },
        {
          "name": "Room",
          "params": [
            "room"
          ],
          "type": "showcase.googleapis.com/Room",
          "pattern": [
            "rooms/{room}"
          ]
        },
        {
          "name": "room_blurb",
          "params": [
            "room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "room_blurbs_legacy_room_blurb",
          "params": [
            "room",
            "legacy_room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "Sequence",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/Sequence",
          "pattern": [
            "sequences/{sequence}"
          ]
        },
        {
          "name": "SequenceReport",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/SequenceReport",
          "pattern": [
            "sequences/{sequence}/sequenceReport"
          ]
        },
        {
          "name": "Session",
          "params": [
            "session"
          ],
          "type": "showcase.googleapis.com/Session",
          "pattern": [
            "sessions/{session}"
          ]
        },
        {
          "name": "Test",
          "params": [
            "session",
            "test"
          ],
          "type": "showcase.googleapis.com/Test",
          "pattern": [
            "sessions/{session}/tests/{test}"
          ]
        },
        {
          "name": "User",
          "params": [
            "user"
          ],
          "type": "showcase.googleapis.com/User",
          "pattern": [
            "users/{user}"
          ]
        },
        {
          "name": "user_profile_blurb",
          "params": [
            "user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "user_profile_blurbs_legacy_user_blurb",
          "params": [
            "user",
            "legacy_user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        }
      ]
    },
    {
      "name": "Testing",
      "method": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateSessionRequest",
          "outputInterface": ".google.showcase.v1beta1.Session",
          "comments": [
            " Creates a new testing session.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateSession",
          "inputType": ".google.showcase.v1beta1.CreateSessionRequest",
          "outputType": ".google.showcase.v1beta1.Session",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/sessions",
              "body": "session",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "session",
              "paramType": ".google.showcase.v1beta1.Session",
              "comments": [
                " The session to be created.",
                " Sessions are immutable once they are created (although they can",
                " be deleted)."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetSessionRequest",
          "outputInterface": ".google.showcase.v1beta1.Session",
          "comments": [
            " Gets a testing session.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetSession",
          "inputType": ".google.showcase.v1beta1.GetSessionRequest",
          "outputType": ".google.showcase.v1beta1.Session",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/{name=sessions/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session to be retrieved."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "pagingFieldName": "sessions",
          "pagingResponseType": ".google.showcase.v1beta1.Session",
          "inputInterface": ".google.showcase.v1beta1.ListSessionsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListSessionsResponse",
          "comments": [
            " Lists the current test sessions.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListSessions",
          "inputType": ".google.showcase.v1beta1.ListSessionsRequest",
          "outputType": ".google.showcase.v1beta1.ListSessionsResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/sessions",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of sessions to return per page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The page token, for retrieving subsequent pages."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteSessionRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Delete a test session.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteSession",
          "inputType": ".google.showcase.v1beta1.DeleteSessionRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.http": {
              "delete": "/v1beta1/{name=sessions/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session to be deleted."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.ReportSessionRequest",
          "outputInterface": ".google.showcase.v1beta1.ReportSessionResponse",
          "comments": [
            " Report on the status of a session.",
            " This generates a report detailing which tests have been completed,",
            " and an overall rollup.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ReportSession",
          "inputType": ".google.showcase.v1beta1.ReportSessionRequest",
          "outputType": ".google.showcase.v1beta1.ReportSessionResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=sessions/*}:report",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session to be reported on."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "pagingFieldName": "tests",
          "pagingResponseType": ".google.showcase.v1beta1.Test",
          "inputInterface": ".google.showcase.v1beta1.ListTestsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListTestsResponse",
          "comments": [
            " List the tests of a sessesion.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListTests",
          "inputType": ".google.showcase.v1beta1.ListTestsRequest",
          "outputType": ".google.showcase.v1beta1.ListTestsResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/{parent=sessions/*}/tests",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session."
              ]
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of tests to return per page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The page token, for retrieving subsequent pages."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteTestRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Explicitly decline to implement a test.",
            "",
            " This removes the test from subsequent `ListTests` calls, and",
            " attempting to do the test will error.",
            "",
            " This method will error if attempting to delete a required test.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteTest",
          "inputType": ".google.showcase.v1beta1.DeleteTestRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.http": {
              "delete": "/v1beta1/{name=sessions/*/tests/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The test to be deleted."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.VerifyTestRequest",
          "outputInterface": ".google.showcase.v1beta1.VerifyTestResponse",
          "comments": [
            " Register a response to a test.",
            "",
            " In cases where a test involves registering a final answer at the",
            " end of the test, this method provides the means to do so.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "VerifyTest",
          "inputType": ".google.showcase.v1beta1.VerifyTestRequest",
          "outputType": ".google.showcase.v1beta1.VerifyTestResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=sessions/*/tests/*}:check",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The test to have an answer registered to it."
              ]
            },
            {
              "paramName": "answer",
              "paramType": "TYPE_BYTES",
              "comments": [
                " The answer from the test."
              ]
            },
            {
              "paramName": "answers",
              "paramType": "TYPE_BYTES[]",
              "comments": [
                " The answers from the test if multiple are to be checked"
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "options": {
        ".google.api.defaultHost": "localhost:7469"
      },
      "packageName": "google.showcase.v1beta1",
      "protoFile": "google/showcase/v1beta1/testing.proto",
      "IAMPolicyMixin": 0,
      "LocationMixin": 0,
      "comments": [
        " A service to facilitate running discrete sets of tests",
        " against Showcase."
      ],
      "commentsMap": {
        "comments": {
          "Http:rules": {
            "paramName": "rules",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of HTTP configuration rules that apply to individual API methods.",
              "",
              " **NOTE:** All service configuration rules follow \"last one wins\" order."
            ]
          },
          "Http:fully_decode_reserved_expansion": {
            "paramName": "fully_decode_reserved_expansion",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When set to true, URL path parameters will be fully URI-decoded except in",
              " cases of single segment matches in reserved expansion, where \"%2F\" will be",
              " left encoded.",
              "",
              " The default behavior is to not decode RFC 6570 reserved characters in multi",
              " segment matches."
            ]
          },
          "HttpRule:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " Selects a method to which this rule applies.",
              "",
              " Refer to [selector][google.api.DocumentationRule.selector] for syntax",
              " details."
            ]
          },
          "HttpRule:get": {
            "paramName": "get",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP GET. Used for listing and getting information about",
              " resources."
            ]
          },
          "HttpRule:put": {
            "paramName": "put",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PUT. Used for replacing a resource."
            ]
          },
          "HttpRule:post": {
            "paramName": "post",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP POST. Used for creating a resource or performing an action."
            ]
          },
          "HttpRule:delete": {
            "paramName": "delete",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP DELETE. Used for deleting a resource."
            ]
          },
          "HttpRule:patch": {
            "paramName": "patch",
            "paramType": "TYPE_STRING",
            "comments": [
              " Maps to HTTP PATCH. Used for updating a resource."
            ]
          },
          "HttpRule:custom": {
            "paramName": "custom",
            "paramType": ".google.api.CustomHttpPattern",
            "comments": [
              " The custom pattern is used for specifying an HTTP method that is not",
              " included in the `pattern` field, such as HEAD, or \"*\" to leave the",
              " HTTP method unspecified for this rule. The wild-card rule is useful",
              " for services that provide content to Web (HTML) clients."
            ]
          },
          "HttpRule:body": {
            "paramName": "body",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the request field whose value is mapped to the HTTP request",
              " body, or `*` for mapping all request fields not captured by the path",
              " pattern to the HTTP body, or omitted for not having any HTTP request body.",
              "",
              " NOTE: the referred field must be present at the top-level of the request",
              " message type."
            ]
          },
          "HttpRule:response_body": {
            "paramName": "response_body",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The name of the response field whose value is mapped to the HTTP",
              " response body. When omitted, the entire response message will be used",
              " as the HTTP response body.",
              "",
              " NOTE: The referred field must be present at the top-level of the response",
              " message type."
            ]
          },
          "HttpRule:additional_bindings": {
            "paramName": "additional_bindings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional HTTP bindings for the selector. Nested bindings must",
              " not contain an `additional_bindings` field themselves (that is,",
              " the nesting may only be one level deep)."
            ]
          },
          "CustomHttpPattern:kind": {
            "paramName": "kind",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of this custom HTTP verb."
            ]
          },
          "CustomHttpPattern:path": {
            "paramName": "path",
            "paramType": "TYPE_STRING",
            "comments": [
              " The path matched by this custom verb."
            ]
          },
          "FileDescriptorSet:file": {
            "paramName": "file",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:package": {
            "paramName": "package",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FileDescriptorProto:dependency": {
            "paramName": "dependency",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Names of files imported by this file."
            ]
          },
          "FileDescriptorProto:public_dependency": {
            "paramName": "public_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the public imported files in the dependency list above."
            ]
          },
          "FileDescriptorProto:weak_dependency": {
            "paramName": "weak_dependency",
            "paramType": "TYPE_INT32[]",
            "comments": [
              " Indexes of the weak imported files in the dependency list.",
              " For Google-internal migration only. Do not use."
            ]
          },
          "FileDescriptorProto:message_type": {
            "paramName": "message_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " All top-level definitions in this file."
            ]
          },
          "FileDescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:service": {
            "paramName": "service",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FileDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FileOptions",
            "comments": []
          },
          "FileDescriptorProto:source_code_info": {
            "paramName": "source_code_info",
            "paramType": ".google.protobuf.SourceCodeInfo",
            "comments": [
              " This field contains optional information about the original source code.",
              " You may safely remove this entire field without harming runtime",
              " functionality of the descriptors -- the information is needed only by",
              " development tools."
            ]
          },
          "FileDescriptorProto:syntax": {
            "paramName": "syntax",
            "paramType": "TYPE_STRING",
            "comments": [
              " The syntax of the proto file.",
              " The supported values are \"proto2\", \"proto3\", and \"editions\".",
              "",
              " If `edition` is present, this value must be \"editions\"."
            ]
          },
          "FileDescriptorProto:edition": {
            "paramName": "edition",
            "paramType": "TYPE_STRING",
            "comments": [
              " The edition of the proto file, which is an opaque string."
            ]
          },
          "DescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "DescriptorProto:field": {
            "paramName": "field",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension": {
            "paramName": "extension",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:nested_type": {
            "paramName": "nested_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:enum_type": {
            "paramName": "enum_type",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:extension_range": {
            "paramName": "extension_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:oneof_decl": {
            "paramName": "oneof_decl",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MessageOptions",
            "comments": []
          },
          "DescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "DescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved field names, which may not be used by fields in the same message.",
              " A given name may only be reserved once."
            ]
          },
          "ExtensionRangeOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ExtensionRangeOptions:declaration": {
            "paramName": "declaration",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " For external users: DO NOT USE. We are in the process of open sourcing",
              " extension declaration and executing internal cleanups before it can be",
              " used externally."
            ]
          },
          "ExtensionRangeOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ExtensionRangeOptions:verification": {
            "paramName": "verification",
            "paramType": ".google.protobuf.ExtensionRangeOptions.VerificationState",
            "comments": [
              " The verification state of the range.",
              " TODO(b/278783756): flip the default to DECLARATION once all empty ranges",
              " are marked as UNVERIFIED."
            ]
          },
          "FieldDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FieldDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "FieldDescriptorProto:label": {
            "paramName": "label",
            "paramType": ".google.protobuf.FieldDescriptorProto.Label",
            "comments": []
          },
          "FieldDescriptorProto:type": {
            "paramName": "type",
            "paramType": ".google.protobuf.FieldDescriptorProto.Type",
            "comments": [
              " If type_name is set, this need not be set.  If both this and type_name",
              " are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."
            ]
          },
          "FieldDescriptorProto:type_name": {
            "paramName": "type_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " For message and enum types, this is the name of the type.  If the name",
              " starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping",
              " rules are used to find the type (i.e. first the nested types within this",
              " message are searched, then within the parent, on up to the root",
              " namespace)."
            ]
          },
          "FieldDescriptorProto:extendee": {
            "paramName": "extendee",
            "paramType": "TYPE_STRING",
            "comments": [
              " For extensions, this is the name of the type being extended.  It is",
              " resolved in the same manner as type_name."
            ]
          },
          "FieldDescriptorProto:default_value": {
            "paramName": "default_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " For numeric types, contains the original text representation of the value.",
              " For booleans, \"true\" or \"false\".",
              " For strings, contains the default text contents (not escaped in any way).",
              " For bytes, contains the C escaped value.  All bytes >= 128 are escaped."
            ]
          },
          "FieldDescriptorProto:oneof_index": {
            "paramName": "oneof_index",
            "paramType": "TYPE_INT32",
            "comments": [
              " If set, gives the index of a oneof in the containing type's oneof_decl",
              " list.  This field is a member of that oneof."
            ]
          },
          "FieldDescriptorProto:json_name": {
            "paramName": "json_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " JSON name of this field. The value is set by protocol compiler. If the",
              " user has set a \"json_name\" option on this field, that option's value",
              " will be used. Otherwise, it's deduced from the field's name by converting",
              " it to camelCase."
            ]
          },
          "FieldDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.FieldOptions",
            "comments": []
          },
          "FieldDescriptorProto:proto3_optional": {
            "paramName": "proto3_optional",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, this is a proto3 \"optional\". When a proto3 field is optional, it",
              " tracks presence regardless of field type.",
              "",
              " When proto3_optional is true, this field must be belong to a oneof to",
              " signal to old proto3 clients that presence is tracked for this field. This",
              " oneof is known as a \"synthetic\" oneof, and this field must be its sole",
              " member (each proto3 optional field gets its own synthetic oneof). Synthetic",
              " oneofs exist in the descriptor only, and do not generate any API. Synthetic",
              " oneofs must be ordered after all \"real\" oneofs.",
              "",
              " For message fields, proto3_optional doesn't create any semantic change,",
              " since non-repeated message fields always track presence. However it still",
              " indicates the semantic detail of whether the user wrote \"optional\" or not.",
              " This can be useful for round-tripping the .proto file. For consistency we",
              " give message fields a synthetic oneof also, even though it is not required",
              " to track presence. This is especially important because the parser can't",
              " tell if a field is a message or an enum, so it must always create a",
              " synthetic oneof.",
              "",
              " Proto2 optional fields do not set this flag, because they already indicate",
              " optional with `LABEL_OPTIONAL`."
            ]
          },
          "OneofDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "OneofDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.OneofOptions",
            "comments": []
          },
          "EnumDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumDescriptorProto:value": {
            "paramName": "value",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "EnumDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumOptions",
            "comments": []
          },
          "EnumDescriptorProto:reserved_range": {
            "paramName": "reserved_range",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Range of reserved numeric values. Reserved numeric values may not be used",
              " by enum values in the same enum declaration. Reserved ranges may not",
              " overlap."
            ]
          },
          "EnumDescriptorProto:reserved_name": {
            "paramName": "reserved_name",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Reserved enum value names, which may not be reused. A given name may only",
              " be reserved once."
            ]
          },
          "EnumValueDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "EnumValueDescriptorProto:number": {
            "paramName": "number",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "EnumValueDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.EnumValueOptions",
            "comments": []
          },
          "ServiceDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ServiceDescriptorProto:method": {
            "paramName": "method",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ServiceDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.ServiceOptions",
            "comments": []
          },
          "MethodDescriptorProto:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:input_type": {
            "paramName": "input_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Input and output type names.  These are resolved in the same way as",
              " FieldDescriptorProto.type_name, but must refer to a message type."
            ]
          },
          "MethodDescriptorProto:output_type": {
            "paramName": "output_type",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "MethodDescriptorProto:options": {
            "paramName": "options",
            "paramType": ".google.protobuf.MethodOptions",
            "comments": []
          },
          "MethodDescriptorProto:client_streaming": {
            "paramName": "client_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if client streams multiple client messages"
            ]
          },
          "MethodDescriptorProto:server_streaming": {
            "paramName": "server_streaming",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Identifies if server streams multiple server messages"
            ]
          },
          "FileOptions:java_package": {
            "paramName": "java_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Java package where classes generated from this .proto will be",
              " placed.  By default, the proto package is used, but this is often",
              " inappropriate because proto packages do not normally start with backwards",
              " domain names."
            ]
          },
          "FileOptions:java_outer_classname": {
            "paramName": "java_outer_classname",
            "paramType": "TYPE_STRING",
            "comments": [
              " Controls the name of the wrapper Java class generated for the .proto file.",
              " That class will always contain the .proto file's getDescriptor() method as",
              " well as any top-level extensions defined in the .proto file.",
              " If java_multiple_files is disabled, then all the other classes from the",
              " .proto file will be nested inside the single wrapper outer class."
            ]
          },
          "FileOptions:java_multiple_files": {
            "paramName": "java_multiple_files",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If enabled, then the Java code generator will generate a separate .java",
              " file for each top-level message, enum, and service defined in the .proto",
              " file.  Thus, these types will *not* be nested inside the wrapper class",
              " named by java_outer_classname.  However, the wrapper class will still be",
              " generated to contain the file's getDescriptor() method as well as any",
              " top-level extensions defined in the file."
            ]
          },
          "FileOptions:java_generate_equals_and_hash": {
            "paramName": "java_generate_equals_and_hash",
            "paramType": "TYPE_BOOL",
            "comments": [
              " This option does nothing."
            ]
          },
          "FileOptions:java_string_check_utf8": {
            "paramName": "java_string_check_utf8",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If set true, then the Java2 code generator will generate code that",
              " throws an exception whenever an attempt is made to assign a non-UTF-8",
              " byte sequence to a string field.",
              " Message reflection will do the same.",
              " However, an extension field still accepts non-UTF-8 byte sequences.",
              " This option has no effect on when used with the lite runtime."
            ]
          },
          "FileOptions:optimize_for": {
            "paramName": "optimize_for",
            "paramType": ".google.protobuf.FileOptions.OptimizeMode",
            "comments": []
          },
          "FileOptions:go_package": {
            "paramName": "go_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the Go package where structs generated from this .proto will be",
              " placed. If omitted, the Go package will be derived from the following:",
              "   - The basename of the package import path, if provided.",
              "   - Otherwise, the package statement in the .proto file, if present.",
              "   - Otherwise, the basename of the .proto file, without extension."
            ]
          },
          "FileOptions:cc_generic_services": {
            "paramName": "cc_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should generic services be generated in each language?  \"Generic\" services",
              " are not specific to any particular RPC system.  They are generated by the",
              " main code generators in each language (without additional plugins).",
              " Generic services were the only kind of service generation supported by",
              " early versions of google.protobuf.",
              "",
              " Generic services are now considered deprecated in favor of using plugins",
              " that generate code specific to your particular RPC system.  Therefore,",
              " these default to false.  Old code which depends on generic services should",
              " explicitly set them to true."
            ]
          },
          "FileOptions:java_generic_services": {
            "paramName": "java_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:py_generic_services": {
            "paramName": "py_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:php_generic_services": {
            "paramName": "php_generic_services",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "FileOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this file deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for everything in the file, or it will be completely ignored; in the very",
              " least, this is a formalization for deprecating files."
            ]
          },
          "FileOptions:cc_enable_arenas": {
            "paramName": "cc_enable_arenas",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the use of arenas for the proto messages in this file. This applies",
              " only to generated classes for C++."
            ]
          },
          "FileOptions:objc_class_prefix": {
            "paramName": "objc_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the objective c class prefix which is prepended to all objective c",
              " generated classes from this .proto. There is no default."
            ]
          },
          "FileOptions:csharp_namespace": {
            "paramName": "csharp_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Namespace for generated classes; defaults to the package."
            ]
          },
          "FileOptions:swift_prefix": {
            "paramName": "swift_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " By default Swift generators will take the proto package and CamelCase it",
              " replacing '.' with underscore and use that to prefix the types/symbols",
              " defined. When this options is provided, they will use this value instead",
              " to prefix the types/symbols defined."
            ]
          },
          "FileOptions:php_class_prefix": {
            "paramName": "php_class_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " Sets the php class prefix which is prepended to all php generated classes",
              " from this .proto. Default is empty."
            ]
          },
          "FileOptions:php_namespace": {
            "paramName": "php_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated classes. Default",
              " is empty. When this option is empty, the package name will be used for",
              " determining the namespace."
            ]
          },
          "FileOptions:php_metadata_namespace": {
            "paramName": "php_metadata_namespace",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the namespace of php generated metadata classes.",
              " Default is empty. When this option is empty, the proto file name will be",
              " used for determining the namespace."
            ]
          },
          "FileOptions:ruby_package": {
            "paramName": "ruby_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " Use this option to change the package of ruby generated classes. Default",
              " is empty. When this option is not set, the package name will be used for",
              " determining the ruby package."
            ]
          },
          "FileOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FileOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here.",
              " See the documentation for the \"Options\" section above."
            ]
          },
          "MessageOptions:message_set_wire_format": {
            "paramName": "message_set_wire_format",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set true to use the old proto1 MessageSet wire format for extensions.",
              " This is provided for backwards-compatibility with the MessageSet wire",
              " format.  You should not use this for any other reason:  It's less",
              " efficient, has fewer features, and is more complicated.",
              "",
              " The message must be defined exactly as follows:",
              "   message Foo {",
              "     option message_set_wire_format = true;",
              "     extensions 4 to max;",
              "   }",
              " Note that the message cannot have any defined fields; MessageSets only",
              " have extensions.",
              "",
              " All extensions of your type must be singular messages; e.g. they cannot",
              " be int32s, enums, or repeated messages.",
              "",
              " Because this is an option, the above two restrictions are not enforced by",
              " the protocol compiler."
            ]
          },
          "MessageOptions:no_standard_descriptor_accessor": {
            "paramName": "no_standard_descriptor_accessor",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Disables the generation of the standard \"descriptor()\" accessor, which can",
              " conflict with a field of the same name.  This is meant to make migration",
              " from proto1 easier; new code should avoid fields named \"descriptor\"."
            ]
          },
          "MessageOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this message deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the message, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating messages."
            ]
          },
          "MessageOptions:map_entry": {
            "paramName": "map_entry",
            "paramType": "TYPE_BOOL",
            "comments": [
              " NOTE: Do not set the option in .proto files. Always use the maps syntax",
              " instead. The option should only be implicitly set by the proto compiler",
              " parser.",
              "",
              " Whether the message is an automatically generated map entry type for the",
              " maps field.",
              "",
              " For maps fields:",
              "     map<KeyType, ValueType> map_field = 1;",
              " The parsed descriptor looks like:",
              "     message MapFieldEntry {",
              "         option map_entry = true;",
              "         optional KeyType key = 1;",
              "         optional ValueType value = 2;",
              "     }",
              "     repeated MapFieldEntry map_field = 1;",
              "",
              " Implementations may choose not to generate the map_entry=true message, but",
              " use a native map in the target language to hold the keys and values.",
              " The reflection APIs in such implementations still need to work as",
              " if the field is a repeated message field."
            ]
          },
          "MessageOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              "",
              " This should only be used as a temporary measure against broken builds due",
              " to the change in behavior for JSON field name conflicts.",
              "",
              " TODO(b/261750190) This is legacy behavior we plan to remove once downstream",
              " teams have had time to migrate."
            ]
          },
          "MessageOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MessageOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "FieldOptions:ctype": {
            "paramName": "ctype",
            "paramType": ".google.protobuf.FieldOptions.CType",
            "comments": [
              " The ctype option instructs the C++ code generator to use a different",
              " representation of the field than it normally would.  See the specific",
              " options below.  This option is only implemented to support use of",
              " [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of",
              " type \"bytes\" in the open source release -- sorry, we'll try to include",
              " other types in a future version!"
            ]
          },
          "FieldOptions:packed": {
            "paramName": "packed",
            "paramType": "TYPE_BOOL",
            "comments": [
              " The packed option can be enabled for repeated primitive fields to enable",
              " a more efficient representation on the wire. Rather than repeatedly",
              " writing the tag and type for each element, the entire array is encoded as",
              " a single length-delimited blob. In proto3, only explicit setting it to",
              " false will avoid using packed encoding."
            ]
          },
          "FieldOptions:jstype": {
            "paramName": "jstype",
            "paramType": ".google.protobuf.FieldOptions.JSType",
            "comments": [
              " The jstype option determines the JavaScript type used for values of the",
              " field.  The option is permitted only for 64 bit integral and fixed types",
              " (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING",
              " is represented as JavaScript string, which avoids loss of precision that",
              " can happen when a large value is converted to a floating point JavaScript.",
              " Specifying JS_NUMBER for the jstype causes the generated JavaScript code to",
              " use the JavaScript \"number\" type.  The behavior of the default option",
              " JS_NORMAL is implementation dependent.",
              "",
              " This option is an enum to permit additional types to be added, e.g.",
              " goog.math.Integer."
            ]
          },
          "FieldOptions:lazy": {
            "paramName": "lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Should this field be parsed lazily?  Lazy applies only to message-type",
              " fields.  It means that when the outer message is initially parsed, the",
              " inner message's contents will not be parsed but instead stored in encoded",
              " form.  The inner message will actually be parsed when it is first accessed.",
              "",
              " This is only a hint.  Implementations are free to choose whether to use",
              " eager or lazy parsing regardless of the value of this option.  However,",
              " setting this option true suggests that the protocol author believes that",
              " using lazy parsing on this field is worth the additional bookkeeping",
              " overhead typically needed to implement it.",
              "",
              " This option does not affect the public interface of any generated code;",
              " all method signatures remain the same.  Furthermore, thread-safety of the",
              " interface is not affected by this option; const methods remain safe to",
              " call from multiple threads concurrently, while non-const methods continue",
              " to require exclusive access.",
              "",
              " Note that implementations may choose not to check required fields within",
              " a lazy sub-message.  That is, calling IsInitialized() on the outer message",
              " may return true even if the inner message has missing required fields.",
              " This is necessary because otherwise the inner message would have to be",
              " parsed in order to perform the check, defeating the purpose of lazy",
              " parsing.  An implementation which chooses not to check required fields",
              " must be consistent about it.  That is, for any particular sub-message, the",
              " implementation must either *always* check its required fields, or *never*",
              " check its required fields, regardless of whether or not the message has",
              " been parsed.",
              "",
              " As of May 2022, lazy verifies the contents of the byte stream during",
              " parsing.  An invalid byte stream will cause the overall parsing to fail."
            ]
          },
          "FieldOptions:unverified_lazy": {
            "paramName": "unverified_lazy",
            "paramType": "TYPE_BOOL",
            "comments": [
              " unverified_lazy does no correctness checks on the byte stream. This should",
              " only be used where lazy with verification is prohibitive for performance",
              " reasons."
            ]
          },
          "FieldOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this field deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for accessors, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating fields."
            ]
          },
          "FieldOptions:weak": {
            "paramName": "weak",
            "paramType": "TYPE_BOOL",
            "comments": [
              " For Google-internal migration only. Do not use."
            ]
          },
          "FieldOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that the field value should not be printed out when using debug",
              " formats, e.g. when the field contains sensitive credentials."
            ]
          },
          "FieldOptions:retention": {
            "paramName": "retention",
            "paramType": ".google.protobuf.FieldOptions.OptionRetention",
            "comments": []
          },
          "FieldOptions:targets": {
            "paramName": "targets",
            "paramType": "TYPE_ENUM[]",
            "comments": []
          },
          "FieldOptions:edition_defaults": {
            "paramName": "edition_defaults",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "FieldOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "FieldOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "OneofOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "OneofOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumOptions:allow_alias": {
            "paramName": "allow_alias",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Set this option to true to allow mapping different tag names to the same",
              " value."
            ]
          },
          "EnumOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum, or it will be completely ignored; in the very least, this",
              " is a formalization for deprecating enums."
            ]
          },
          "EnumOptions:deprecated_legacy_json_field_conflicts": {
            "paramName": "deprecated_legacy_json_field_conflicts",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enable the legacy handling of JSON field name conflicts.  This lowercases",
              " and strips underscored from the fields before comparison in proto3 only.",
              " The new behavior takes `json_name` into account and applies to proto2 as",
              " well.",
              " TODO(b/261750190) Remove this legacy behavior once downstream teams have",
              " had time to migrate."
            ]
          },
          "EnumOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "EnumValueOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this enum value deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the enum value, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating enum values."
            ]
          },
          "EnumValueOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "EnumValueOptions:debug_redact": {
            "paramName": "debug_redact",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Indicate that fields annotated with this enum value should not be printed",
              " out when using debug formats, e.g. when the field contains sensitive",
              " credentials."
            ]
          },
          "EnumValueOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "ServiceOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "ServiceOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this service deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the service, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating services."
            ]
          },
          "ServiceOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "MethodOptions:deprecated": {
            "paramName": "deprecated",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Is this method deprecated?",
              " Depending on the target platform, this can emit Deprecated annotations",
              " for the method, or it will be completely ignored; in the very least,",
              " this is a formalization for deprecating methods."
            ]
          },
          "MethodOptions:idempotency_level": {
            "paramName": "idempotency_level",
            "paramType": ".google.protobuf.MethodOptions.IdempotencyLevel",
            "comments": []
          },
          "MethodOptions:features": {
            "paramName": "features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": [
              " Any features defined in the specific edition."
            ]
          },
          "MethodOptions:uninterpreted_option": {
            "paramName": "uninterpreted_option",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The parser stores options it doesn't recognize here. See above."
            ]
          },
          "UninterpretedOption:name": {
            "paramName": "name",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "UninterpretedOption:identifier_value": {
            "paramName": "identifier_value",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of the uninterpreted option, in whatever type the tokenizer",
              " identified it as during parsing. Exactly one of these should be set."
            ]
          },
          "UninterpretedOption:positive_int_value": {
            "paramName": "positive_int_value",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "UninterpretedOption:negative_int_value": {
            "paramName": "negative_int_value",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "UninterpretedOption:double_value": {
            "paramName": "double_value",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "UninterpretedOption:string_value": {
            "paramName": "string_value",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "UninterpretedOption:aggregate_value": {
            "paramName": "aggregate_value",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "FeatureSet:field_presence": {
            "paramName": "field_presence",
            "paramType": ".google.protobuf.FeatureSet.FieldPresence",
            "comments": []
          },
          "FeatureSet:enum_type": {
            "paramName": "enum_type",
            "paramType": ".google.protobuf.FeatureSet.EnumType",
            "comments": []
          },
          "FeatureSet:repeated_field_encoding": {
            "paramName": "repeated_field_encoding",
            "paramType": ".google.protobuf.FeatureSet.RepeatedFieldEncoding",
            "comments": []
          },
          "FeatureSet:string_field_validation": {
            "paramName": "string_field_validation",
            "paramType": ".google.protobuf.FeatureSet.StringFieldValidation",
            "comments": []
          },
          "FeatureSet:message_encoding": {
            "paramName": "message_encoding",
            "paramType": ".google.protobuf.FeatureSet.MessageEncoding",
            "comments": []
          },
          "FeatureSet:json_format": {
            "paramName": "json_format",
            "paramType": ".google.protobuf.FeatureSet.JsonFormat",
            "comments": []
          },
          "FeatureSet:raw_features": {
            "paramName": "raw_features",
            "paramType": ".google.protobuf.FeatureSet",
            "comments": []
          },
          "SourceCodeInfo:location": {
            "paramName": "location",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A Location identifies a piece of source code in a .proto file which",
              " corresponds to a particular definition.  This information is intended",
              " to be useful to IDEs, code indexers, documentation generators, and similar",
              " tools.",
              "",
              " For example, say we have a file like:",
              "   message Foo {",
              "     optional string foo = 1;",
              "   }",
              " Let's look at just the field definition:",
              "   optional string foo = 1;",
              "   ^       ^^     ^^  ^  ^^^",
              "   a       bc     de  f  ghi",
              " We have the following locations:",
              "   span   path               represents",
              "   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.",
              "   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).",
              "   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).",
              "   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).",
              "   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).",
              "",
              " Notes:",
              " - A location may refer to a repeated field itself (i.e. not to any",
              "   particular index within it).  This is used whenever a set of elements are",
              "   logically enclosed in a single code segment.  For example, an entire",
              "   extend block (possibly containing multiple extension definitions) will",
              "   have an outer location whose path refers to the \"extensions\" repeated",
              "   field without an index.",
              " - Multiple locations may have the same path.  This happens when a single",
              "   logical declaration is spread out across multiple places.  The most",
              "   obvious example is the \"extend\" block again -- there may be multiple",
              "   extend blocks in the same scope, each of which will have the same path.",
              " - A location's span is not always a subset of its parent's span.  For",
              "   example, the \"extendee\" of an extension declaration appears at the",
              "   beginning of the \"extend\" block and is shared by all extensions within",
              "   the block.",
              " - Just because a location's span is a subset of some other location's span",
              "   does not mean that it is a descendant.  For example, a \"group\" defines",
              "   both a type and a field in a single declaration.  Thus, the locations",
              "   corresponding to the type and field and their components will overlap.",
              " - Code which tries to interpret locations should probably be designed to",
              "   ignore those that it doesn't understand, as more types of locations could",
              "   be recorded in the future."
            ]
          },
          "GeneratedCodeInfo:annotation": {
            "paramName": "annotation",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " An Annotation connects some span of text in generated code to an element",
              " of its generating .proto file."
            ]
          },
          "Duration:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Signed seconds of the span of time. Must be from -315,576,000,000",
              " to +315,576,000,000 inclusive. Note: these bounds are computed from:",
              " 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
            ]
          },
          "Duration:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Signed fractions of a second at nanosecond resolution of the span",
              " of time. Durations less than one second are represented with a 0",
              " `seconds` field and a positive or negative `nanos` field. For durations",
              " of one second or more, a non-zero value for the `nanos` field must be",
              " of the same sign as the `seconds` field. Must be from -999,999,999",
              " to +999,999,999 inclusive."
            ]
          },
          "CommonLanguageSettings:reference_docs_uri": {
            "paramName": "reference_docs_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to automatically generated reference documentation.  Example:",
              " https://cloud.google.com/nodejs/docs/reference/asset/latest"
            ]
          },
          "CommonLanguageSettings:destinations": {
            "paramName": "destinations",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " The destination where API teams want this client library to be published."
            ]
          },
          "ClientLibrarySettings:version": {
            "paramName": "version",
            "paramType": "TYPE_STRING",
            "comments": [
              " Version of the API to apply these settings to. This is the full protobuf",
              " package for the API, ending in the version element.",
              " Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\"."
            ]
          },
          "ClientLibrarySettings:launch_stage": {
            "paramName": "launch_stage",
            "paramType": ".google.api.LaunchStage",
            "comments": [
              " Launch stage of this version of the API."
            ]
          },
          "ClientLibrarySettings:rest_numeric_enums": {
            "paramName": "rest_numeric_enums",
            "paramType": "TYPE_BOOL",
            "comments": [
              " When using transport=rest, the client request will encode enums as",
              " numbers rather than strings."
            ]
          },
          "ClientLibrarySettings:java_settings": {
            "paramName": "java_settings",
            "paramType": ".google.api.JavaSettings",
            "comments": [
              " Settings for legacy Java features, supported in the Service YAML."
            ]
          },
          "ClientLibrarySettings:cpp_settings": {
            "paramName": "cpp_settings",
            "paramType": ".google.api.CppSettings",
            "comments": [
              " Settings for C++ client libraries."
            ]
          },
          "ClientLibrarySettings:php_settings": {
            "paramName": "php_settings",
            "paramType": ".google.api.PhpSettings",
            "comments": [
              " Settings for PHP client libraries."
            ]
          },
          "ClientLibrarySettings:python_settings": {
            "paramName": "python_settings",
            "paramType": ".google.api.PythonSettings",
            "comments": [
              " Settings for Python client libraries."
            ]
          },
          "ClientLibrarySettings:node_settings": {
            "paramName": "node_settings",
            "paramType": ".google.api.NodeSettings",
            "comments": [
              " Settings for Node client libraries."
            ]
          },
          "ClientLibrarySettings:dotnet_settings": {
            "paramName": "dotnet_settings",
            "paramType": ".google.api.DotnetSettings",
            "comments": [
              " Settings for .NET client libraries."
            ]
          },
          "ClientLibrarySettings:ruby_settings": {
            "paramName": "ruby_settings",
            "paramType": ".google.api.RubySettings",
            "comments": [
              " Settings for Ruby client libraries."
            ]
          },
          "ClientLibrarySettings:go_settings": {
            "paramName": "go_settings",
            "paramType": ".google.api.GoSettings",
            "comments": [
              " Settings for Go client libraries."
            ]
          },
          "Publishing:method_settings": {
            "paramName": "method_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of API method settings, e.g. the behavior for methods that use the",
              " long-running operation pattern."
            ]
          },
          "Publishing:new_issue_uri": {
            "paramName": "new_issue_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to a *public* URI where users can report issues.  Example:",
              " https://issuetracker.google.com/issues/new?component=190865&template=1161103"
            ]
          },
          "Publishing:documentation_uri": {
            "paramName": "documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Link to product home page.  Example:",
              " https://cloud.google.com/asset-inventory/docs/overview"
            ]
          },
          "Publishing:api_short_name": {
            "paramName": "api_short_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " Used as a tracking tag when collecting data about the APIs developer",
              " relations artifacts like docs, packages delivered to package managers,",
              " etc.  Example: \"speech\"."
            ]
          },
          "Publishing:github_label": {
            "paramName": "github_label",
            "paramType": "TYPE_STRING",
            "comments": [
              " GitHub label to apply to issues and pull requests opened for this API."
            ]
          },
          "Publishing:codeowner_github_teams": {
            "paramName": "codeowner_github_teams",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " GitHub teams to be added to CODEOWNERS in the directory in GitHub",
              " containing source code for the client libraries for this API."
            ]
          },
          "Publishing:doc_tag_prefix": {
            "paramName": "doc_tag_prefix",
            "paramType": "TYPE_STRING",
            "comments": [
              " A prefix used in sample code when demarking regions to be included in",
              " documentation."
            ]
          },
          "Publishing:organization": {
            "paramName": "organization",
            "paramType": ".google.api.ClientLibraryOrganization",
            "comments": [
              " For whom the client library is being published."
            ]
          },
          "Publishing:library_settings": {
            "paramName": "library_settings",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Client library settings.  If the same version string appears multiple",
              " times in this list, then the last one wins.  Settings from earlier",
              " settings with the same version string are discarded."
            ]
          },
          "Publishing:proto_reference_documentation_uri": {
            "paramName": "proto_reference_documentation_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional link to proto reference documentation.  Example:",
              " https://cloud.google.com/pubsub/lite/docs/reference/rpc"
            ]
          },
          "JavaSettings:library_package": {
            "paramName": "library_package",
            "paramType": "TYPE_STRING",
            "comments": [
              " The package name to use in Java. Clobbers the java_package option",
              " set in the protobuf. This should be used **only** by APIs",
              " who have already set the language_settings.java.package_name\" field",
              " in gapic.yaml. API teams should use the protobuf java_package option",
              " where possible.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      library_package: com.google.cloud.pubsub.v1"
            ]
          },
          "JavaSettings:service_class_names": {
            "paramName": "service_class_names",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Configure the Java class name to use instead of the service's for its",
              " corresponding generated GAPIC client. Keys are fully-qualified",
              " service names as they appear in the protobuf (including the full",
              " the language_settings.java.interface_names\" field in gapic.yaml. API",
              " teams should otherwise use the service name as it appears in the",
              " protobuf.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    java_settings:",
              "      service_class_names:",
              "        - google.pubsub.v1.Publisher: TopicAdmin",
              "        - google.pubsub.v1.Subscriber: SubscriptionAdmin"
            ]
          },
          "JavaSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "CppSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PhpSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "PythonSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "NodeSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "DotnetSettings:renamed_services": {
            "paramName": "renamed_services",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from original service names to renamed versions.",
              " This is used when the default generated types",
              " would cause a naming conflict. (Neither name is",
              " fully-qualified.)",
              " Example: Subscriber to SubscriberServiceApi."
            ]
          },
          "DotnetSettings:renamed_resources": {
            "paramName": "renamed_resources",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Map from full resource types to the effective short name",
              " for the resource. This is used when otherwise resource",
              " named from different services would cause naming collisions.",
              " Example entry:",
              " \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\""
            ]
          },
          "DotnetSettings:ignored_resources": {
            "paramName": "ignored_resources",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " List of full resource types to ignore during generation.",
              " This is typically used for API-specific Location resources,",
              " which should be handled by the generator as if they were actually",
              " the common Location resources.",
              " Example entry: \"documentai.googleapis.com/Location\""
            ]
          },
          "DotnetSettings:forced_namespace_aliases": {
            "paramName": "forced_namespace_aliases",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Namespaces which must be aliased in snippets due to",
              " a known (but non-generator-predictable) naming collision"
            ]
          },
          "DotnetSettings:handwritten_signatures": {
            "paramName": "handwritten_signatures",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Method signatures (in the form \"service.method(signature)\")",
              " which are provided separately, so shouldn't be generated.",
              " Snippets *calling* these methods are still generated, however."
            ]
          },
          "RubySettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "GoSettings:common": {
            "paramName": "common",
            "paramType": ".google.api.CommonLanguageSettings",
            "comments": [
              " Some settings."
            ]
          },
          "MethodSettings:selector": {
            "paramName": "selector",
            "paramType": "TYPE_STRING",
            "comments": [
              " The fully qualified name of the method, for which the options below apply.",
              " This is used to find the method to apply the options."
            ]
          },
          "MethodSettings:long_running": {
            "paramName": "long_running",
            "paramType": ".google.api.MethodSettings.LongRunning",
            "comments": [
              " Describes settings to use for long-running operations when generating",
              " API methods for RPCs. Complements RPCs that use the annotations in",
              " google/longrunning/operations.proto.",
              "",
              " Example of a YAML configuration::",
              "",
              "  publishing:",
              "    method_settings:",
              "      - selector: google.cloud.speech.v2.Speech.BatchRecognize",
              "        long_running:",
              "          initial_poll_delay:",
              "            seconds: 60 # 1 minute",
              "          poll_delay_multiplier: 1.5",
              "          max_poll_delay:",
              "            seconds: 360 # 6 minutes",
              "          total_poll_timeout:",
              "             seconds: 54000 # 90 minutes"
            ]
          },
          "Compliance": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format",
              " correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped",
              " correctly."
            ]
          },
          "Compliance:RepeatDataBody": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the entire request object in the REST body.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyInfo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending the a message-type field in the REST body. Per AIP-127, only",
              " top-level, non-repeated fields can be sent this way.",
              ""
            ]
          },
          "Compliance:RepeatDataQuery": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending all request fields as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataSimplePath": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request. This method exercises",
              " sending some parameters as \"simple\" path variables (i.e., of the form",
              " \"/bar/{foo}\" rather than \"/{foo=bar/*}\"), and the rest as query parameters.",
              ""
            ]
          },
          "Compliance:RepeatDataPathResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a path resource.",
              ""
            ]
          },
          "Compliance:RepeatDataPathTrailingResource": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Same as RepeatDataSimplePath, but with a trailing resource.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPut": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PUT method.",
              ""
            ]
          },
          "Compliance:RepeatDataBodyPatch": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method echoes the ComplianceData request, using the HTTP PATCH method.",
              ""
            ]
          },
          "Compliance:GetEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the",
              " .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the",
              " response from this RPC as the request to VerifyEnum()",
              "",
              " The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for",
              " VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "Compliance:VerifyEnum": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()",
              " verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds",
              " with the same EnumResponse; otherwise, the RPC errors.",
              "",
              " This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,",
              " although they are not guaranteed to be the same across separate Showcase server runs.",
              ""
            ]
          },
          "RepeatRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "RepeatRequest:info": {
            "paramName": "info",
            "paramType": ".google.showcase.v1beta1.ComplianceData",
            "comments": []
          },
          "RepeatRequest:server_verify": {
            "paramName": "server_verify",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If true, the server will verify that the received request matches",
              " the request with the same name in the compliance test suite."
            ]
          },
          "RepeatRequest:intended_binding_uri": {
            "paramName": "intended_binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template this request is expected to be bound to server-side."
            ]
          },
          "RepeatRequest:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": [
              " Some top level fields, to test that these are encoded correctly",
              " in query params."
            ]
          },
          "RepeatRequest:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatRequest:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "RepeatRequest:p_int64": {
            "paramName": "p_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "RepeatRequest:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "RepeatResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.RepeatRequest",
            "comments": []
          },
          "RepeatResponse:binding_uri": {
            "paramName": "binding_uri",
            "paramType": "TYPE_STRING",
            "comments": [
              " The URI template the request was bound to server-side."
            ]
          },
          "ComplianceSuite:group": {
            "paramName": "group",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceGroup:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceGroup:rpcs": {
            "paramName": "rpcs",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "ComplianceGroup:requests": {
            "paramName": "requests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": []
          },
          "ComplianceData:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:f_int32": {
            "paramName": "f_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:f_sint32": {
            "paramName": "f_sint32",
            "paramType": "TYPE_SINT32",
            "comments": []
          },
          "ComplianceData:f_sfixed32": {
            "paramName": "f_sfixed32",
            "paramType": "TYPE_SFIXED32",
            "comments": []
          },
          "ComplianceData:f_uint32": {
            "paramName": "f_uint32",
            "paramType": "TYPE_UINT32",
            "comments": []
          },
          "ComplianceData:f_fixed32": {
            "paramName": "f_fixed32",
            "paramType": "TYPE_FIXED32",
            "comments": []
          },
          "ComplianceData:f_int64": {
            "paramName": "f_int64",
            "paramType": "TYPE_INT64",
            "comments": []
          },
          "ComplianceData:f_sint64": {
            "paramName": "f_sint64",
            "paramType": "TYPE_SINT64",
            "comments": []
          },
          "ComplianceData:f_sfixed64": {
            "paramName": "f_sfixed64",
            "paramType": "TYPE_SFIXED64",
            "comments": []
          },
          "ComplianceData:f_uint64": {
            "paramName": "f_uint64",
            "paramType": "TYPE_UINT64",
            "comments": []
          },
          "ComplianceData:f_fixed64": {
            "paramName": "f_fixed64",
            "paramType": "TYPE_FIXED64",
            "comments": []
          },
          "ComplianceData:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceData:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:f_bytes": {
            "paramName": "f_bytes",
            "paramType": "TYPE_BYTES",
            "comments": []
          },
          "ComplianceData:f_kingdom": {
            "paramName": "f_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceData:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceData:p_int32": {
            "paramName": "p_int32",
            "paramType": "TYPE_INT32",
            "comments": []
          },
          "ComplianceData:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceData:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceData:p_kingdom": {
            "paramName": "p_kingdom",
            "paramType": ".google.showcase.v1beta1.ComplianceData.LifeKingdom",
            "comments": []
          },
          "ComplianceData:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataChild",
            "comments": []
          },
          "ComplianceDataChild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:f_float": {
            "paramName": "f_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:f_continent": {
            "paramName": "f_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:f_child": {
            "paramName": "f_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataChild:p_string": {
            "paramName": "p_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataChild:p_float": {
            "paramName": "p_float",
            "paramType": "TYPE_FLOAT",
            "comments": []
          },
          "ComplianceDataChild:p_double": {
            "paramName": "p_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataChild:p_bool": {
            "paramName": "p_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "ComplianceDataChild:p_continent": {
            "paramName": "p_continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": []
          },
          "ComplianceDataChild:p_child": {
            "paramName": "p_child",
            "paramType": ".google.showcase.v1beta1.ComplianceDataGrandchild",
            "comments": []
          },
          "ComplianceDataGrandchild:f_string": {
            "paramName": "f_string",
            "paramType": "TYPE_STRING",
            "comments": []
          },
          "ComplianceDataGrandchild:f_double": {
            "paramName": "f_double",
            "paramType": "TYPE_DOUBLE",
            "comments": []
          },
          "ComplianceDataGrandchild:f_bool": {
            "paramName": "f_bool",
            "paramType": "TYPE_BOOL",
            "comments": []
          },
          "EnumRequest:unknown_enum": {
            "paramName": "unknown_enum",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file."
            ]
          },
          "EnumResponse:request": {
            "paramName": "request",
            "paramType": ".google.showcase.v1beta1.EnumRequest",
            "comments": [
              " The original request for a known or unknown enum from the server."
            ]
          },
          "EnumResponse:continent": {
            "paramName": "continent",
            "paramType": ".google.showcase.v1beta1.Continent",
            "comments": [
              " The actual enum the server provided."
            ]
          },
          "RoutingRule:routing_parameters": {
            "paramName": "routing_parameters",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A collection of Routing Parameter specifications.",
              " **NOTE:** If multiple Routing Parameters describe the same key",
              " (via the `path_template` field or via the `field` field when",
              " `path_template` is not provided), \"last one wins\" rule",
              " determines which Parameter gets used.",
              " See the examples for more details."
            ]
          },
          "RoutingParameter:field": {
            "paramName": "field",
            "paramType": "TYPE_STRING",
            "comments": [
              " A request field to extract the header key-value pair from."
            ]
          },
          "RoutingParameter:path_template": {
            "paramName": "path_template",
            "paramType": "TYPE_STRING",
            "comments": [
              " A pattern matching the key-value field. Optional.",
              " If not specified, the whole field specified in the `field` field will be",
              " taken as value, and its name used as key. If specified, it MUST contain",
              " exactly one named segment (along with any number of unnamed segments) The",
              " pattern will be matched over the field specified in the `field` field, then",
              " if the match is successful:",
              " - the name of the single named segment will be used as a header name,",
              " - the match value of the segment will be used as a header value;",
              " if the match is NOT successful, nothing will be sent.",
              "",
              " Example:",
              "",
              "               -- This is a field in the request message",
              "              |   that the header value will be extracted from.",
              "              |",
              "              |                     -- This is the key name in the",
              "              |                    |   routing header.",
              "              V                    |",
              "     field: \"table_name\"           v",
              "     path_template: \"projects/*/{table_location=instances/*}/tables/*\"",
              "                                                ^            ^",
              "                                                |            |",
              "       In the {} brackets is the pattern that --             |",
              "       specifies what to extract from the                    |",
              "       field as a value to be sent.                          |",
              "                                                             |",
              "      The string in the field must match the whole pattern --",
              "      before brackets, inside brackets, after brackets.",
              "",
              " When looking at this specific example, we can see that:",
              " - A key-value pair with the key `table_location`",
              "   and the value matching `instances/*` should be added",
              "   to the x-goog-request-params routing header.",
              " - The value is extracted from the request message's `table_name` field",
              "   if it matches the full pattern specified:",
              "   `projects/*/instances/*/tables/*`.",
              "",
              " **NB:** If the `path_template` field is not provided, the key name is",
              " equal to the field name, and the whole field should be sent as a value.",
              " This makes the pattern for the field and the value functionally equivalent",
              " to `**`, and the configuration",
              "",
              "     {",
              "       field: \"table_name\"",
              "     }",
              "",
              " is a functionally equivalent shorthand to:",
              "",
              "     {",
              "       field: \"table_name\"",
              "       path_template: \"{table_name=**}\"",
              "     }",
              "",
              " See Example 1 for more details."
            ]
          },
          "Any:type_url": {
            "paramName": "type_url",
            "paramType": "TYPE_STRING",
            "comments": [
              " A URL/resource name that uniquely identifies the type of the serialized",
              " protocol buffer message. This string must contain at least",
              " one \"/\" character. The last segment of the URL's path must represent",
              " the fully qualified name of the type (as in",
              " `path/google.protobuf.Duration`). The name should be in a canonical form",
              " (e.g., leading \".\" is not accepted).",
              "",
              " In practice, teams usually precompile into the binary all types that they",
              " expect it to use in the context of Any. However, for URLs which use the",
              " scheme `http`, `https`, or no scheme, one can optionally set up a type",
              " server that maps type URLs to message definitions as follows:",
              "",
              " * If no scheme is provided, `https` is assumed.",
              " * An HTTP GET on the URL must yield a [google.protobuf.Type][]",
              "   value in binary format, or produce an error.",
              " * Applications are allowed to cache lookup results based on the",
              "   URL, or have them precompiled into a binary to avoid any",
              "   lookup. Therefore, binary compatibility needs to be preserved",
              "   on changes to types. (Use versioned type names to manage",
              "   breaking changes.)",
              "",
              " Note: this functionality is not currently available in the official",
              " protobuf release, and it is not used for type URLs beginning with",
              " type.googleapis.com. As of May 2023, there are no widely used type server",
              " implementations and no plans to implement one.",
              "",
              " Schemes other than `http`, `https` (or the empty scheme) might be",
              " used with implementation specific semantics.",
              ""
            ]
          },
          "Any:value": {
            "paramName": "value",
            "paramType": "TYPE_BYTES",
            "comments": [
              " Must be a valid serialized protocol buffer of the above specified type."
            ]
          },
          "Status:code": {
            "paramName": "code",
            "paramType": "TYPE_INT32",
            "comments": [
              " The status code, which should be an enum value of",
              " [google.rpc.Code][google.rpc.Code]."
            ]
          },
          "Status:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " A developer-facing error message, which should be in English. Any",
              " user-facing error message should be localized and sent in the",
              " [google.rpc.Status.details][google.rpc.Status.details] field, or localized",
              " by the client."
            ]
          },
          "Status:details": {
            "paramName": "details",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of messages that carry the error details.  There is a common set of",
              " message types for APIs to use."
            ]
          },
          "Operations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Manages long-running operations with an API service.",
              "",
              " When an API method normally takes long time to complete, it can be designed",
              " to return [Operation][google.longrunning.Operation] to the client, and the client can use this",
              " interface to receive the real response asynchronously by polling the",
              " operation resource, or pass the operation resource to another API (such as",
              " Google Cloud Pub/Sub API) to receive the response.  Any API service that",
              " returns long-running operations should implement the `Operations` interface",
              " so developers can have a consistent client experience."
            ]
          },
          "Operations:ListOperations": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists operations that match the specified filter in the request. If the",
              " server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "",
              " NOTE: the `name` binding allows API services to override the binding",
              " to use different resource name schemes, such as `users/*/operations`. To",
              " override the binding, API services can add a binding such as",
              " `\"/v1/{name=users/*}/operations\"` to their service configuration.",
              " For backwards compatibility, the default name includes the operations",
              " collection id, however overriding users must ensure the name binding",
              " is the parent resource, without the operations collection id.",
              ""
            ]
          },
          "Operations:GetOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets the latest state of a long-running operation.  Clients can use this",
              " method to poll the operation result at intervals as recommended by the API",
              " service.",
              ""
            ]
          },
          "Operations:DeleteOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a long-running operation. This method indicates that the client is",
              " no longer interested in the operation result. It does not cancel the",
              " operation. If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              ""
            ]
          },
          "Operations:CancelOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Starts asynchronous cancellation on a long-running operation.  The server",
              " makes a best effort to cancel the operation, but success is not",
              " guaranteed.  If the server doesn't support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.  Clients can use",
              " [Operations.GetOperation][google.longrunning.Operations.GetOperation] or",
              " other methods to check whether the cancellation succeeded or whether the",
              " operation completed despite cancellation. On successful cancellation,",
              " the operation is not deleted; instead, it becomes an operation with",
              " an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,",
              " corresponding to `Code.CANCELLED`.",
              ""
            ]
          },
          "Operations:WaitOperation": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Waits until the specified long-running operation is done or reaches at most",
              " a specified timeout, returning the latest state.  If the operation is",
              " already done, the latest state is immediately returned.  If the timeout",
              " specified is greater than the default HTTP/RPC timeout, the HTTP/RPC",
              " timeout is used.  If the server does not support this method, it returns",
              " `google.rpc.Code.UNIMPLEMENTED`.",
              " Note that this method is on a best-effort basis.  It may return the latest",
              " state before the specified timeout (including immediately), meaning even an",
              " immediate response is no guarantee that the operation is done.",
              ""
            ]
          },
          "Operation:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The server-assigned name, which is only unique within the same service that",
              " originally returns it. If you use the default HTTP mapping, the",
              " `name` should be a resource name ending with `operations/{unique_id}`."
            ]
          },
          "Operation:metadata": {
            "paramName": "metadata",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " Service-specific metadata associated with the operation.  It typically",
              " contains progress information and common metadata such as create time.",
              " Some services might not provide such metadata.  Any method that returns a",
              " long-running operation should document the metadata type, if any."
            ]
          },
          "Operation:done": {
            "paramName": "done",
            "paramType": "TYPE_BOOL",
            "comments": [
              " If the value is `false`, it means the operation is still in progress.",
              " If `true`, the operation is completed, and either `error` or `response` is",
              " available."
            ]
          },
          "Operation:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error result of the operation in case of failure or cancellation."
            ]
          },
          "Operation:response": {
            "paramName": "response",
            "paramType": ".google.protobuf.Any",
            "comments": [
              " The normal response of the operation in case of success.  If the original",
              " method returns no data on success, such as `Delete`, the response is",
              " `google.protobuf.Empty`.  If the original method is standard",
              " `Get`/`Create`/`Update`, the response should be the resource.  For other",
              " methods, the response should have the type `XxxResponse`, where `Xxx`",
              " is the original method name.  For example, if the original method name",
              " is `TakeSnapshot()`, the inferred response type is",
              " `TakeSnapshotResponse`."
            ]
          },
          "GetOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource."
            ]
          },
          "ListOperationsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation's parent resource."
            ]
          },
          "ListOperationsRequest:filter": {
            "paramName": "filter",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list filter."
            ]
          },
          "ListOperationsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The standard list page size."
            ]
          },
          "ListOperationsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard list page token."
            ]
          },
          "ListOperationsResponse:operations": {
            "paramName": "operations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " A list of operations that matches the specified filter in the request."
            ]
          },
          "ListOperationsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The standard List next-page token."
            ]
          },
          "CancelOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be cancelled."
            ]
          },
          "DeleteOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to be deleted."
            ]
          },
          "WaitOperationRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the operation resource to wait on."
            ]
          },
          "WaitOperationRequest:timeout": {
            "paramName": "timeout",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The maximum duration to wait before timing out. If left blank, the wait",
              " will be at most the time permitted by the underlying HTTP/RPC protocol.",
              " If RPC context deadline is also specified, the shorter one will be used."
            ]
          },
          "OperationInfo:response_type": {
            "paramName": "response_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the primary return type for this",
              " long-running operation.",
              " This type will be used to deserialize the LRO's response.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "OperationInfo:metadata_type": {
            "paramName": "metadata_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " Required. The message name of the metadata type for this long-running",
              " operation.",
              "",
              " If the response is in a different package from the rpc, a fully-qualified",
              " message name must be used (e.g. `google.protobuf.Struct`).",
              "",
              " Note: Altering this value constitutes a breaking change."
            ]
          },
          "Timestamp:seconds": {
            "paramName": "seconds",
            "paramType": "TYPE_INT64",
            "comments": [
              " Represents seconds of UTC time since Unix epoch",
              " 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to",
              " 9999-12-31T23:59:59Z inclusive."
            ]
          },
          "Timestamp:nanos": {
            "paramName": "nanos",
            "paramType": "TYPE_INT32",
            "comments": [
              " Non-negative fractions of a second at nanosecond resolution. Negative",
              " second values with fractions must still have non-negative nanos values",
              " that count forward in time. Must be from 0 to 999,999,999",
              " inclusive."
            ]
          },
          "Echo": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This service is used showcase the four main types of rpcs - unary, server",
              " side streaming, client side streaming, and bidirectional streaming. This",
              " service also exposes methods that explicitly implement server delay, and",
              " paginated calls. Set the 'showcase-trailer' metadata key on any method",
              " to have the values echoed in the response trailers. Set the ",
              " 'x-goog-request-params' metadata key on any method to have the values",
              " echoed in the response headers."
            ]
          },
          "Echo:Expand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method splits the given content into words and will pass each word back",
              " through the stream. This method showcases server-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Collect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will collect the words given to it. When the stream is closed",
              " by the client, this method will return the a concatenation of the strings",
              " passed to it. This method showcases client-side streaming RPCs.",
              ""
            ]
          },
          "Echo:Chat": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method, upon receiving a request on the stream, will pass the same",
              " content back on the stream. This method showcases bidirectional",
              " streaming RPCs.",
              ""
            ]
          },
          "Echo:PagedExpand": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the Expand method but instead of returning a stream of",
              " expanded words, this method returns a paged list of expanded words.",
              ""
            ]
          },
          "Echo:PagedExpandLegacy": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is similar to the PagedExpand except that it uses",
              " max_results instead of page_size, as some legacy APIs still",
              " do. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:PagedExpandLegacyMapped": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method returns a map containing lists of words that appear in the input, keyed by their",
              " initial character. The only words returned are the ones included in the current page,",
              " as determined by page_token and page_size, which both refer to the word indices in the",
              " input. This paging result consisting of a map of lists is a pattern used by some legacy",
              " APIs. New APIs should NOT use this pattern.",
              ""
            ]
          },
          "Echo:Wait": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will wait for the requested amount of time and then return.",
              " This method showcases how a client handles a request timeout.",
              ""
            ]
          },
          "Echo:Block": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method will block (wait) for the requested amount of time",
              " and then return the response or error.",
              " This method showcases how a client handles delays or retries.",
              ""
            ]
          },
          "EchoRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content to be echoed by the server."
            ]
          },
          "EchoRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error to be thrown by the server."
            ]
          },
          "EchoRequest:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity to be echoed by the server."
            ]
          },
          "EchoRequest:header": {
            "paramName": "header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoRequest:other_header": {
            "paramName": "other_header",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. This field can be set to test the routing annotation on the Echo method."
            ]
          },
          "EchoResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content specified in the request."
            ]
          },
          "EchoResponse:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Severity",
            "comments": [
              " The severity specified in the request."
            ]
          },
          "ExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The content that will be split into words and returned on the stream."
            ]
          },
          "ExpandRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that is thrown after all words are sent on the stream."
            ]
          },
          "PagedExpandRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page."
            ]
          },
          "PagedExpandRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandLegacyRequest:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " The string to expand."
            ],
            "fieldBehavior": 2
          },
          "PagedExpandLegacyRequest:max_results": {
            "paramName": "max_results",
            "paramType": "TYPE_INT32",
            "comments": [
              " The number of words to returned in each page.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that",
              "     violates aip.dev/158. Ordinarily, this should be page_size. --)"
            ]
          },
          "PagedExpandLegacyRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The position of the page to be returned."
            ]
          },
          "PagedExpandResponse:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded."
            ]
          },
          "PagedExpandResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "PagedExpandResponseList:words": {
            "paramName": "words",
            "paramType": "TYPE_STRING[]",
            "comments": []
          },
          "PagedExpandLegacyMappedResponse:alphabetized": {
            "paramName": "alphabetized",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The words that were expanded, indexed by their initial character.",
              " (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates",
              "     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)"
            ]
          },
          "PagedExpandLegacyMappedResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token."
            ]
          },
          "WaitRequest:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "WaitRequest:ttl": {
            "paramName": "ttl",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The duration of this operation."
            ]
          },
          "WaitRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "WaitRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.WaitResponse",
            "comments": [
              " The response to be returned on operation completion."
            ]
          },
          "WaitResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content of the result."
            ]
          },
          "WaitMetadata:end_time": {
            "paramName": "end_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time that this operation will complete."
            ]
          },
          "BlockRequest:response_delay": {
            "paramName": "response_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " The amount of time to block before returning a response."
            ]
          },
          "BlockRequest:error": {
            "paramName": "error",
            "paramType": ".google.rpc.Status",
            "comments": [
              " The error that will be returned by the server. If this code is specified",
              " to be the OK rpc code, an empty response will be returned."
            ]
          },
          "BlockRequest:success": {
            "paramName": "success",
            "paramType": ".google.showcase.v1beta1.BlockResponse",
            "comments": [
              " The response to be returned that will signify successful method call."
            ]
          },
          "BlockResponse:content": {
            "paramName": "content",
            "paramType": "TYPE_STRING",
            "comments": [
              " This content can contain anything, the server will not depend on a value",
              " here."
            ]
          },
          "ResourceDescriptor:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type. It must be in the format of",
              " {service_name}/{resource_type_kind}. The `resource_type_kind` must be",
              " singular and must not include version numbers.",
              "",
              " Example: `storage.googleapis.com/Bucket`",
              "",
              " The value of the resource_type_kind must follow the regular expression",
              " /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and",
              " should use PascalCase (UpperCamelCase). The maximum number of",
              " characters allowed for the `resource_type_kind` is 100."
            ]
          },
          "ResourceDescriptor:pattern": {
            "paramName": "pattern",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " Optional. The relative resource name pattern associated with this resource",
              " type. The DNS prefix of the full resource name shouldn't be specified here.",
              "",
              " The path pattern must follow the syntax, which aligns with HTTP binding",
              " syntax:",
              "",
              "     Template = Segment { \"/\" Segment } ;",
              "     Segment = LITERAL | Variable ;",
              "     Variable = \"{\" LITERAL \"}\" ;",
              "",
              " Examples:",
              "",
              "     - \"projects/{project}/topics/{topic}\"",
              "     - \"projects/{project}/knowledgeBases/{knowledge_base}\"",
              "",
              " The components in braces correspond to the IDs for each resource in the",
              " hierarchy. It is expected that, if multiple patterns are provided,",
              " the same component name (e.g. \"project\") refers to IDs of the same",
              " type of resource."
            ]
          },
          "ResourceDescriptor:name_field": {
            "paramName": "name_field",
            "paramType": "TYPE_STRING",
            "comments": [
              " Optional. The field on the resource that designates the resource name",
              " field. If omitted, this is assumed to be \"name\"."
            ]
          },
          "ResourceDescriptor:history": {
            "paramName": "history",
            "paramType": ".google.api.ResourceDescriptor.History",
            "comments": [
              " Optional. The historical or future-looking state of the resource pattern.",
              "",
              " Example:",
              "",
              "     // The InspectTemplate message originally only supported resource",
              "     // names with organization, and project was added later.",
              "     message InspectTemplate {",
              "       option (google.api.resource) = {",
              "         type: \"dlp.googleapis.com/InspectTemplate\"",
              "         pattern:",
              "         \"organizations/{organization}/inspectTemplates/{inspect_template}\"",
              "         pattern: \"projects/{project}/inspectTemplates/{inspect_template}\"",
              "         history: ORIGINALLY_SINGLE_PATTERN",
              "       };",
              "     }"
            ]
          },
          "ResourceDescriptor:plural": {
            "paramName": "plural",
            "paramType": "TYPE_STRING",
            "comments": [
              " The plural name used in the resource name and permission names, such as",
              " 'projects' for the resource name of 'projects/{project}' and the permission",
              " name of 'cloudresourcemanager.googleapis.com/projects.get'. It is the same",
              " concept of the `plural` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              "",
              " Note: The plural form is required even for singleton resources. See",
              " https://aip.dev/156"
            ]
          },
          "ResourceDescriptor:singular": {
            "paramName": "singular",
            "paramType": "TYPE_STRING",
            "comments": [
              " The same concept of the `singular` field in k8s CRD spec",
              " https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/",
              " Such as \"project\" for the `resourcemanager.googleapis.com/Project` type."
            ]
          },
          "ResourceDescriptor:style": {
            "paramName": "style",
            "paramType": "TYPE_ENUM[]",
            "comments": [
              " Style flag(s) for this resource.",
              " These indicate that a resource is expected to conform to a given",
              " style. See the specific style flags for additional information."
            ]
          },
          "ResourceReference:type": {
            "paramName": "type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type that the annotated field references.",
              "",
              " Example:",
              "",
              "     message Subscription {",
              "       string topic = 2 [(google.api.resource_reference) = {",
              "         type: \"pubsub.googleapis.com/Topic\"",
              "       }];",
              "     }",
              "",
              " Occasionally, a field may reference an arbitrary resource. In this case,",
              " APIs use the special value * in their resource reference.",
              "",
              " Example:",
              "",
              "     message GetIamPolicyRequest {",
              "       string resource = 2 [(google.api.resource_reference) = {",
              "         type: \"*\"",
              "       }];",
              "     }"
            ]
          },
          "ResourceReference:child_type": {
            "paramName": "child_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource type of a child collection that the annotated field",
              " references. This is useful for annotating the `parent` field that",
              " doesn't have a fixed resource type.",
              "",
              " Example:",
              "",
              "     message ListLogEntriesRequest {",
              "       string parent = 1 [(google.api.resource_reference) = {",
              "         child_type: \"logging.googleapis.com/LogEntry\"",
              "       };",
              "     }"
            ]
          },
          "FieldMask:paths": {
            "paramName": "paths",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The set of field mask paths."
            ]
          },
          "Identity": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple identity service."
            ]
          },
          "Identity:CreateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a user.",
              ""
            ]
          },
          "Identity:GetUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the User with the given uri.",
              ""
            ]
          },
          "Identity:UpdateUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a user.",
              ""
            ]
          },
          "Identity:DeleteUser": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a user, their profile, and all of their authored messages.",
              ""
            ]
          },
          "Identity:ListUsers": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all users.",
              ""
            ]
          },
          "User:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user."
            ]
          },
          "User:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The display_name of the user."
            ],
            "fieldBehavior": 2
          },
          "User:email": {
            "paramName": "email",
            "paramType": "TYPE_STRING",
            "comments": [
              " The email address of the user."
            ],
            "fieldBehavior": 2
          },
          "User:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the user was created."
            ],
            "fieldBehavior": 3
          },
          "User:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the user was updated."
            ],
            "fieldBehavior": 3
          },
          "User:age": {
            "paramName": "age",
            "paramType": "TYPE_INT32",
            "comments": [
              " The age of the user in years."
            ]
          },
          "User:height_feet": {
            "paramName": "height_feet",
            "paramType": "TYPE_DOUBLE",
            "comments": [
              " The height of the user in feet."
            ]
          },
          "User:nickname": {
            "paramName": "nickname",
            "paramType": "TYPE_STRING",
            "comments": [
              " The nickname of the user.",
              "",
              " (-- aip.dev/not-precedent: An empty string is a valid nickname.",
              "     Ordinarily, proto3_optional should not be used on a `string` field. --)"
            ]
          },
          "User:enable_notifications": {
            "paramName": "enable_notifications",
            "paramType": "TYPE_BOOL",
            "comments": [
              " Enables the receiving of notifications. The default is true if unset.",
              "",
              " (-- aip.dev/not-precedent: The default for the feature is true.",
              "     Ordinarily, the default for a `bool` field should be false. --)"
            ]
          },
          "CreateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to create."
            ]
          },
          "GetUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested user."
            ],
            "fieldBehavior": 2
          },
          "UpdateUserRequest:user": {
            "paramName": "user",
            "paramType": ".google.showcase.v1beta1.User",
            "comments": [
              " The user to update."
            ]
          },
          "UpdateUserRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteUserRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the user to delete."
            ],
            "fieldBehavior": 2
          },
          "ListUsersRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of users to return. Server may return fewer users",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListUsersRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListUsersResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Identity\\ListUsers` method."
            ]
          },
          "ListUsersResponse:users": {
            "paramName": "users",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of users."
            ]
          },
          "ListUsersResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListUsersRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Message\\ListUsers` method to retrieve the",
              " next page of results."
            ]
          },
          "ErrorInfo:reason": {
            "paramName": "reason",
            "paramType": "TYPE_STRING",
            "comments": [
              " The reason of the error. This is a constant value that identifies the",
              " proximate cause of the error. Error reasons are unique within a particular",
              " domain of errors. This should be at most 63 characters and match a",
              " regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents",
              " UPPER_SNAKE_CASE."
            ]
          },
          "ErrorInfo:domain": {
            "paramName": "domain",
            "paramType": "TYPE_STRING",
            "comments": [
              " The logical grouping to which the \"reason\" belongs. The error domain",
              " is typically the registered service name of the tool or product that",
              " generates the error. Example: \"pubsub.googleapis.com\". If the error is",
              " generated by some common infrastructure, the error domain must be a",
              " globally unique value that identifies the infrastructure. For Google API",
              " infrastructure, the error domain is \"googleapis.com\"."
            ]
          },
          "ErrorInfo:metadata": {
            "paramName": "metadata",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Additional structured details about this error.",
              "",
              " Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in",
              " length. When identifying the current value of an exceeded limit, the units",
              " should be contained in the key, not the value.  For example, rather than",
              " {\"instanceLimit\": \"100/request\"}, should be returned as,",
              " {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of",
              " instances that can be created in a single (batch) request."
            ]
          },
          "RetryInfo:retry_delay": {
            "paramName": "retry_delay",
            "paramType": ".google.protobuf.Duration",
            "comments": [
              " Clients should wait at least this long between retrying the same request."
            ]
          },
          "DebugInfo:stack_entries": {
            "paramName": "stack_entries",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The stack trace entries indicating where the error occurred."
            ]
          },
          "DebugInfo:detail": {
            "paramName": "detail",
            "paramType": "TYPE_STRING",
            "comments": [
              " Additional debugging information provided by the server."
            ]
          },
          "QuotaFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all quota violations."
            ]
          },
          "PreconditionFailure:violations": {
            "paramName": "violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all precondition violations."
            ]
          },
          "BadRequest:field_violations": {
            "paramName": "field_violations",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Describes all violations in a client request."
            ]
          },
          "RequestInfo:request_id": {
            "paramName": "request_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " An opaque string that should only be interpreted by the service generating",
              " it. For example, it can be used to identify requests in the service's logs."
            ]
          },
          "RequestInfo:serving_data": {
            "paramName": "serving_data",
            "paramType": "TYPE_STRING",
            "comments": [
              " Any data that was used to serve this request. For example, an encrypted",
              " stack trace that can be sent back to the service provider for debugging."
            ]
          },
          "ResourceInfo:resource_type": {
            "paramName": "resource_type",
            "paramType": "TYPE_STRING",
            "comments": [
              " A name for the type of resource being accessed, e.g. \"sql table\",",
              " \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL",
              " of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\"."
            ]
          },
          "ResourceInfo:resource_name": {
            "paramName": "resource_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the resource being accessed.  For example, a shared calendar",
              " name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current",
              " error is",
              " [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED]."
            ]
          },
          "ResourceInfo:owner": {
            "paramName": "owner",
            "paramType": "TYPE_STRING",
            "comments": [
              " The owner of the resource (optional).",
              " For example, \"user:<owner email>\" or \"project:<Google developer project",
              " id>\"."
            ]
          },
          "ResourceInfo:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " Describes what error is encountered when accessing this resource.",
              " For example, updating a cloud project may require the `writer` permission",
              " on the developer console project."
            ]
          },
          "Help:links": {
            "paramName": "links",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " URL(s) pointing to additional information on handling the current error."
            ]
          },
          "LocalizedMessage:locale": {
            "paramName": "locale",
            "paramType": "TYPE_STRING",
            "comments": [
              " The locale used following the specification defined at",
              " https://www.rfc-editor.org/rfc/bcp/bcp47.txt.",
              " Examples are: \"en-US\", \"fr-CH\", \"es-MX\""
            ]
          },
          "LocalizedMessage:message": {
            "paramName": "message",
            "paramType": "TYPE_STRING",
            "comments": [
              " The localized error message in the above locale."
            ]
          },
          "Messaging": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A simple messaging service that implements chat rooms and profile posts.",
              "",
              " This messaging service showcases the features that API clients",
              " generated by gapic-generators implement."
            ]
          },
          "Messaging:CreateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a room.",
              ""
            ]
          },
          "Messaging:GetRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Room with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a room.",
              ""
            ]
          },
          "Messaging:DeleteRoom": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a room and all of its blurbs.",
              ""
            ]
          },
          "Messaging:ListRooms": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists all chat rooms.",
              ""
            ]
          },
          "Messaging:CreateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a blurb. If the parent is a room, the blurb is understood to be a",
              " message in that room. If the parent is a profile, the blurb is understood",
              " to be a post on the profile.",
              ""
            ]
          },
          "Messaging:GetBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves the Blurb with the given resource name.",
              ""
            ]
          },
          "Messaging:UpdateBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Updates a blurb.",
              ""
            ]
          },
          "Messaging:DeleteBlurb": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Deletes a blurb.",
              ""
            ]
          },
          "Messaging:ListBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists blurbs for a specific chat room or user profile depending on the",
              " parent resource name.",
              ""
            ]
          },
          "Messaging:SearchBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method searches through all blurbs across all rooms and profiles",
              " for blurbs containing to words found in the query. Only posts that",
              " contain an exact match of a queried word will be returned.",
              ""
            ]
          },
          "Messaging:StreamBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This returns a stream that emits the blurbs that are created for a",
              " particular chat room or user profile.",
              ""
            ]
          },
          "Messaging:SendBlurbs": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This is a stream to create multiple blurbs. If an invalid blurb is",
              " requested to be created, the stream will close with an error.",
              ""
            ]
          },
          "Messaging:Connect": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " This method starts a bidirectional stream that receives all blurbs that",
              " are being created after the stream has started and sends requests to create",
              " blurbs. If an invalid blurb is requested to be created, the stream will",
              " close with an error.",
              ""
            ]
          },
          "Room:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Room:display_name": {
            "paramName": "display_name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The human readable name of the chat room."
            ],
            "fieldBehavior": 2
          },
          "Room:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " The description of the chat room."
            ]
          },
          "Room:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the room was created."
            ],
            "fieldBehavior": 3
          },
          "Room:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the room was updated."
            ],
            "fieldBehavior": 3
          },
          "CreateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to create."
            ]
          },
          "GetRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "UpdateRoomRequest:room": {
            "paramName": "room",
            "paramType": ".google.showcase.v1beta1.Room",
            "comments": [
              " The room to update."
            ]
          },
          "UpdateRoomRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine which fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteRoomRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room."
            ],
            "fieldBehavior": 2
          },
          "ListRoomsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of rooms return. Server may return fewer rooms",
              " than requested. If unspecified, server will pick an appropriate default."
            ]
          },
          "ListRoomsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListRooms` method."
            ]
          },
          "ListRoomsResponse:rooms": {
            "paramName": "rooms",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of rooms."
            ]
          },
          "ListRoomsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListRoomsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Messaging\\ListRooms` method to retrieve",
              " the next page of results."
            ]
          },
          "Blurb:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room."
            ]
          },
          "Blurb:user": {
            "paramName": "user",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the blurb's author."
            ],
            "fieldBehavior": 2
          },
          "Blurb:text": {
            "paramName": "text",
            "paramType": "TYPE_STRING",
            "comments": [
              " The textual content of this blurb."
            ]
          },
          "Blurb:image": {
            "paramName": "image",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The image content of this blurb."
            ]
          },
          "Blurb:create_time": {
            "paramName": "create_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The timestamp at which the blurb was created."
            ],
            "fieldBehavior": 3
          },
          "Blurb:update_time": {
            "paramName": "update_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The latest timestamp at which the blurb was updated."
            ],
            "fieldBehavior": 3
          },
          "Blurb:legacy_room_id": {
            "paramName": "legacy_room_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the room. This field is used to signal",
              " the use of the compound resource pattern",
              " `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`"
            ]
          },
          "Blurb:legacy_user_id": {
            "paramName": "legacy_user_id",
            "paramType": "TYPE_STRING",
            "comments": [
              " The legacy id of the user. This field is used to signal",
              " the use of the compound resource pattern",
              " `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`"
            ]
          },
          "CreateBlurbRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the chat room or user profile that this blurb will",
              " be tied to."
            ],
            "fieldBehavior": 2
          },
          "CreateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to create."
            ]
          },
          "GetBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "UpdateBlurbRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to update."
            ]
          },
          "UpdateBlurbRequest:update_mask": {
            "paramName": "update_mask",
            "paramType": ".google.protobuf.FieldMask",
            "comments": [
              " The field mask to determine wich fields are to be updated. If empty, the",
              " server will assume all fields are to be updated."
            ]
          },
          "DeleteBlurbRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested blurb."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of the requested room or profile whos blurbs to list."
            ],
            "fieldBehavior": 2
          },
          "ListBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs to return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "ListBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\ListBlurbs` method."
            ]
          },
          "ListBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The list of blurbs."
            ]
          },
          "ListBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in ListBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\ListBlurbs` method to retrieve",
              " the next page of results."
            ]
          },
          "SearchBlurbsRequest:query": {
            "paramName": "query",
            "paramType": "TYPE_STRING",
            "comments": [
              " The query used to search for blurbs containing to words of this string.",
              " Only posts that contain an exact match of a queried word will be returned."
            ],
            "fieldBehavior": 2
          },
          "SearchBlurbsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The rooms or profiles to search. If unset, `SearchBlurbs` will search all",
              " rooms and all profiles."
            ]
          },
          "SearchBlurbsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of blurbs return. Server may return fewer",
              " blurbs than requested. If unspecified, server will pick an appropriate",
              " default."
            ]
          },
          "SearchBlurbsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The value of",
              " google.showcase.v1beta1.SearchBlurbsResponse.next_page_token",
              " returned from the previous call to",
              " `google.showcase.v1beta1.Messaging\\SearchBlurbs` method."
            ]
          },
          "SearchBlurbsMetadata:retry_info": {
            "paramName": "retry_info",
            "paramType": ".google.rpc.RetryInfo",
            "comments": [
              " This signals to the client when to next poll for response."
            ]
          },
          "SearchBlurbsResponse:blurbs": {
            "paramName": "blurbs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Blurbs that matched the search query."
            ]
          },
          "SearchBlurbsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " A token to retrieve next page of results.",
              " Pass this value in SearchBlurbsRequest.page_token field in the subsequent",
              " call to `google.showcase.v1beta1.Blurb\\SearchBlurbs` method to",
              " retrieve the next page of results."
            ]
          },
          "StreamBlurbsRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The resource name of a chat room or user profile whose blurbs to stream."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsRequest:expire_time": {
            "paramName": "expire_time",
            "paramType": ".google.protobuf.Timestamp",
            "comments": [
              " The time at which this stream will close."
            ],
            "fieldBehavior": 2
          },
          "StreamBlurbsResponse:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb that was either created, updated, or deleted."
            ]
          },
          "StreamBlurbsResponse:action": {
            "paramName": "action",
            "paramType": ".google.showcase.v1beta1.StreamBlurbsResponse.Action",
            "comments": [
              " The action that triggered the blurb to be returned."
            ]
          },
          "SendBlurbsResponse:names": {
            "paramName": "names",
            "paramType": "TYPE_STRING[]",
            "comments": [
              " The names of successful blurb creations."
            ]
          },
          "ConnectRequest:config": {
            "paramName": "config",
            "paramType": ".google.showcase.v1beta1.ConnectRequest.ConnectConfig",
            "comments": [
              " Provides information that specifies how to process subsequent requests.",
              " The first `ConnectRequest` message must contain a `config`  message."
            ]
          },
          "ConnectRequest:blurb": {
            "paramName": "blurb",
            "paramType": ".google.showcase.v1beta1.Blurb",
            "comments": [
              " The blurb to be created."
            ]
          },
          "SequenceService": {
            "paramName": "",
            "paramType": "",
            "comments": []
          },
          "SequenceService:CreateSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a sequence.",
              ""
            ]
          },
          "SequenceService:GetSequenceReport": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Retrieves a sequence.",
              ""
            ]
          },
          "SequenceService:AttemptSequence": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Attempts a sequence.",
              ""
            ]
          },
          "Sequence:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "Sequence:responses": {
            "paramName": "responses",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " Sequence of responses to return in order for each attempt. If empty, the",
              " default response is an immediate OK."
            ]
          },
          "SequenceReport:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 3
          },
          "SequenceReport:attempts": {
            "paramName": "attempts",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The set of RPC attempts received by the server for a Sequence."
            ]
          },
          "CreateSequenceRequest:sequence": {
            "paramName": "sequence",
            "paramType": ".google.showcase.v1beta1.Sequence",
            "comments": []
          },
          "AttemptSequenceRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "GetSequenceReportRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [],
            "fieldBehavior": 2
          },
          "Testing": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " A service to facilitate running discrete sets of tests",
              " against Showcase."
            ]
          },
          "Testing:CreateSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Creates a new testing session.",
              ""
            ]
          },
          "Testing:GetSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Gets a testing session.",
              ""
            ]
          },
          "Testing:ListSessions": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Lists the current test sessions.",
              ""
            ]
          },
          "Testing:DeleteSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Delete a test session.",
              ""
            ]
          },
          "Testing:ReportSession": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Report on the status of a session.",
              " This generates a report detailing which tests have been completed,",
              " and an overall rollup.",
              ""
            ]
          },
          "Testing:ListTests": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " List the tests of a sessesion.",
              ""
            ]
          },
          "Testing:DeleteTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Explicitly decline to implement a test.",
              "",
              " This removes the test from subsequent `ListTests` calls, and",
              " attempting to do the test will error.",
              "",
              " This method will error if attempting to delete a required test.",
              ""
            ]
          },
          "Testing:VerifyTest": {
            "paramName": "",
            "paramType": "",
            "comments": [
              " Register a response to a test.",
              "",
              " In cases where a test involves registering a final answer at the",
              " end of the test, this method provides the means to do so.",
              ""
            ]
          },
          "Session:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the session. The ID must conform to ^[a-z]+$",
              " If this is not provided, Showcase chooses one at random."
            ]
          },
          "Session:version": {
            "paramName": "version",
            "paramType": ".google.showcase.v1beta1.Session.Version",
            "comments": [
              " Required. The version this session is using."
            ]
          },
          "CreateSessionRequest:session": {
            "paramName": "session",
            "paramType": ".google.showcase.v1beta1.Session",
            "comments": [
              " The session to be created.",
              " Sessions are immutable once they are created (although they can",
              " be deleted)."
            ]
          },
          "GetSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be retrieved."
            ]
          },
          "ListSessionsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of sessions to return per page."
            ]
          },
          "ListSessionsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListSessionsResponse:sessions": {
            "paramName": "sessions",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The sessions being returned."
            ]
          },
          "ListSessionsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "DeleteSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be deleted."
            ]
          },
          "ReportSessionRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session to be reported on."
            ]
          },
          "ReportSessionResponse:result": {
            "paramName": "result",
            "paramType": ".google.showcase.v1beta1.ReportSessionResponse.Result",
            "comments": [
              " The state of the report."
            ]
          },
          "ReportSessionResponse:test_runs": {
            "paramName": "test_runs",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The test runs of this session."
            ]
          },
          "Test:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "Test:expectation_level": {
            "paramName": "expectation_level",
            "paramType": ".google.showcase.v1beta1.Test.ExpectationLevel",
            "comments": [
              " The expectation level for this test."
            ]
          },
          "Test:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the test."
            ]
          },
          "Test:blueprints": {
            "paramName": "blueprints",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The blueprints that will satisfy this test. There may be multiple blueprints",
              " that can signal to the server that this test case is being exercised. Although",
              " multiple blueprints are specified, only a single blueprint needs to be run to",
              " signal that the test case was exercised."
            ]
          },
          "Issue:type": {
            "paramName": "type",
            "paramType": ".google.showcase.v1beta1.Issue.Type",
            "comments": [
              " The type of the issue."
            ]
          },
          "Issue:severity": {
            "paramName": "severity",
            "paramType": ".google.showcase.v1beta1.Issue.Severity",
            "comments": [
              " The severity of the issue."
            ]
          },
          "Issue:description": {
            "paramName": "description",
            "paramType": "TYPE_STRING",
            "comments": [
              " A description of the issue."
            ]
          },
          "ListTestsRequest:parent": {
            "paramName": "parent",
            "paramType": "TYPE_STRING",
            "comments": [
              " The session."
            ]
          },
          "ListTestsRequest:page_size": {
            "paramName": "page_size",
            "paramType": "TYPE_INT32",
            "comments": [
              " The maximum number of tests to return per page."
            ]
          },
          "ListTestsRequest:page_token": {
            "paramName": "page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The page token, for retrieving subsequent pages."
            ]
          },
          "ListTestsResponse:tests": {
            "paramName": "tests",
            "paramType": "TYPE_MESSAGE[]",
            "comments": [
              " The tests being returned."
            ]
          },
          "ListTestsResponse:next_page_token": {
            "paramName": "next_page_token",
            "paramType": "TYPE_STRING",
            "comments": [
              " The next page token, if any.",
              " An empty value here means the last page has been reached."
            ]
          },
          "TestRun:test": {
            "paramName": "test",
            "paramType": "TYPE_STRING",
            "comments": [
              " The name of the test.",
              " The tests/* portion of the names are hard-coded, and do not change",
              " from session to session."
            ]
          },
          "TestRun:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue found with the test run. If empty, this test run was successful."
            ]
          },
          "DeleteTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to be deleted."
            ]
          },
          "VerifyTestRequest:name": {
            "paramName": "name",
            "paramType": "TYPE_STRING",
            "comments": [
              " The test to have an answer registered to it."
            ]
          },
          "VerifyTestRequest:answer": {
            "paramName": "answer",
            "paramType": "TYPE_BYTES",
            "comments": [
              " The answer from the test."
            ]
          },
          "VerifyTestRequest:answers": {
            "paramName": "answers",
            "paramType": "TYPE_BYTES[]",
            "comments": [
              " The answers from the test if multiple are to be checked"
            ]
          },
          "VerifyTestResponse:issue": {
            "paramName": "issue",
            "paramType": ".google.showcase.v1beta1.Issue",
            "comments": [
              " An issue if check answer was unsuccessful. This will be empty if the check answer succeeded."
            ]
          }
        }
      },
      "retryableCodeMap": {
        "codeEnumMapping": {
          "0": "OK",
          "1": "CANCELLED",
          "2": "UNKNOWN",
          "3": "INVALID_ARGUMENT",
          "4": "DEADLINE_EXCEEDED",
          "5": "NOT_FOUND",
          "6": "ALREADY_EXISTS",
          "7": "PERMISSION_DENIED",
          "8": "RESOURCE_EXHAUSTED",
          "9": "FAILED_PRECONDITION",
          "10": "ABORTED",
          "11": "OUT_OF_RANGE",
          "12": "UNIMPLEMENTED",
          "13": "INTERNAL",
          "14": "UNAVAILABLE",
          "15": "DATA_LOSS",
          "16": "UNAUTHENTICATED",
          "OK": "0",
          "CANCELLED": "1",
          "UNKNOWN": "2",
          "INVALID_ARGUMENT": "3",
          "DEADLINE_EXCEEDED": "4",
          "NOT_FOUND": "5",
          "ALREADY_EXISTS": "6",
          "PERMISSION_DENIED": "7",
          "RESOURCE_EXHAUSTED": "8",
          "FAILED_PRECONDITION": "9",
          "ABORTED": "10",
          "OUT_OF_RANGE": "11",
          "UNIMPLEMENTED": "12",
          "INTERNAL": "13",
          "UNAVAILABLE": "14",
          "DATA_LOSS": "15",
          "UNAUTHENTICATED": "16"
        },
        "uniqueCodesNamesMap": {
          "": "non_idempotent",
          "deadline_exceeded_unavailable": "idempotent"
        },
        "prettyCodesNamesMap": {
          "non_idempotent": [],
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ]
        },
        "uniqueParamsNamesMap": {
          "94312e9926796a52a8fcbbedaac41972e07ccd1c": "default"
        },
        "prettyParamNamesMap": {
          "default": {
            "initial_retry_delay_millis": 100,
            "retry_delay_multiplier": 1.3,
            "max_retry_delay_millis": 60000,
            "initial_rpc_timeout_millis": 60000,
            "rpc_timeout_multiplier": 1,
            "max_rpc_timeout_millis": 60000,
            "total_timeout_millis": 600000
          }
        }
      },
      "grpcServiceConfig": {},
      "bundleConfigs": [],
      "bundleConfigsMethods": [],
      "simpleMethods": [
        {
          "inputInterface": ".google.showcase.v1beta1.CreateSessionRequest",
          "outputInterface": ".google.showcase.v1beta1.Session",
          "comments": [
            " Creates a new testing session.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "CreateSession",
          "inputType": ".google.showcase.v1beta1.CreateSessionRequest",
          "outputType": ".google.showcase.v1beta1.Session",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/sessions",
              "body": "session",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "session",
              "paramType": ".google.showcase.v1beta1.Session",
              "comments": [
                " The session to be created.",
                " Sessions are immutable once they are created (although they can",
                " be deleted)."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "inputInterface": ".google.showcase.v1beta1.GetSessionRequest",
          "outputInterface": ".google.showcase.v1beta1.Session",
          "comments": [
            " Gets a testing session.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "GetSession",
          "inputType": ".google.showcase.v1beta1.GetSessionRequest",
          "outputType": ".google.showcase.v1beta1.Session",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/{name=sessions/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session to be retrieved."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteSessionRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Delete a test session.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteSession",
          "inputType": ".google.showcase.v1beta1.DeleteSessionRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.http": {
              "delete": "/v1beta1/{name=sessions/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session to be deleted."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.ReportSessionRequest",
          "outputInterface": ".google.showcase.v1beta1.ReportSessionResponse",
          "comments": [
            " Report on the status of a session.",
            " This generates a report detailing which tests have been completed,",
            " and an overall rollup.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ReportSession",
          "inputType": ".google.showcase.v1beta1.ReportSessionRequest",
          "outputType": ".google.showcase.v1beta1.ReportSessionResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=sessions/*}:report",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session to be reported on."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.DeleteTestRequest",
          "outputInterface": ".google.protobuf.Empty",
          "comments": [
            " Explicitly decline to implement a test.",
            "",
            " This removes the test from subsequent `ListTests` calls, and",
            " attempting to do the test will error.",
            "",
            " This method will error if attempting to delete a required test.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "DeleteTest",
          "inputType": ".google.showcase.v1beta1.DeleteTestRequest",
          "outputType": ".google.protobuf.Empty",
          "options": {
            ".google.api.http": {
              "delete": "/v1beta1/{name=sessions/*/tests/*}",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The test to be deleted."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        },
        {
          "inputInterface": ".google.showcase.v1beta1.VerifyTestRequest",
          "outputInterface": ".google.showcase.v1beta1.VerifyTestResponse",
          "comments": [
            " Register a response to a test.",
            "",
            " In cases where a test involves registering a final answer at the",
            " end of the test, this method provides the means to do so.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "VerifyTest",
          "inputType": ".google.showcase.v1beta1.VerifyTestRequest",
          "outputType": ".google.showcase.v1beta1.VerifyTestResponse",
          "options": {
            ".google.api.http": {
              "post": "/v1beta1/{name=sessions/*/tests/*}:check",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "name",
              "paramType": "TYPE_STRING",
              "comments": [
                " The test to have an answer registered to it."
              ]
            },
            {
              "paramName": "answer",
              "paramType": "TYPE_BYTES",
              "comments": [
                " The answer from the test."
              ]
            },
            {
              "paramName": "answers",
              "paramType": "TYPE_BYTES[]",
              "comments": [
                " The answers from the test if multiple are to be checked"
              ]
            }
          ],
          "headerRequestParams": [
            [
              "name"
            ]
          ]
        }
      ],
      "longRunning": [],
      "diregapicLRO": [],
      "streaming": [],
      "clientStreaming": [],
      "serverStreaming": [],
      "bidiStreaming": [],
      "paging": [
        {
          "pagingFieldName": "sessions",
          "pagingResponseType": ".google.showcase.v1beta1.Session",
          "inputInterface": ".google.showcase.v1beta1.ListSessionsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListSessionsResponse",
          "comments": [
            " Lists the current test sessions.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListSessions",
          "inputType": ".google.showcase.v1beta1.ListSessionsRequest",
          "outputType": ".google.showcase.v1beta1.ListSessionsResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/sessions",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of sessions to return per page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The page token, for retrieving subsequent pages."
              ]
            }
          ],
          "headerRequestParams": []
        },
        {
          "pagingFieldName": "tests",
          "pagingResponseType": ".google.showcase.v1beta1.Test",
          "inputInterface": ".google.showcase.v1beta1.ListTestsRequest",
          "outputInterface": ".google.showcase.v1beta1.ListTestsResponse",
          "comments": [
            " List the tests of a sessesion.",
            ""
          ],
          "methodConfig": {},
          "retryableCodesName": "non_idempotent",
          "retryParamsName": "default",
          "name": "ListTests",
          "inputType": ".google.showcase.v1beta1.ListTestsRequest",
          "outputType": ".google.showcase.v1beta1.ListTestsResponse",
          "options": {
            ".google.api.http": {
              "get": "/v1beta1/{parent=sessions/*}/tests",
              "additionalBindings": []
            }
          },
          "paramComment": [
            {
              "paramName": "parent",
              "paramType": "TYPE_STRING",
              "comments": [
                " The session."
              ]
            },
            {
              "paramName": "page_size",
              "paramType": "TYPE_INT32",
              "comments": [
                " The maximum number of tests to return per page."
              ]
            },
            {
              "paramName": "page_token",
              "paramType": "TYPE_STRING",
              "comments": [
                " The page token, for retrieving subsequent pages."
              ]
            }
          ],
          "headerRequestParams": [
            [
              "parent"
            ]
          ]
        }
      ],
      "hostname": "localhost",
      "port": 7469,
      "oauthScopes": [],
      "pathTemplates": [
        {
          "name": "Blueprint",
          "params": [
            "session",
            "test",
            "blueprint"
          ],
          "type": "showcase.googleapis.com/Blueprint",
          "pattern": [
            "sessions/{session}/tests/{test}/blueprints/{blueprint}"
          ]
        },
        {
          "name": "Room",
          "params": [
            "room"
          ],
          "type": "showcase.googleapis.com/Room",
          "pattern": [
            "rooms/{room}"
          ]
        },
        {
          "name": "room_blurb",
          "params": [
            "room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "room_blurbs_legacy_room_blurb",
          "params": [
            "room",
            "legacy_room",
            "blurb"
          ],
          "pattern": [
            "rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "Sequence",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/Sequence",
          "pattern": [
            "sequences/{sequence}"
          ]
        },
        {
          "name": "SequenceReport",
          "params": [
            "sequence"
          ],
          "type": "showcase.googleapis.com/SequenceReport",
          "pattern": [
            "sequences/{sequence}/sequenceReport"
          ]
        },
        {
          "name": "Session",
          "params": [
            "session"
          ],
          "type": "showcase.googleapis.com/Session",
          "pattern": [
            "sessions/{session}"
          ]
        },
        {
          "name": "Test",
          "params": [
            "session",
            "test"
          ],
          "type": "showcase.googleapis.com/Test",
          "pattern": [
            "sessions/{session}/tests/{test}"
          ]
        },
        {
          "name": "User",
          "params": [
            "user"
          ],
          "type": "showcase.googleapis.com/User",
          "pattern": [
            "users/{user}"
          ]
        },
        {
          "name": "user_profile_blurb",
          "params": [
            "user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        },
        {
          "name": "user_profile_blurbs_legacy_user_blurb",
          "params": [
            "user",
            "legacy_user",
            "blurb"
          ],
          "pattern": [
            "users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}"
          ],
          "type": "showcase.googleapis.com/Blurb"
        }
      ]
    }
  ],
  "diregapic": false,
  "handwrittenLayer": false,
  "legacyProtoLoad": false
}
