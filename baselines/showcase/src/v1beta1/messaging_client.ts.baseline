// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions} from 'google-gax';

import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');

{&quot;name&quot;:&quot;Messaging&quot;,&quot;method&quot;:[],&quot;options&quot;:{&quot;.google.api.defaultHost&quot;:&quot;localhost:7469&quot;},&quot;packageName&quot;:&quot;google.showcase.v1beta1&quot;,&quot;serviceYaml&quot;:{&quot;type&quot;:&quot;google.api.Service&quot;,&quot;config_version&quot;:3,&quot;name&quot;:&quot;showcase.googleapis.com&quot;,&quot;title&quot;:&quot;Client Libraries Showcase API&quot;,&quot;apis&quot;:[],&quot;documentation&quot;:{&quot;summary&quot;:&quot;Showcase represents both a model API and an integration testing surface for&#92;nclient library generator consumption.&quot;},&quot;backend&quot;:{&quot;rules&quot;:[{&quot;selector&quot;:&quot;google.cloud.location.Locations.*&quot;,&quot;deadline&quot;:60},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.*&quot;,&quot;deadline&quot;:60},{&quot;selector&quot;:&quot;google.longrunning.Operations.*&quot;,&quot;deadline&quot;:60}]},&quot;http&quot;:{&quot;rules&quot;:[{&quot;selector&quot;:&quot;google.cloud.location.Locations.ListLocations&quot;,&quot;get&quot;:&quot;/v1beta1/{name=projects/*}/locations&quot;},{&quot;selector&quot;:&quot;google.cloud.location.Locations.GetLocation&quot;,&quot;get&quot;:&quot;/v1beta1/{name=projects/*/locations/*}&quot;},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.SetIamPolicy&quot;,&quot;post&quot;:&quot;/v1beta1/{resource=users/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;,&quot;additional_bindings&quot;:[{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*/blurbs/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=sequences/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;}]},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.GetIamPolicy&quot;,&quot;get&quot;:&quot;/v1beta1/{resource=users/*}:getIamPolicy&quot;,&quot;additional_bindings&quot;:[{&quot;get&quot;:&quot;/v1beta1/{resource=rooms/*}:getIamPolicy&quot;},{&quot;get&quot;:&quot;/v1beta1/{resource=rooms/*/blurbs/*}:getIamPolicy&quot;},{&quot;get&quot;:&quot;/v1beta1/{resource=sequences/*}:getIamPolicy&quot;}]},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.TestIamPermissions&quot;,&quot;post&quot;:&quot;/v1beta1/{resource=users/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;,&quot;additional_bindings&quot;:[{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*/blurbs/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=sequences/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;}]},{&quot;selector&quot;:&quot;google.longrunning.Operations.ListOperations&quot;,&quot;get&quot;:&quot;/v1beta1/operations&quot;},{&quot;selector&quot;:&quot;google.longrunning.Operations.GetOperation&quot;,&quot;get&quot;:&quot;/v1beta1/{name=operations/**}&quot;},{&quot;selector&quot;:&quot;google.longrunning.Operations.DeleteOperation&quot;,&quot;delete&quot;:&quot;/v1beta1/{name=operations/**}&quot;},{&quot;selector&quot;:&quot;google.longrunning.Operations.CancelOperation&quot;,&quot;post&quot;:&quot;/v1beta1/{name=operations/**}:cancel&quot;}]},&quot;publishing&quot;:{&quot;method_settings&quot;:[{&quot;selector&quot;:&quot;google.showcase.v1beta1.Echo.Echo&quot;,&quot;auto_populated_fields&quot;:[&quot;request_id&quot;]}]}},&quot;protoFile&quot;:&quot;google/showcase/v1beta1/messaging.proto&quot;,&quot;IAMPolicyMixin&quot;:0,&quot;LocationMixin&quot;:0,&quot;httpRules&quot;:[{&quot;selector&quot;:&quot;google.cloud.location.Locations.ListLocations&quot;,&quot;get&quot;:&quot;/v1beta1/{name=projects/*}/locations&quot;},{&quot;selector&quot;:&quot;google.cloud.location.Locations.GetLocation&quot;,&quot;get&quot;:&quot;/v1beta1/{name=projects/*/locations/*}&quot;},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.SetIamPolicy&quot;,&quot;post&quot;:&quot;/v1beta1/{resource=users/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;,&quot;additional_bindings&quot;:[{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*/blurbs/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=sequences/*}:setIamPolicy&quot;,&quot;body&quot;:&quot;*&quot;}]},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.GetIamPolicy&quot;,&quot;get&quot;:&quot;/v1beta1/{resource=users/*}:getIamPolicy&quot;,&quot;additional_bindings&quot;:[{&quot;get&quot;:&quot;/v1beta1/{resource=rooms/*}:getIamPolicy&quot;},{&quot;get&quot;:&quot;/v1beta1/{resource=rooms/*/blurbs/*}:getIamPolicy&quot;},{&quot;get&quot;:&quot;/v1beta1/{resource=sequences/*}:getIamPolicy&quot;}]},{&quot;selector&quot;:&quot;google.iam.v1.IAMPolicy.TestIamPermissions&quot;,&quot;post&quot;:&quot;/v1beta1/{resource=users/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;,&quot;additional_bindings&quot;:[{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=rooms/*/blurbs/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;},{&quot;post&quot;:&quot;/v1beta1/{resource=sequences/*}:testIamPermissions&quot;,&quot;body&quot;:&quot;*&quot;}]},{&quot;selector&quot;:&quot;google.longrunning.Operations.ListOperations&quot;,&quot;get&quot;:&quot;/v1beta1/operations&quot;},{&quot;selector&quot;:&quot;google.longrunning.Operations.GetOperation&quot;,&quot;get&quot;:&quot;/v1beta1/{name=operations/**}&quot;},{&quot;selector&quot;:&quot;google.longrunning.Operations.DeleteOperation&quot;,&quot;delete&quot;:&quot;/v1beta1/{name=operations/**}&quot;},{&quot;selector&quot;:&quot;google.longrunning.Operations.CancelOperation&quot;,&quot;post&quot;:&quot;/v1beta1/{name=operations/**}:cancel&quot;}],&quot;comments&quot;:[&quot; A simple messaging service that implements chat rooms and profile posts.&quot;,&quot;&quot;,&quot; This messaging service showcases the features that API clients&quot;,&quot; generated by gapic-generators implement.&quot;],&quot;commentsMap&quot;:{&quot;comments&quot;:{&quot;Http:rules&quot;:{&quot;paramName&quot;:&quot;rules&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of HTTP configuration rules that apply to individual API methods.&quot;,&quot;&quot;,&quot; **NOTE:** All service configuration rules follow &#92;&quot;last one wins&#92;&quot; order.&quot;]},&quot;Http:fully_decode_reserved_expansion&quot;:{&quot;paramName&quot;:&quot;fully_decode_reserved_expansion&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; When set to true, URL path parameters will be fully URI-decoded except in&quot;,&quot; cases of single segment matches in reserved expansion, where &#92;&quot;%2F&#92;&quot; will be&quot;,&quot; left encoded.&quot;,&quot;&quot;,&quot; The default behavior is to not decode RFC 6570 reserved characters in multi&quot;,&quot; segment matches.&quot;]},&quot;HttpRule:selector&quot;:{&quot;paramName&quot;:&quot;selector&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Selects a method to which this rule applies.&quot;,&quot;&quot;,&quot; Refer to [selector][google.api.DocumentationRule.selector] for syntax&quot;,&quot; details.&quot;]},&quot;HttpRule:get&quot;:{&quot;paramName&quot;:&quot;get&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP GET. Used for listing and getting information about&quot;,&quot; resources.&quot;]},&quot;HttpRule:put&quot;:{&quot;paramName&quot;:&quot;put&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP PUT. Used for replacing a resource.&quot;]},&quot;HttpRule:post&quot;:{&quot;paramName&quot;:&quot;post&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP POST. Used for creating a resource or performing an action.&quot;]},&quot;HttpRule:delete&quot;:{&quot;paramName&quot;:&quot;delete&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP DELETE. Used for deleting a resource.&quot;]},&quot;HttpRule:patch&quot;:{&quot;paramName&quot;:&quot;patch&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Maps to HTTP PATCH. Used for updating a resource.&quot;]},&quot;HttpRule:custom&quot;:{&quot;paramName&quot;:&quot;custom&quot;,&quot;paramType&quot;:&quot;.google.api.CustomHttpPattern&quot;,&quot;comments&quot;:[&quot; The custom pattern is used for specifying an HTTP method that is not&quot;,&quot; included in the `pattern` field, such as HEAD, or &#92;&quot;*&#92;&quot; to leave the&quot;,&quot; HTTP method unspecified for this rule. The wild-card rule is useful&quot;,&quot; for services that provide content to Web (HTML) clients.&quot;]},&quot;HttpRule:body&quot;:{&quot;paramName&quot;:&quot;body&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the request field whose value is mapped to the HTTP request&quot;,&quot; body, or `*` for mapping all request fields not captured by the path&quot;,&quot; pattern to the HTTP body, or omitted for not having any HTTP request body.&quot;,&quot;&quot;,&quot; NOTE: the referred field must be present at the top-level of the request&quot;,&quot; message type.&quot;]},&quot;HttpRule:response_body&quot;:{&quot;paramName&quot;:&quot;response_body&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional. The name of the response field whose value is mapped to the HTTP&quot;,&quot; response body. When omitted, the entire response message will be used&quot;,&quot; as the HTTP response body.&quot;,&quot;&quot;,&quot; NOTE: The referred field must be present at the top-level of the response&quot;,&quot; message type.&quot;]},&quot;HttpRule:additional_bindings&quot;:{&quot;paramName&quot;:&quot;additional_bindings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Additional HTTP bindings for the selector. Nested bindings must&quot;,&quot; not contain an `additional_bindings` field themselves (that is,&quot;,&quot; the nesting may only be one level deep).&quot;]},&quot;CustomHttpPattern:kind&quot;:{&quot;paramName&quot;:&quot;kind&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of this custom HTTP verb.&quot;]},&quot;CustomHttpPattern:path&quot;:{&quot;paramName&quot;:&quot;path&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The path matched by this custom verb.&quot;]},&quot;FileDescriptorSet:file&quot;:{&quot;paramName&quot;:&quot;file&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:package&quot;:{&quot;paramName&quot;:&quot;package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:dependency&quot;:{&quot;paramName&quot;:&quot;dependency&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Names of files imported by this file.&quot;]},&quot;FileDescriptorProto:public_dependency&quot;:{&quot;paramName&quot;:&quot;public_dependency&quot;,&quot;paramType&quot;:&quot;TYPE_INT32[]&quot;,&quot;comments&quot;:[&quot; Indexes of the public imported files in the dependency list above.&quot;]},&quot;FileDescriptorProto:weak_dependency&quot;:{&quot;paramName&quot;:&quot;weak_dependency&quot;,&quot;paramType&quot;:&quot;TYPE_INT32[]&quot;,&quot;comments&quot;:[&quot; Indexes of the weak imported files in the dependency list.&quot;,&quot; For Google-internal migration only. Do not use.&quot;]},&quot;FileDescriptorProto:message_type&quot;:{&quot;paramName&quot;:&quot;message_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; All top-level definitions in this file.&quot;]},&quot;FileDescriptorProto:enum_type&quot;:{&quot;paramName&quot;:&quot;enum_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:service&quot;:{&quot;paramName&quot;:&quot;service&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:extension&quot;:{&quot;paramName&quot;:&quot;extension&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FileOptions&quot;,&quot;comments&quot;:[]},&quot;FileDescriptorProto:source_code_info&quot;:{&quot;paramName&quot;:&quot;source_code_info&quot;,&quot;paramType&quot;:&quot;.google.protobuf.SourceCodeInfo&quot;,&quot;comments&quot;:[&quot; This field contains optional information about the original source code.&quot;,&quot; You may safely remove this entire field without harming runtime&quot;,&quot; functionality of the descriptors -- the information is needed only by&quot;,&quot; development tools.&quot;]},&quot;FileDescriptorProto:syntax&quot;:{&quot;paramName&quot;:&quot;syntax&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The syntax of the proto file.&quot;,&quot; The supported values are &#92;&quot;proto2&#92;&quot;, &#92;&quot;proto3&#92;&quot;, and &#92;&quot;editions&#92;&quot;.&quot;,&quot;&quot;,&quot; If `edition` is present, this value must be &#92;&quot;editions&#92;&quot;.&quot;]},&quot;FileDescriptorProto:edition&quot;:{&quot;paramName&quot;:&quot;edition&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Edition&quot;,&quot;comments&quot;:[&quot; The edition of the proto file.&quot;]},&quot;DescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:extension&quot;:{&quot;paramName&quot;:&quot;extension&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:nested_type&quot;:{&quot;paramName&quot;:&quot;nested_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:enum_type&quot;:{&quot;paramName&quot;:&quot;enum_type&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:extension_range&quot;:{&quot;paramName&quot;:&quot;extension_range&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:oneof_decl&quot;:{&quot;paramName&quot;:&quot;oneof_decl&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.MessageOptions&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:reserved_range&quot;:{&quot;paramName&quot;:&quot;reserved_range&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;DescriptorProto:reserved_name&quot;:{&quot;paramName&quot;:&quot;reserved_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Reserved field names, which may not be used by fields in the same message.&quot;,&quot; A given name may only be reserved once.&quot;]},&quot;ExtensionRangeOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;ExtensionRangeOptions:declaration&quot;:{&quot;paramName&quot;:&quot;declaration&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; For external users: DO NOT USE. We are in the process of open sourcing&quot;,&quot; extension declaration and executing internal cleanups before it can be&quot;,&quot; used externally.&quot;]},&quot;ExtensionRangeOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;ExtensionRangeOptions:verification&quot;:{&quot;paramName&quot;:&quot;verification&quot;,&quot;paramType&quot;:&quot;.google.protobuf.ExtensionRangeOptions.VerificationState&quot;,&quot;comments&quot;:[&quot; The verification state of the range.&quot;,&quot; TODO: flip the default to DECLARATION once all empty ranges&quot;,&quot; are marked as UNVERIFIED.&quot;]},&quot;FieldDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:number&quot;:{&quot;paramName&quot;:&quot;number&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:label&quot;:{&quot;paramName&quot;:&quot;label&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldDescriptorProto.Label&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldDescriptorProto.Type&quot;,&quot;comments&quot;:[&quot; If type_name is set, this need not be set.  If both this and type_name&quot;,&quot; are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.&quot;]},&quot;FieldDescriptorProto:type_name&quot;:{&quot;paramName&quot;:&quot;type_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; For message and enum types, this is the name of the type.  If the name&quot;,&quot; starts with a &#39;.&#39;, it is fully-qualified.  Otherwise, C++-like scoping&quot;,&quot; rules are used to find the type (i.e. first the nested types within this&quot;,&quot; message are searched, then within the parent, on up to the root&quot;,&quot; namespace).&quot;]},&quot;FieldDescriptorProto:extendee&quot;:{&quot;paramName&quot;:&quot;extendee&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; For extensions, this is the name of the type being extended.  It is&quot;,&quot; resolved in the same manner as type_name.&quot;]},&quot;FieldDescriptorProto:default_value&quot;:{&quot;paramName&quot;:&quot;default_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; For numeric types, contains the original text representation of the value.&quot;,&quot; For booleans, &#92;&quot;true&#92;&quot; or &#92;&quot;false&#92;&quot;.&quot;,&quot; For strings, contains the default text contents (not escaped in any way).&quot;,&quot; For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.&quot;]},&quot;FieldDescriptorProto:oneof_index&quot;:{&quot;paramName&quot;:&quot;oneof_index&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; If set, gives the index of a oneof in the containing type&#39;s oneof_decl&quot;,&quot; list.  This field is a member of that oneof.&quot;]},&quot;FieldDescriptorProto:json_name&quot;:{&quot;paramName&quot;:&quot;json_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; JSON name of this field. The value is set by protocol compiler. If the&quot;,&quot; user has set a &#92;&quot;json_name&#92;&quot; option on this field, that option&#39;s value&quot;,&quot; will be used. Otherwise, it&#39;s deduced from the field&#39;s name by converting&quot;,&quot; it to camelCase.&quot;]},&quot;FieldDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions&quot;,&quot;comments&quot;:[]},&quot;FieldDescriptorProto:proto3_optional&quot;:{&quot;paramName&quot;:&quot;proto3_optional&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If true, this is a proto3 &#92;&quot;optional&#92;&quot;. When a proto3 field is optional, it&quot;,&quot; tracks presence regardless of field type.&quot;,&quot;&quot;,&quot; When proto3_optional is true, this field must belong to a oneof to signal&quot;,&quot; to old proto3 clients that presence is tracked for this field. This oneof&quot;,&quot; is known as a &#92;&quot;synthetic&#92;&quot; oneof, and this field must be its sole member&quot;,&quot; (each proto3 optional field gets its own synthetic oneof). Synthetic oneofs&quot;,&quot; exist in the descriptor only, and do not generate any API. Synthetic oneofs&quot;,&quot; must be ordered after all &#92;&quot;real&#92;&quot; oneofs.&quot;,&quot;&quot;,&quot; For message fields, proto3_optional doesn&#39;t create any semantic change,&quot;,&quot; since non-repeated message fields always track presence. However it still&quot;,&quot; indicates the semantic detail of whether the user wrote &#92;&quot;optional&#92;&quot; or not.&quot;,&quot; This can be useful for round-tripping the .proto file. For consistency we&quot;,&quot; give message fields a synthetic oneof also, even though it is not required&quot;,&quot; to track presence. This is especially important because the parser can&#39;t&quot;,&quot; tell if a field is a message or an enum, so it must always create a&quot;,&quot; synthetic oneof.&quot;,&quot;&quot;,&quot; Proto2 optional fields do not set this flag, because they already indicate&quot;,&quot; optional with `LABEL_OPTIONAL`.&quot;]},&quot;OneofDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;OneofDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.OneofOptions&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:value&quot;:{&quot;paramName&quot;:&quot;value&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.EnumOptions&quot;,&quot;comments&quot;:[]},&quot;EnumDescriptorProto:reserved_range&quot;:{&quot;paramName&quot;:&quot;reserved_range&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Range of reserved numeric values. Reserved numeric values may not be used&quot;,&quot; by enum values in the same enum declaration. Reserved ranges may not&quot;,&quot; overlap.&quot;]},&quot;EnumDescriptorProto:reserved_name&quot;:{&quot;paramName&quot;:&quot;reserved_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Reserved enum value names, which may not be reused. A given name may only&quot;,&quot; be reserved once.&quot;]},&quot;EnumValueDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;EnumValueDescriptorProto:number&quot;:{&quot;paramName&quot;:&quot;number&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;EnumValueDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.EnumValueOptions&quot;,&quot;comments&quot;:[]},&quot;ServiceDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ServiceDescriptorProto:method&quot;:{&quot;paramName&quot;:&quot;method&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;ServiceDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.ServiceOptions&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:input_type&quot;:{&quot;paramName&quot;:&quot;input_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Input and output type names.  These are resolved in the same way as&quot;,&quot; FieldDescriptorProto.type_name, but must refer to a message type.&quot;]},&quot;MethodDescriptorProto:output_type&quot;:{&quot;paramName&quot;:&quot;output_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:options&quot;:{&quot;paramName&quot;:&quot;options&quot;,&quot;paramType&quot;:&quot;.google.protobuf.MethodOptions&quot;,&quot;comments&quot;:[]},&quot;MethodDescriptorProto:client_streaming&quot;:{&quot;paramName&quot;:&quot;client_streaming&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Identifies if client streams multiple client messages&quot;]},&quot;MethodDescriptorProto:server_streaming&quot;:{&quot;paramName&quot;:&quot;server_streaming&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Identifies if server streams multiple server messages&quot;]},&quot;FileOptions:java_package&quot;:{&quot;paramName&quot;:&quot;java_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the Java package where classes generated from this .proto will be&quot;,&quot; placed.  By default, the proto package is used, but this is often&quot;,&quot; inappropriate because proto packages do not normally start with backwards&quot;,&quot; domain names.&quot;]},&quot;FileOptions:java_outer_classname&quot;:{&quot;paramName&quot;:&quot;java_outer_classname&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Controls the name of the wrapper Java class generated for the .proto file.&quot;,&quot; That class will always contain the .proto file&#39;s getDescriptor() method as&quot;,&quot; well as any top-level extensions defined in the .proto file.&quot;,&quot; If java_multiple_files is disabled, then all the other classes from the&quot;,&quot; .proto file will be nested inside the single wrapper outer class.&quot;]},&quot;FileOptions:java_multiple_files&quot;:{&quot;paramName&quot;:&quot;java_multiple_files&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If enabled, then the Java code generator will generate a separate .java&quot;,&quot; file for each top-level message, enum, and service defined in the .proto&quot;,&quot; file.  Thus, these types will *not* be nested inside the wrapper class&quot;,&quot; named by java_outer_classname.  However, the wrapper class will still be&quot;,&quot; generated to contain the file&#39;s getDescriptor() method as well as any&quot;,&quot; top-level extensions defined in the file.&quot;]},&quot;FileOptions:java_generate_equals_and_hash&quot;:{&quot;paramName&quot;:&quot;java_generate_equals_and_hash&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; This option does nothing.&quot;]},&quot;FileOptions:java_string_check_utf8&quot;:{&quot;paramName&quot;:&quot;java_string_check_utf8&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; A proto2 file can set this to true to opt in to UTF-8 checking for Java,&quot;,&quot; which will throw an exception if invalid UTF-8 is parsed from the wire or&quot;,&quot; assigned to a string field.&quot;,&quot;&quot;,&quot; TODO: clarify exactly what kinds of field types this option&quot;,&quot; applies to, and update these docs accordingly.&quot;,&quot;&quot;,&quot; Proto3 files already perform these checks. Setting the option explicitly to&quot;,&quot; false has no effect: it cannot be used to opt proto3 files out of UTF-8&quot;,&quot; checks.&quot;]},&quot;FileOptions:optimize_for&quot;:{&quot;paramName&quot;:&quot;optimize_for&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FileOptions.OptimizeMode&quot;,&quot;comments&quot;:[]},&quot;FileOptions:go_package&quot;:{&quot;paramName&quot;:&quot;go_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the Go package where structs generated from this .proto will be&quot;,&quot; placed. If omitted, the Go package will be derived from the following:&quot;,&quot;   - The basename of the package import path, if provided.&quot;,&quot;   - Otherwise, the package statement in the .proto file, if present.&quot;,&quot;   - Otherwise, the basename of the .proto file, without extension.&quot;]},&quot;FileOptions:cc_generic_services&quot;:{&quot;paramName&quot;:&quot;cc_generic_services&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Should generic services be generated in each language?  &#92;&quot;Generic&#92;&quot; services&quot;,&quot; are not specific to any particular RPC system.  They are generated by the&quot;,&quot; main code generators in each language (without additional plugins).&quot;,&quot; Generic services were the only kind of service generation supported by&quot;,&quot; early versions of google.protobuf.&quot;,&quot;&quot;,&quot; Generic services are now considered deprecated in favor of using plugins&quot;,&quot; that generate code specific to your particular RPC system.  Therefore,&quot;,&quot; these default to false.  Old code which depends on generic services should&quot;,&quot; explicitly set them to true.&quot;]},&quot;FileOptions:java_generic_services&quot;:{&quot;paramName&quot;:&quot;java_generic_services&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;FileOptions:py_generic_services&quot;:{&quot;paramName&quot;:&quot;py_generic_services&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;FileOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this file deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for everything in the file, or it will be completely ignored; in the very&quot;,&quot; least, this is a formalization for deprecating files.&quot;]},&quot;FileOptions:cc_enable_arenas&quot;:{&quot;paramName&quot;:&quot;cc_enable_arenas&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enables the use of arenas for the proto messages in this file. This applies&quot;,&quot; only to generated classes for C++.&quot;]},&quot;FileOptions:objc_class_prefix&quot;:{&quot;paramName&quot;:&quot;objc_class_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the objective c class prefix which is prepended to all objective c&quot;,&quot; generated classes from this .proto. There is no default.&quot;]},&quot;FileOptions:csharp_namespace&quot;:{&quot;paramName&quot;:&quot;csharp_namespace&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Namespace for generated classes; defaults to the package.&quot;]},&quot;FileOptions:swift_prefix&quot;:{&quot;paramName&quot;:&quot;swift_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; By default Swift generators will take the proto package and CamelCase it&quot;,&quot; replacing &#39;.&#39; with underscore and use that to prefix the types/symbols&quot;,&quot; defined. When this options is provided, they will use this value instead&quot;,&quot; to prefix the types/symbols defined.&quot;]},&quot;FileOptions:php_class_prefix&quot;:{&quot;paramName&quot;:&quot;php_class_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Sets the php class prefix which is prepended to all php generated classes&quot;,&quot; from this .proto. Default is empty.&quot;]},&quot;FileOptions:php_namespace&quot;:{&quot;paramName&quot;:&quot;php_namespace&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Use this option to change the namespace of php generated classes. Default&quot;,&quot; is empty. When this option is empty, the package name will be used for&quot;,&quot; determining the namespace.&quot;]},&quot;FileOptions:php_metadata_namespace&quot;:{&quot;paramName&quot;:&quot;php_metadata_namespace&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Use this option to change the namespace of php generated metadata classes.&quot;,&quot; Default is empty. When this option is empty, the proto file name will be&quot;,&quot; used for determining the namespace.&quot;]},&quot;FileOptions:ruby_package&quot;:{&quot;paramName&quot;:&quot;ruby_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Use this option to change the package of ruby generated classes. Default&quot;,&quot; is empty. When this option is not set, the package name will be used for&quot;,&quot; determining the ruby package.&quot;]},&quot;FileOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;FileOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here.&quot;,&quot; See the documentation for the &#92;&quot;Options&#92;&quot; section above.&quot;]},&quot;MessageOptions:message_set_wire_format&quot;:{&quot;paramName&quot;:&quot;message_set_wire_format&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Set true to use the old proto1 MessageSet wire format for extensions.&quot;,&quot; This is provided for backwards-compatibility with the MessageSet wire&quot;,&quot; format.  You should not use this for any other reason:  It&#39;s less&quot;,&quot; efficient, has fewer features, and is more complicated.&quot;,&quot;&quot;,&quot; The message must be defined exactly as follows:&quot;,&quot;   message Foo {&quot;,&quot;     option message_set_wire_format = true;&quot;,&quot;     extensions 4 to max;&quot;,&quot;   }&quot;,&quot; Note that the message cannot have any defined fields; MessageSets only&quot;,&quot; have extensions.&quot;,&quot;&quot;,&quot; All extensions of your type must be singular messages; e.g. they cannot&quot;,&quot; be int32s, enums, or repeated messages.&quot;,&quot;&quot;,&quot; Because this is an option, the above two restrictions are not enforced by&quot;,&quot; the protocol compiler.&quot;]},&quot;MessageOptions:no_standard_descriptor_accessor&quot;:{&quot;paramName&quot;:&quot;no_standard_descriptor_accessor&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Disables the generation of the standard &#92;&quot;descriptor()&#92;&quot; accessor, which can&quot;,&quot; conflict with a field of the same name.  This is meant to make migration&quot;,&quot; from proto1 easier; new code should avoid fields named &#92;&quot;descriptor&#92;&quot;.&quot;]},&quot;MessageOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this message deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the message, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating messages.&quot;]},&quot;MessageOptions:map_entry&quot;:{&quot;paramName&quot;:&quot;map_entry&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Whether the message is an automatically generated map entry type for the&quot;,&quot; maps field.&quot;,&quot;&quot;,&quot; For maps fields:&quot;,&quot;     map&lt;KeyType, ValueType&gt; map_field = 1;&quot;,&quot; The parsed descriptor looks like:&quot;,&quot;     message MapFieldEntry {&quot;,&quot;         option map_entry = true;&quot;,&quot;         optional KeyType key = 1;&quot;,&quot;         optional ValueType value = 2;&quot;,&quot;     }&quot;,&quot;     repeated MapFieldEntry map_field = 1;&quot;,&quot;&quot;,&quot; Implementations may choose not to generate the map_entry=true message, but&quot;,&quot; use a native map in the target language to hold the keys and values.&quot;,&quot; The reflection APIs in such implementations still need to work as&quot;,&quot; if the field is a repeated message field.&quot;,&quot;&quot;,&quot; NOTE: Do not set the option in .proto files. Always use the maps syntax&quot;,&quot; instead. The option should only be implicitly set by the proto compiler&quot;,&quot; parser.&quot;]},&quot;MessageOptions:deprecated_legacy_json_field_conflicts&quot;:{&quot;paramName&quot;:&quot;deprecated_legacy_json_field_conflicts&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enable the legacy handling of JSON field name conflicts.  This lowercases&quot;,&quot; and strips underscored from the fields before comparison in proto3 only.&quot;,&quot; The new behavior takes `json_name` into account and applies to proto2 as&quot;,&quot; well.&quot;,&quot;&quot;,&quot; This should only be used as a temporary measure against broken builds due&quot;,&quot; to the change in behavior for JSON field name conflicts.&quot;,&quot;&quot;,&quot; TODO This is legacy behavior we plan to remove once downstream&quot;,&quot; teams have had time to migrate.&quot;]},&quot;MessageOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;MessageOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;FieldOptions:ctype&quot;:{&quot;paramName&quot;:&quot;ctype&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions.CType&quot;,&quot;comments&quot;:[&quot; The ctype option instructs the C++ code generator to use a different&quot;,&quot; representation of the field than it normally would.  See the specific&quot;,&quot; options below.  This option is only implemented to support use of&quot;,&quot; [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of&quot;,&quot; type &#92;&quot;bytes&#92;&quot; in the open source release -- sorry, we&#39;ll try to include&quot;,&quot; other types in a future version!&quot;]},&quot;FieldOptions:packed&quot;:{&quot;paramName&quot;:&quot;packed&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; The packed option can be enabled for repeated primitive fields to enable&quot;,&quot; a more efficient representation on the wire. Rather than repeatedly&quot;,&quot; writing the tag and type for each element, the entire array is encoded as&quot;,&quot; a single length-delimited blob. In proto3, only explicit setting it to&quot;,&quot; false will avoid using packed encoding.  This option is prohibited in&quot;,&quot; Editions, but the `repeated_field_encoding` feature can be used to control&quot;,&quot; the behavior.&quot;]},&quot;FieldOptions:jstype&quot;:{&quot;paramName&quot;:&quot;jstype&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions.JSType&quot;,&quot;comments&quot;:[&quot; The jstype option determines the JavaScript type used for values of the&quot;,&quot; field.  The option is permitted only for 64 bit integral and fixed types&quot;,&quot; (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING&quot;,&quot; is represented as JavaScript string, which avoids loss of precision that&quot;,&quot; can happen when a large value is converted to a floating point JavaScript.&quot;,&quot; Specifying JS_NUMBER for the jstype causes the generated JavaScript code to&quot;,&quot; use the JavaScript &#92;&quot;number&#92;&quot; type.  The behavior of the default option&quot;,&quot; JS_NORMAL is implementation dependent.&quot;,&quot;&quot;,&quot; This option is an enum to permit additional types to be added, e.g.&quot;,&quot; goog.math.Integer.&quot;]},&quot;FieldOptions:lazy&quot;:{&quot;paramName&quot;:&quot;lazy&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Should this field be parsed lazily?  Lazy applies only to message-type&quot;,&quot; fields.  It means that when the outer message is initially parsed, the&quot;,&quot; inner message&#39;s contents will not be parsed but instead stored in encoded&quot;,&quot; form.  The inner message will actually be parsed when it is first accessed.&quot;,&quot;&quot;,&quot; This is only a hint.  Implementations are free to choose whether to use&quot;,&quot; eager or lazy parsing regardless of the value of this option.  However,&quot;,&quot; setting this option true suggests that the protocol author believes that&quot;,&quot; using lazy parsing on this field is worth the additional bookkeeping&quot;,&quot; overhead typically needed to implement it.&quot;,&quot;&quot;,&quot; This option does not affect the public interface of any generated code;&quot;,&quot; all method signatures remain the same.  Furthermore, thread-safety of the&quot;,&quot; interface is not affected by this option; const methods remain safe to&quot;,&quot; call from multiple threads concurrently, while non-const methods continue&quot;,&quot; to require exclusive access.&quot;,&quot;&quot;,&quot; Note that lazy message fields are still eagerly verified to check&quot;,&quot; ill-formed wireformat or missing required fields. Calling IsInitialized()&quot;,&quot; on the outer message would fail if the inner message has missing required&quot;,&quot; fields. Failed verification would result in parsing failure (except when&quot;,&quot; uninitialized messages are acceptable).&quot;]},&quot;FieldOptions:unverified_lazy&quot;:{&quot;paramName&quot;:&quot;unverified_lazy&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; unverified_lazy does no correctness checks on the byte stream. This should&quot;,&quot; only be used where lazy with verification is prohibitive for performance&quot;,&quot; reasons.&quot;]},&quot;FieldOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this field deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for accessors, or it will be completely ignored; in the very least, this&quot;,&quot; is a formalization for deprecating fields.&quot;]},&quot;FieldOptions:weak&quot;:{&quot;paramName&quot;:&quot;weak&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; For Google-internal migration only. Do not use.&quot;]},&quot;FieldOptions:debug_redact&quot;:{&quot;paramName&quot;:&quot;debug_redact&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Indicate that the field value should not be printed out when using debug&quot;,&quot; formats, e.g. when the field contains sensitive credentials.&quot;]},&quot;FieldOptions:retention&quot;:{&quot;paramName&quot;:&quot;retention&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldOptions.OptionRetention&quot;,&quot;comments&quot;:[]},&quot;FieldOptions:targets&quot;:{&quot;paramName&quot;:&quot;targets&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[]},&quot;FieldOptions:edition_defaults&quot;:{&quot;paramName&quot;:&quot;edition_defaults&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FieldOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;FieldOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;OneofOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;OneofOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;EnumOptions:allow_alias&quot;:{&quot;paramName&quot;:&quot;allow_alias&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Set this option to true to allow mapping different tag names to the same&quot;,&quot; value.&quot;]},&quot;EnumOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this enum deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the enum, or it will be completely ignored; in the very least, this&quot;,&quot; is a formalization for deprecating enums.&quot;]},&quot;EnumOptions:deprecated_legacy_json_field_conflicts&quot;:{&quot;paramName&quot;:&quot;deprecated_legacy_json_field_conflicts&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enable the legacy handling of JSON field name conflicts.  This lowercases&quot;,&quot; and strips underscored from the fields before comparison in proto3 only.&quot;,&quot; The new behavior takes `json_name` into account and applies to proto2 as&quot;,&quot; well.&quot;,&quot; TODO Remove this legacy behavior once downstream teams have&quot;,&quot; had time to migrate.&quot;]},&quot;EnumOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;EnumOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;EnumValueOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this enum value deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the enum value, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating enum values.&quot;]},&quot;EnumValueOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;EnumValueOptions:debug_redact&quot;:{&quot;paramName&quot;:&quot;debug_redact&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Indicate that fields annotated with this enum value should not be printed&quot;,&quot; out when using debug formats, e.g. when the field contains sensitive&quot;,&quot; credentials.&quot;]},&quot;EnumValueOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;ServiceOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;ServiceOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this service deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the service, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating services.&quot;]},&quot;ServiceOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;MethodOptions:deprecated&quot;:{&quot;paramName&quot;:&quot;deprecated&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Is this method deprecated?&quot;,&quot; Depending on the target platform, this can emit Deprecated annotations&quot;,&quot; for the method, or it will be completely ignored; in the very least,&quot;,&quot; this is a formalization for deprecating methods.&quot;]},&quot;MethodOptions:idempotency_level&quot;:{&quot;paramName&quot;:&quot;idempotency_level&quot;,&quot;paramType&quot;:&quot;.google.protobuf.MethodOptions.IdempotencyLevel&quot;,&quot;comments&quot;:[]},&quot;MethodOptions:features&quot;:{&quot;paramName&quot;:&quot;features&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet&quot;,&quot;comments&quot;:[&quot; Any features defined in the specific edition.&quot;]},&quot;MethodOptions:uninterpreted_option&quot;:{&quot;paramName&quot;:&quot;uninterpreted_option&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The parser stores options it doesn&#39;t recognize here. See above.&quot;]},&quot;UninterpretedOption:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:identifier_value&quot;:{&quot;paramName&quot;:&quot;identifier_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The value of the uninterpreted option, in whatever type the tokenizer&quot;,&quot; identified it as during parsing. Exactly one of these should be set.&quot;]},&quot;UninterpretedOption:positive_int_value&quot;:{&quot;paramName&quot;:&quot;positive_int_value&quot;,&quot;paramType&quot;:&quot;TYPE_UINT64&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:negative_int_value&quot;:{&quot;paramName&quot;:&quot;negative_int_value&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:double_value&quot;:{&quot;paramName&quot;:&quot;double_value&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:string_value&quot;:{&quot;paramName&quot;:&quot;string_value&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[]},&quot;UninterpretedOption:aggregate_value&quot;:{&quot;paramName&quot;:&quot;aggregate_value&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:field_presence&quot;:{&quot;paramName&quot;:&quot;field_presence&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.FieldPresence&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:enum_type&quot;:{&quot;paramName&quot;:&quot;enum_type&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.EnumType&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:repeated_field_encoding&quot;:{&quot;paramName&quot;:&quot;repeated_field_encoding&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.RepeatedFieldEncoding&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:utf8_validation&quot;:{&quot;paramName&quot;:&quot;utf8_validation&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.Utf8Validation&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:message_encoding&quot;:{&quot;paramName&quot;:&quot;message_encoding&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.MessageEncoding&quot;,&quot;comments&quot;:[]},&quot;FeatureSet:json_format&quot;:{&quot;paramName&quot;:&quot;json_format&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FeatureSet.JsonFormat&quot;,&quot;comments&quot;:[]},&quot;FeatureSetDefaults:defaults&quot;:{&quot;paramName&quot;:&quot;defaults&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;FeatureSetDefaults:minimum_edition&quot;:{&quot;paramName&quot;:&quot;minimum_edition&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Edition&quot;,&quot;comments&quot;:[&quot; The minimum supported edition (inclusive) when this was constructed.&quot;,&quot; Editions before this will not have defaults.&quot;]},&quot;FeatureSetDefaults:maximum_edition&quot;:{&quot;paramName&quot;:&quot;maximum_edition&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Edition&quot;,&quot;comments&quot;:[&quot; The maximum known edition (inclusive) when this was constructed. Editions&quot;,&quot; after this will not have reliable defaults.&quot;]},&quot;SourceCodeInfo:location&quot;:{&quot;paramName&quot;:&quot;location&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A Location identifies a piece of source code in a .proto file which&quot;,&quot; corresponds to a particular definition.  This information is intended&quot;,&quot; to be useful to IDEs, code indexers, documentation generators, and similar&quot;,&quot; tools.&quot;,&quot;&quot;,&quot; For example, say we have a file like:&quot;,&quot;   message Foo {&quot;,&quot;     optional string foo = 1;&quot;,&quot;   }&quot;,&quot; Let&#39;s look at just the field definition:&quot;,&quot;   optional string foo = 1;&quot;,&quot;   ^       ^^     ^^  ^  ^^^&quot;,&quot;   a       bc     de  f  ghi&quot;,&quot; We have the following locations:&quot;,&quot;   span   path               represents&quot;,&quot;   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.&quot;,&quot;   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).&quot;,&quot;   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).&quot;,&quot;   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).&quot;,&quot;   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).&quot;,&quot;&quot;,&quot; Notes:&quot;,&quot; - A location may refer to a repeated field itself (i.e. not to any&quot;,&quot;   particular index within it).  This is used whenever a set of elements are&quot;,&quot;   logically enclosed in a single code segment.  For example, an entire&quot;,&quot;   extend block (possibly containing multiple extension definitions) will&quot;,&quot;   have an outer location whose path refers to the &#92;&quot;extensions&#92;&quot; repeated&quot;,&quot;   field without an index.&quot;,&quot; - Multiple locations may have the same path.  This happens when a single&quot;,&quot;   logical declaration is spread out across multiple places.  The most&quot;,&quot;   obvious example is the &#92;&quot;extend&#92;&quot; block again -- there may be multiple&quot;,&quot;   extend blocks in the same scope, each of which will have the same path.&quot;,&quot; - A location&#39;s span is not always a subset of its parent&#39;s span.  For&quot;,&quot;   example, the &#92;&quot;extendee&#92;&quot; of an extension declaration appears at the&quot;,&quot;   beginning of the &#92;&quot;extend&#92;&quot; block and is shared by all extensions within&quot;,&quot;   the block.&quot;,&quot; - Just because a location&#39;s span is a subset of some other location&#39;s span&quot;,&quot;   does not mean that it is a descendant.  For example, a &#92;&quot;group&#92;&quot; defines&quot;,&quot;   both a type and a field in a single declaration.  Thus, the locations&quot;,&quot;   corresponding to the type and field and their components will overlap.&quot;,&quot; - Code which tries to interpret locations should probably be designed to&quot;,&quot;   ignore those that it doesn&#39;t understand, as more types of locations could&quot;,&quot;   be recorded in the future.&quot;]},&quot;GeneratedCodeInfo:annotation&quot;:{&quot;paramName&quot;:&quot;annotation&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; An Annotation connects some span of text in generated code to an element&quot;,&quot; of its generating .proto file.&quot;]},&quot;Duration:seconds&quot;:{&quot;paramName&quot;:&quot;seconds&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Signed seconds of the span of time. Must be from -315,576,000,000&quot;,&quot; to +315,576,000,000 inclusive. Note: these bounds are computed from:&quot;,&quot; 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years&quot;]},&quot;Duration:nanos&quot;:{&quot;paramName&quot;:&quot;nanos&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Signed fractions of a second at nanosecond resolution of the span&quot;,&quot; of time. Durations less than one second are represented with a 0&quot;,&quot; `seconds` field and a positive or negative `nanos` field. For durations&quot;,&quot; of one second or more, a non-zero value for the `nanos` field must be&quot;,&quot; of the same sign as the `seconds` field. Must be from -999,999,999&quot;,&quot; to +999,999,999 inclusive.&quot;]},&quot;CommonLanguageSettings:reference_docs_uri&quot;:{&quot;paramName&quot;:&quot;reference_docs_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Link to automatically generated reference documentation.  Example:&quot;,&quot; https://cloud.google.com/nodejs/docs/reference/asset/latest&quot;]},&quot;CommonLanguageSettings:destinations&quot;:{&quot;paramName&quot;:&quot;destinations&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; The destination where API teams want this client library to be published.&quot;]},&quot;ClientLibrarySettings:version&quot;:{&quot;paramName&quot;:&quot;version&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Version of the API to apply these settings to. This is the full protobuf&quot;,&quot; package for the API, ending in the version element.&quot;,&quot; Examples: &#92;&quot;google.cloud.speech.v1&#92;&quot; and &#92;&quot;google.spanner.admin.database.v1&#92;&quot;.&quot;]},&quot;ClientLibrarySettings:launch_stage&quot;:{&quot;paramName&quot;:&quot;launch_stage&quot;,&quot;paramType&quot;:&quot;.google.api.LaunchStage&quot;,&quot;comments&quot;:[&quot; Launch stage of this version of the API.&quot;]},&quot;ClientLibrarySettings:rest_numeric_enums&quot;:{&quot;paramName&quot;:&quot;rest_numeric_enums&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; When using transport=rest, the client request will encode enums as&quot;,&quot; numbers rather than strings.&quot;]},&quot;ClientLibrarySettings:java_settings&quot;:{&quot;paramName&quot;:&quot;java_settings&quot;,&quot;paramType&quot;:&quot;.google.api.JavaSettings&quot;,&quot;comments&quot;:[&quot; Settings for legacy Java features, supported in the Service YAML.&quot;]},&quot;ClientLibrarySettings:cpp_settings&quot;:{&quot;paramName&quot;:&quot;cpp_settings&quot;,&quot;paramType&quot;:&quot;.google.api.CppSettings&quot;,&quot;comments&quot;:[&quot; Settings for C++ client libraries.&quot;]},&quot;ClientLibrarySettings:php_settings&quot;:{&quot;paramName&quot;:&quot;php_settings&quot;,&quot;paramType&quot;:&quot;.google.api.PhpSettings&quot;,&quot;comments&quot;:[&quot; Settings for PHP client libraries.&quot;]},&quot;ClientLibrarySettings:python_settings&quot;:{&quot;paramName&quot;:&quot;python_settings&quot;,&quot;paramType&quot;:&quot;.google.api.PythonSettings&quot;,&quot;comments&quot;:[&quot; Settings for Python client libraries.&quot;]},&quot;ClientLibrarySettings:node_settings&quot;:{&quot;paramName&quot;:&quot;node_settings&quot;,&quot;paramType&quot;:&quot;.google.api.NodeSettings&quot;,&quot;comments&quot;:[&quot; Settings for Node client libraries.&quot;]},&quot;ClientLibrarySettings:dotnet_settings&quot;:{&quot;paramName&quot;:&quot;dotnet_settings&quot;,&quot;paramType&quot;:&quot;.google.api.DotnetSettings&quot;,&quot;comments&quot;:[&quot; Settings for .NET client libraries.&quot;]},&quot;ClientLibrarySettings:ruby_settings&quot;:{&quot;paramName&quot;:&quot;ruby_settings&quot;,&quot;paramType&quot;:&quot;.google.api.RubySettings&quot;,&quot;comments&quot;:[&quot; Settings for Ruby client libraries.&quot;]},&quot;ClientLibrarySettings:go_settings&quot;:{&quot;paramName&quot;:&quot;go_settings&quot;,&quot;paramType&quot;:&quot;.google.api.GoSettings&quot;,&quot;comments&quot;:[&quot; Settings for Go client libraries.&quot;]},&quot;Publishing:method_settings&quot;:{&quot;paramName&quot;:&quot;method_settings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of API method settings, e.g. the behavior for methods that use the&quot;,&quot; long-running operation pattern.&quot;]},&quot;Publishing:new_issue_uri&quot;:{&quot;paramName&quot;:&quot;new_issue_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Link to a *public* URI where users can report issues.  Example:&quot;,&quot; https://issuetracker.google.com/issues/new?component=190865&amp;template=1161103&quot;]},&quot;Publishing:documentation_uri&quot;:{&quot;paramName&quot;:&quot;documentation_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Link to product home page.  Example:&quot;,&quot; https://cloud.google.com/asset-inventory/docs/overview&quot;]},&quot;Publishing:api_short_name&quot;:{&quot;paramName&quot;:&quot;api_short_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Used as a tracking tag when collecting data about the APIs developer&quot;,&quot; relations artifacts like docs, packages delivered to package managers,&quot;,&quot; etc.  Example: &#92;&quot;speech&#92;&quot;.&quot;]},&quot;Publishing:github_label&quot;:{&quot;paramName&quot;:&quot;github_label&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; GitHub label to apply to issues and pull requests opened for this API.&quot;]},&quot;Publishing:codeowner_github_teams&quot;:{&quot;paramName&quot;:&quot;codeowner_github_teams&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; GitHub teams to be added to CODEOWNERS in the directory in GitHub&quot;,&quot; containing source code for the client libraries for this API.&quot;]},&quot;Publishing:doc_tag_prefix&quot;:{&quot;paramName&quot;:&quot;doc_tag_prefix&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A prefix used in sample code when demarking regions to be included in&quot;,&quot; documentation.&quot;]},&quot;Publishing:organization&quot;:{&quot;paramName&quot;:&quot;organization&quot;,&quot;paramType&quot;:&quot;.google.api.ClientLibraryOrganization&quot;,&quot;comments&quot;:[&quot; For whom the client library is being published.&quot;]},&quot;Publishing:library_settings&quot;:{&quot;paramName&quot;:&quot;library_settings&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Client library settings.  If the same version string appears multiple&quot;,&quot; times in this list, then the last one wins.  Settings from earlier&quot;,&quot; settings with the same version string are discarded.&quot;]},&quot;Publishing:proto_reference_documentation_uri&quot;:{&quot;paramName&quot;:&quot;proto_reference_documentation_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional link to proto reference documentation.  Example:&quot;,&quot; https://cloud.google.com/pubsub/lite/docs/reference/rpc&quot;]},&quot;Publishing:rest_reference_documentation_uri&quot;:{&quot;paramName&quot;:&quot;rest_reference_documentation_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional link to REST reference documentation.  Example:&quot;,&quot; https://cloud.google.com/pubsub/lite/docs/reference/rest&quot;]},&quot;JavaSettings:library_package&quot;:{&quot;paramName&quot;:&quot;library_package&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The package name to use in Java. Clobbers the java_package option&quot;,&quot; set in the protobuf. This should be used **only** by APIs&quot;,&quot; who have already set the language_settings.java.package_name&#92;&quot; field&quot;,&quot; in gapic.yaml. API teams should use the protobuf java_package option&quot;,&quot; where possible.&quot;,&quot;&quot;,&quot; Example of a YAML configuration::&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    java_settings:&quot;,&quot;      library_package: com.google.cloud.pubsub.v1&quot;]},&quot;JavaSettings:service_class_names&quot;:{&quot;paramName&quot;:&quot;service_class_names&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Configure the Java class name to use instead of the service&#39;s for its&quot;,&quot; corresponding generated GAPIC client. Keys are fully-qualified&quot;,&quot; service names as they appear in the protobuf (including the full&quot;,&quot; the language_settings.java.interface_names&#92;&quot; field in gapic.yaml. API&quot;,&quot; teams should otherwise use the service name as it appears in the&quot;,&quot; protobuf.&quot;,&quot;&quot;,&quot; Example of a YAML configuration::&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    java_settings:&quot;,&quot;      service_class_names:&quot;,&quot;        - google.pubsub.v1.Publisher: TopicAdmin&quot;,&quot;        - google.pubsub.v1.Subscriber: SubscriptionAdmin&quot;]},&quot;JavaSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;CppSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;PhpSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;PythonSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;NodeSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;DotnetSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;DotnetSettings:renamed_services&quot;:{&quot;paramName&quot;:&quot;renamed_services&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Map from original service names to renamed versions.&quot;,&quot; This is used when the default generated types&quot;,&quot; would cause a naming conflict. (Neither name is&quot;,&quot; fully-qualified.)&quot;,&quot; Example: Subscriber to SubscriberServiceApi.&quot;]},&quot;DotnetSettings:renamed_resources&quot;:{&quot;paramName&quot;:&quot;renamed_resources&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Map from full resource types to the effective short name&quot;,&quot; for the resource. This is used when otherwise resource&quot;,&quot; named from different services would cause naming collisions.&quot;,&quot; Example entry:&quot;,&quot; &#92;&quot;datalabeling.googleapis.com/Dataset&#92;&quot;: &#92;&quot;DataLabelingDataset&#92;&quot;&quot;]},&quot;DotnetSettings:ignored_resources&quot;:{&quot;paramName&quot;:&quot;ignored_resources&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; List of full resource types to ignore during generation.&quot;,&quot; This is typically used for API-specific Location resources,&quot;,&quot; which should be handled by the generator as if they were actually&quot;,&quot; the common Location resources.&quot;,&quot; Example entry: &#92;&quot;documentai.googleapis.com/Location&#92;&quot;&quot;]},&quot;DotnetSettings:forced_namespace_aliases&quot;:{&quot;paramName&quot;:&quot;forced_namespace_aliases&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Namespaces which must be aliased in snippets due to&quot;,&quot; a known (but non-generator-predictable) naming collision&quot;]},&quot;DotnetSettings:handwritten_signatures&quot;:{&quot;paramName&quot;:&quot;handwritten_signatures&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Method signatures (in the form &#92;&quot;service.method(signature)&#92;&quot;)&quot;,&quot; which are provided separately, so shouldn&#39;t be generated.&quot;,&quot; Snippets *calling* these methods are still generated, however.&quot;]},&quot;RubySettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;GoSettings:common&quot;:{&quot;paramName&quot;:&quot;common&quot;,&quot;paramType&quot;:&quot;.google.api.CommonLanguageSettings&quot;,&quot;comments&quot;:[&quot; Some settings.&quot;]},&quot;MethodSettings:selector&quot;:{&quot;paramName&quot;:&quot;selector&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The fully qualified name of the method, for which the options below apply.&quot;,&quot; This is used to find the method to apply the options.&quot;]},&quot;MethodSettings:long_running&quot;:{&quot;paramName&quot;:&quot;long_running&quot;,&quot;paramType&quot;:&quot;.google.api.MethodSettings.LongRunning&quot;,&quot;comments&quot;:[&quot; Describes settings to use for long-running operations when generating&quot;,&quot; API methods for RPCs. Complements RPCs that use the annotations in&quot;,&quot; google/longrunning/operations.proto.&quot;,&quot;&quot;,&quot; Example of a YAML configuration::&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    method_settings:&quot;,&quot;      - selector: google.cloud.speech.v2.Speech.BatchRecognize&quot;,&quot;        long_running:&quot;,&quot;          initial_poll_delay:&quot;,&quot;            seconds: 60 # 1 minute&quot;,&quot;          poll_delay_multiplier: 1.5&quot;,&quot;          max_poll_delay:&quot;,&quot;            seconds: 360 # 6 minutes&quot;,&quot;          total_poll_timeout:&quot;,&quot;             seconds: 54000 # 90 minutes&quot;]},&quot;MethodSettings:auto_populated_fields&quot;:{&quot;paramName&quot;:&quot;auto_populated_fields&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; List of top-level fields of the request message, that should be&quot;,&quot; automatically populated by the client libraries based on their&quot;,&quot; (google.api.field_info).format. Currently supported format: UUID4.&quot;,&quot;&quot;,&quot; Example of a YAML configuration:&quot;,&quot;&quot;,&quot;  publishing:&quot;,&quot;    method_settings:&quot;,&quot;      - selector: google.example.v1.ExampleService.CreateExample&quot;,&quot;        auto_populated_fields:&quot;,&quot;        - request_id&quot;]},&quot;Compliance&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This service is used to test that GAPICs implement various REST-related features correctly. This mostly means transcoding proto3 requests to REST format&quot;,&quot; correctly for various types of HTTP annotations, but it also includes verifying that unknown (numeric) enums received by clients can be round-tripped&quot;,&quot; correctly.&quot;]},&quot;Compliance:RepeatDataBody&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method echoes the ComplianceData request. This method exercises&quot;,&quot; sending the entire request object in the REST body.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataBodyInfo&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method echoes the ComplianceData request. This method exercises&quot;,&quot; sending the a message-type field in the REST body. Per AIP-127, only&quot;,&quot; top-level, non-repeated fields can be sent this way.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataQuery&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method echoes the ComplianceData request. This method exercises&quot;,&quot; sending all request fields as query parameters.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataSimplePath&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method echoes the ComplianceData request. This method exercises&quot;,&quot; sending some parameters as &#92;&quot;simple&#92;&quot; path variables (i.e., of the form&quot;,&quot; &#92;&quot;/bar/{foo}&#92;&quot; rather than &#92;&quot;/{foo=bar/*}&#92;&quot;), and the rest as query parameters.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataPathResource&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Same as RepeatDataSimplePath, but with a path resource.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataPathTrailingResource&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Same as RepeatDataSimplePath, but with a trailing resource.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataBodyPut&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method echoes the ComplianceData request, using the HTTP PUT method.&quot;,&quot;&quot;]},&quot;Compliance:RepeatDataBodyPatch&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method echoes the ComplianceData request, using the HTTP PATCH method.&quot;,&quot;&quot;]},&quot;Compliance:GetEnum&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method requests an enum value from the server. Depending on the contents of EnumRequest, the enum value returned will be a known enum declared in the&quot;,&quot; .proto file, or a made-up enum value the is unknown to the client. To verify that clients can round-trip unknown enum vaues they receive, use the&quot;,&quot; response from this RPC as the request to VerifyEnum()&quot;,&quot;&quot;,&quot; The values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run (this is needed for&quot;,&quot; VerifyEnum() to work) but are not guaranteed to be the same across separate Showcase server runs.&quot;,&quot;&quot;]},&quot;Compliance:VerifyEnum&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method is used to verify that clients can round-trip enum values, which is particularly important for unknown enum values over REST. VerifyEnum()&quot;,&quot; verifies that its request, which is presumably the response that the client previously got to a GetEnum(), contains the correct data. If so, it responds&quot;,&quot; with the same EnumResponse; otherwise, the RPC errors.&quot;,&quot;&quot;,&quot; This works because the values of enums sent by the server when a known or unknown value is requested will be the same within a single Showcase server run,&quot;,&quot; although they are not guaranteed to be the same across separate Showcase server runs.&quot;,&quot;&quot;]},&quot;RepeatRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;RepeatRequest:info&quot;:{&quot;paramName&quot;:&quot;info&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceData&quot;,&quot;comments&quot;:[]},&quot;RepeatRequest:server_verify&quot;:{&quot;paramName&quot;:&quot;server_verify&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If true, the server will verify that the received request matches&quot;,&quot; the request with the same name in the compliance test suite.&quot;]},&quot;RepeatRequest:intended_binding_uri&quot;:{&quot;paramName&quot;:&quot;intended_binding_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The URI template this request is expected to be bound to server-side.&quot;]},&quot;RepeatRequest:f_int32&quot;:{&quot;paramName&quot;:&quot;f_int32&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Some top level fields, to test that these are encoded correctly&quot;,&quot; in query params.&quot;]},&quot;RepeatRequest:f_int64&quot;:{&quot;paramName&quot;:&quot;f_int64&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[]},&quot;RepeatRequest:f_double&quot;:{&quot;paramName&quot;:&quot;f_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;RepeatRequest:p_int32&quot;:{&quot;paramName&quot;:&quot;p_int32&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;RepeatRequest:p_int64&quot;:{&quot;paramName&quot;:&quot;p_int64&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[]},&quot;RepeatRequest:p_double&quot;:{&quot;paramName&quot;:&quot;p_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;RepeatResponse:request&quot;:{&quot;paramName&quot;:&quot;request&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.RepeatRequest&quot;,&quot;comments&quot;:[]},&quot;RepeatResponse:binding_uri&quot;:{&quot;paramName&quot;:&quot;binding_uri&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The URI template the request was bound to server-side.&quot;]},&quot;ComplianceSuite:group&quot;:{&quot;paramName&quot;:&quot;group&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;ComplianceGroup:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ComplianceGroup:rpcs&quot;:{&quot;paramName&quot;:&quot;rpcs&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[]},&quot;ComplianceGroup:requests&quot;:{&quot;paramName&quot;:&quot;requests&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_string&quot;:{&quot;paramName&quot;:&quot;f_string&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_int32&quot;:{&quot;paramName&quot;:&quot;f_int32&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_sint32&quot;:{&quot;paramName&quot;:&quot;f_sint32&quot;,&quot;paramType&quot;:&quot;TYPE_SINT32&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_sfixed32&quot;:{&quot;paramName&quot;:&quot;f_sfixed32&quot;,&quot;paramType&quot;:&quot;TYPE_SFIXED32&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_uint32&quot;:{&quot;paramName&quot;:&quot;f_uint32&quot;,&quot;paramType&quot;:&quot;TYPE_UINT32&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_fixed32&quot;:{&quot;paramName&quot;:&quot;f_fixed32&quot;,&quot;paramType&quot;:&quot;TYPE_FIXED32&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_int64&quot;:{&quot;paramName&quot;:&quot;f_int64&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_sint64&quot;:{&quot;paramName&quot;:&quot;f_sint64&quot;,&quot;paramType&quot;:&quot;TYPE_SINT64&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_sfixed64&quot;:{&quot;paramName&quot;:&quot;f_sfixed64&quot;,&quot;paramType&quot;:&quot;TYPE_SFIXED64&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_uint64&quot;:{&quot;paramName&quot;:&quot;f_uint64&quot;,&quot;paramType&quot;:&quot;TYPE_UINT64&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_fixed64&quot;:{&quot;paramName&quot;:&quot;f_fixed64&quot;,&quot;paramType&quot;:&quot;TYPE_FIXED64&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_double&quot;:{&quot;paramName&quot;:&quot;f_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_float&quot;:{&quot;paramName&quot;:&quot;f_float&quot;,&quot;paramType&quot;:&quot;TYPE_FLOAT&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_bool&quot;:{&quot;paramName&quot;:&quot;f_bool&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_bytes&quot;:{&quot;paramName&quot;:&quot;f_bytes&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_kingdom&quot;:{&quot;paramName&quot;:&quot;f_kingdom&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceData.LifeKingdom&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:f_child&quot;:{&quot;paramName&quot;:&quot;f_child&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceDataChild&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:p_string&quot;:{&quot;paramName&quot;:&quot;p_string&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:p_int32&quot;:{&quot;paramName&quot;:&quot;p_int32&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:p_double&quot;:{&quot;paramName&quot;:&quot;p_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:p_bool&quot;:{&quot;paramName&quot;:&quot;p_bool&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:p_kingdom&quot;:{&quot;paramName&quot;:&quot;p_kingdom&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceData.LifeKingdom&quot;,&quot;comments&quot;:[]},&quot;ComplianceData:p_child&quot;:{&quot;paramName&quot;:&quot;p_child&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceDataChild&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:f_string&quot;:{&quot;paramName&quot;:&quot;f_string&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:f_float&quot;:{&quot;paramName&quot;:&quot;f_float&quot;,&quot;paramType&quot;:&quot;TYPE_FLOAT&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:f_double&quot;:{&quot;paramName&quot;:&quot;f_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:f_bool&quot;:{&quot;paramName&quot;:&quot;f_bool&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:f_continent&quot;:{&quot;paramName&quot;:&quot;f_continent&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Continent&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:f_child&quot;:{&quot;paramName&quot;:&quot;f_child&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceDataGrandchild&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:p_string&quot;:{&quot;paramName&quot;:&quot;p_string&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:p_float&quot;:{&quot;paramName&quot;:&quot;p_float&quot;,&quot;paramType&quot;:&quot;TYPE_FLOAT&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:p_double&quot;:{&quot;paramName&quot;:&quot;p_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:p_bool&quot;:{&quot;paramName&quot;:&quot;p_bool&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:p_continent&quot;:{&quot;paramName&quot;:&quot;p_continent&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Continent&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataChild:p_child&quot;:{&quot;paramName&quot;:&quot;p_child&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ComplianceDataGrandchild&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataGrandchild:f_string&quot;:{&quot;paramName&quot;:&quot;f_string&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataGrandchild:f_double&quot;:{&quot;paramName&quot;:&quot;f_double&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[]},&quot;ComplianceDataGrandchild:f_bool&quot;:{&quot;paramName&quot;:&quot;f_bool&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[]},&quot;EnumRequest:unknown_enum&quot;:{&quot;paramName&quot;:&quot;unknown_enum&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Whether the client is requesting a new, unknown enum value or a known enum value already declard in this proto file.&quot;]},&quot;EnumResponse:request&quot;:{&quot;paramName&quot;:&quot;request&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.EnumRequest&quot;,&quot;comments&quot;:[&quot; The original request for a known or unknown enum from the server.&quot;]},&quot;EnumResponse:continent&quot;:{&quot;paramName&quot;:&quot;continent&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Continent&quot;,&quot;comments&quot;:[&quot; The actual enum the server provided.&quot;]},&quot;FieldInfo:format&quot;:{&quot;paramName&quot;:&quot;format&quot;,&quot;paramType&quot;:&quot;.google.api.FieldInfo.Format&quot;,&quot;comments&quot;:[&quot; The standard format of a field value. This does not explicitly configure&quot;,&quot; any API consumer, just documents the API&#39;s format for the field it is&quot;,&quot; applied to.&quot;]},&quot;RoutingRule:routing_parameters&quot;:{&quot;paramName&quot;:&quot;routing_parameters&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A collection of Routing Parameter specifications.&quot;,&quot; **NOTE:** If multiple Routing Parameters describe the same key&quot;,&quot; (via the `path_template` field or via the `field` field when&quot;,&quot; `path_template` is not provided), &#92;&quot;last one wins&#92;&quot; rule&quot;,&quot; determines which Parameter gets used.&quot;,&quot; See the examples for more details.&quot;]},&quot;RoutingParameter:field&quot;:{&quot;paramName&quot;:&quot;field&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A request field to extract the header key-value pair from.&quot;]},&quot;RoutingParameter:path_template&quot;:{&quot;paramName&quot;:&quot;path_template&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A pattern matching the key-value field. Optional.&quot;,&quot; If not specified, the whole field specified in the `field` field will be&quot;,&quot; taken as value, and its name used as key. If specified, it MUST contain&quot;,&quot; exactly one named segment (along with any number of unnamed segments) The&quot;,&quot; pattern will be matched over the field specified in the `field` field, then&quot;,&quot; if the match is successful:&quot;,&quot; - the name of the single named segment will be used as a header name,&quot;,&quot; - the match value of the segment will be used as a header value;&quot;,&quot; if the match is NOT successful, nothing will be sent.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;               -- This is a field in the request message&quot;,&quot;              |   that the header value will be extracted from.&quot;,&quot;              |&quot;,&quot;              |                     -- This is the key name in the&quot;,&quot;              |                    |   routing header.&quot;,&quot;              V                    |&quot;,&quot;     field: &#92;&quot;table_name&#92;&quot;           v&quot;,&quot;     path_template: &#92;&quot;projects/*/{table_location=instances/*}/tables/*&#92;&quot;&quot;,&quot;                                                ^            ^&quot;,&quot;                                                |            |&quot;,&quot;       In the {} brackets is the pattern that --             |&quot;,&quot;       specifies what to extract from the                    |&quot;,&quot;       field as a value to be sent.                          |&quot;,&quot;                                                             |&quot;,&quot;      The string in the field must match the whole pattern --&quot;,&quot;      before brackets, inside brackets, after brackets.&quot;,&quot;&quot;,&quot; When looking at this specific example, we can see that:&quot;,&quot; - A key-value pair with the key `table_location`&quot;,&quot;   and the value matching `instances/*` should be added&quot;,&quot;   to the x-goog-request-params routing header.&quot;,&quot; - The value is extracted from the request message&#39;s `table_name` field&quot;,&quot;   if it matches the full pattern specified:&quot;,&quot;   `projects/*/instances/*/tables/*`.&quot;,&quot;&quot;,&quot; **NB:** If the `path_template` field is not provided, the key name is&quot;,&quot; equal to the field name, and the whole field should be sent as a value.&quot;,&quot; This makes the pattern for the field and the value functionally equivalent&quot;,&quot; to `**`, and the configuration&quot;,&quot;&quot;,&quot;     {&quot;,&quot;       field: &#92;&quot;table_name&#92;&quot;&quot;,&quot;     }&quot;,&quot;&quot;,&quot; is a functionally equivalent shorthand to:&quot;,&quot;&quot;,&quot;     {&quot;,&quot;       field: &#92;&quot;table_name&#92;&quot;&quot;,&quot;       path_template: &#92;&quot;{table_name=**}&#92;&quot;&quot;,&quot;     }&quot;,&quot;&quot;,&quot; See Example 1 for more details.&quot;]},&quot;Any:type_url&quot;:{&quot;paramName&quot;:&quot;type_url&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A URL/resource name that uniquely identifies the type of the serialized&quot;,&quot; protocol buffer message. This string must contain at least&quot;,&quot; one &#92;&quot;/&#92;&quot; character. The last segment of the URL&#39;s path must represent&quot;,&quot; the fully qualified name of the type (as in&quot;,&quot; `path/google.protobuf.Duration`). The name should be in a canonical form&quot;,&quot; (e.g., leading &#92;&quot;.&#92;&quot; is not accepted).&quot;,&quot;&quot;,&quot; In practice, teams usually precompile into the binary all types that they&quot;,&quot; expect it to use in the context of Any. However, for URLs which use the&quot;,&quot; scheme `http`, `https`, or no scheme, one can optionally set up a type&quot;,&quot; server that maps type URLs to message definitions as follows:&quot;,&quot;&quot;,&quot; * If no scheme is provided, `https` is assumed.&quot;,&quot; * An HTTP GET on the URL must yield a [google.protobuf.Type][]&quot;,&quot;   value in binary format, or produce an error.&quot;,&quot; * Applications are allowed to cache lookup results based on the&quot;,&quot;   URL, or have them precompiled into a binary to avoid any&quot;,&quot;   lookup. Therefore, binary compatibility needs to be preserved&quot;,&quot;   on changes to types. (Use versioned type names to manage&quot;,&quot;   breaking changes.)&quot;,&quot;&quot;,&quot; Note: this functionality is not currently available in the official&quot;,&quot; protobuf release, and it is not used for type URLs beginning with&quot;,&quot; type.googleapis.com. As of May 2023, there are no widely used type server&quot;,&quot; implementations and no plans to implement one.&quot;,&quot;&quot;,&quot; Schemes other than `http`, `https` (or the empty scheme) might be&quot;,&quot; used with implementation specific semantics.&quot;,&quot;&quot;]},&quot;Any:value&quot;:{&quot;paramName&quot;:&quot;value&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; Must be a valid serialized protocol buffer of the above specified type.&quot;]},&quot;Status:code&quot;:{&quot;paramName&quot;:&quot;code&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The status code, which should be an enum value of&quot;,&quot; [google.rpc.Code][google.rpc.Code].&quot;]},&quot;Status:message&quot;:{&quot;paramName&quot;:&quot;message&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A developer-facing error message, which should be in English. Any&quot;,&quot; user-facing error message should be localized and sent in the&quot;,&quot; [google.rpc.Status.details][google.rpc.Status.details] field, or localized&quot;,&quot; by the client.&quot;]},&quot;Status:details&quot;:{&quot;paramName&quot;:&quot;details&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of messages that carry the error details.  There is a common set of&quot;,&quot; message types for APIs to use.&quot;]},&quot;Operations&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Manages long-running operations with an API service.&quot;,&quot;&quot;,&quot; When an API method normally takes long time to complete, it can be designed&quot;,&quot; to return [Operation][google.longrunning.Operation] to the client, and the client can use this&quot;,&quot; interface to receive the real response asynchronously by polling the&quot;,&quot; operation resource, or pass the operation resource to another API (such as&quot;,&quot; Google Cloud Pub/Sub API) to receive the response.  Any API service that&quot;,&quot; returns long-running operations should implement the `Operations` interface&quot;,&quot; so developers can have a consistent client experience.&quot;]},&quot;Operations:ListOperations&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists operations that match the specified filter in the request. If the&quot;,&quot; server doesn&#39;t support this method, it returns `UNIMPLEMENTED`.&quot;,&quot;&quot;,&quot; NOTE: the `name` binding allows API services to override the binding&quot;,&quot; to use different resource name schemes, such as `users/*/operations`. To&quot;,&quot; override the binding, API services can add a binding such as&quot;,&quot; `&#92;&quot;/v1/{name=users/*}/operations&#92;&quot;` to their service configuration.&quot;,&quot; For backwards compatibility, the default name includes the operations&quot;,&quot; collection id, however overriding users must ensure the name binding&quot;,&quot; is the parent resource, without the operations collection id.&quot;,&quot;&quot;]},&quot;Operations:GetOperation&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets the latest state of a long-running operation.  Clients can use this&quot;,&quot; method to poll the operation result at intervals as recommended by the API&quot;,&quot; service.&quot;,&quot;&quot;]},&quot;Operations:DeleteOperation&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a long-running operation. This method indicates that the client is&quot;,&quot; no longer interested in the operation result. It does not cancel the&quot;,&quot; operation. If the server doesn&#39;t support this method, it returns&quot;,&quot; `google.rpc.Code.UNIMPLEMENTED`.&quot;,&quot;&quot;]},&quot;Operations:CancelOperation&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Starts asynchronous cancellation on a long-running operation.  The server&quot;,&quot; makes a best effort to cancel the operation, but success is not&quot;,&quot; guaranteed.  If the server doesn&#39;t support this method, it returns&quot;,&quot; `google.rpc.Code.UNIMPLEMENTED`.  Clients can use&quot;,&quot; [Operations.GetOperation][google.longrunning.Operations.GetOperation] or&quot;,&quot; other methods to check whether the cancellation succeeded or whether the&quot;,&quot; operation completed despite cancellation. On successful cancellation,&quot;,&quot; the operation is not deleted; instead, it becomes an operation with&quot;,&quot; an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,&quot;,&quot; corresponding to `Code.CANCELLED`.&quot;,&quot;&quot;]},&quot;Operations:WaitOperation&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Waits until the specified long-running operation is done or reaches at most&quot;,&quot; a specified timeout, returning the latest state.  If the operation is&quot;,&quot; already done, the latest state is immediately returned.  If the timeout&quot;,&quot; specified is greater than the default HTTP/RPC timeout, the HTTP/RPC&quot;,&quot; timeout is used.  If the server does not support this method, it returns&quot;,&quot; `google.rpc.Code.UNIMPLEMENTED`.&quot;,&quot; Note that this method is on a best-effort basis.  It may return the latest&quot;,&quot; state before the specified timeout (including immediately), meaning even an&quot;,&quot; immediate response is no guarantee that the operation is done.&quot;,&quot;&quot;]},&quot;Operation:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The server-assigned name, which is only unique within the same service that&quot;,&quot; originally returns it. If you use the default HTTP mapping, the&quot;,&quot; `name` should be a resource name ending with `operations/{unique_id}`.&quot;]},&quot;Operation:metadata&quot;:{&quot;paramName&quot;:&quot;metadata&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Any&quot;,&quot;comments&quot;:[&quot; Service-specific metadata associated with the operation.  It typically&quot;,&quot; contains progress information and common metadata such as create time.&quot;,&quot; Some services might not provide such metadata.  Any method that returns a&quot;,&quot; long-running operation should document the metadata type, if any.&quot;]},&quot;Operation:done&quot;:{&quot;paramName&quot;:&quot;done&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; If the value is `false`, it means the operation is still in progress.&quot;,&quot; If `true`, the operation is completed, and either `error` or `response` is&quot;,&quot; available.&quot;]},&quot;Operation:error&quot;:{&quot;paramName&quot;:&quot;error&quot;,&quot;paramType&quot;:&quot;.google.rpc.Status&quot;,&quot;comments&quot;:[&quot; The error result of the operation in case of failure or cancellation.&quot;]},&quot;Operation:response&quot;:{&quot;paramName&quot;:&quot;response&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Any&quot;,&quot;comments&quot;:[&quot; The normal response of the operation in case of success.  If the original&quot;,&quot; method returns no data on success, such as `Delete`, the response is&quot;,&quot; `google.protobuf.Empty`.  If the original method is standard&quot;,&quot; `Get`/`Create`/`Update`, the response should be the resource.  For other&quot;,&quot; methods, the response should have the type `XxxResponse`, where `Xxx`&quot;,&quot; is the original method name.  For example, if the original method name&quot;,&quot; is `TakeSnapshot()`, the inferred response type is&quot;,&quot; `TakeSnapshotResponse`.&quot;]},&quot;GetOperationRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the operation resource.&quot;]},&quot;ListOperationsRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the operation&#39;s parent resource.&quot;]},&quot;ListOperationsRequest:filter&quot;:{&quot;paramName&quot;:&quot;filter&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The standard list filter.&quot;]},&quot;ListOperationsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The standard list page size.&quot;]},&quot;ListOperationsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The standard list page token.&quot;]},&quot;ListOperationsResponse:operations&quot;:{&quot;paramName&quot;:&quot;operations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; A list of operations that matches the specified filter in the request.&quot;]},&quot;ListOperationsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The standard List next-page token.&quot;]},&quot;CancelOperationRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the operation resource to be cancelled.&quot;]},&quot;DeleteOperationRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the operation resource to be deleted.&quot;]},&quot;WaitOperationRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the operation resource to wait on.&quot;]},&quot;WaitOperationRequest:timeout&quot;:{&quot;paramName&quot;:&quot;timeout&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Duration&quot;,&quot;comments&quot;:[&quot; The maximum duration to wait before timing out. If left blank, the wait&quot;,&quot; will be at most the time permitted by the underlying HTTP/RPC protocol.&quot;,&quot; If RPC context deadline is also specified, the shorter one will be used.&quot;]},&quot;OperationInfo:response_type&quot;:{&quot;paramName&quot;:&quot;response_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The message name of the primary return type for this&quot;,&quot; long-running operation.&quot;,&quot; This type will be used to deserialize the LRO&#39;s response.&quot;,&quot;&quot;,&quot; If the response is in a different package from the rpc, a fully-qualified&quot;,&quot; message name must be used (e.g. `google.protobuf.Struct`).&quot;,&quot;&quot;,&quot; Note: Altering this value constitutes a breaking change.&quot;]},&quot;OperationInfo:metadata_type&quot;:{&quot;paramName&quot;:&quot;metadata_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Required. The message name of the metadata type for this long-running&quot;,&quot; operation.&quot;,&quot;&quot;,&quot; If the response is in a different package from the rpc, a fully-qualified&quot;,&quot; message name must be used (e.g. `google.protobuf.Struct`).&quot;,&quot;&quot;,&quot; Note: Altering this value constitutes a breaking change.&quot;]},&quot;Timestamp:seconds&quot;:{&quot;paramName&quot;:&quot;seconds&quot;,&quot;paramType&quot;:&quot;TYPE_INT64&quot;,&quot;comments&quot;:[&quot; Represents seconds of UTC time since Unix epoch&quot;,&quot; 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to&quot;,&quot; 9999-12-31T23:59:59Z inclusive.&quot;]},&quot;Timestamp:nanos&quot;:{&quot;paramName&quot;:&quot;nanos&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; Non-negative fractions of a second at nanosecond resolution. Negative&quot;,&quot; second values with fractions must still have non-negative nanos values&quot;,&quot; that count forward in time. Must be from 0 to 999,999,999&quot;,&quot; inclusive.&quot;]},&quot;Echo&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This service is used showcase the four main types of rpcs - unary, server&quot;,&quot; side streaming, client side streaming, and bidirectional streaming. This&quot;,&quot; service also exposes methods that explicitly implement server delay, and&quot;,&quot; paginated calls. Set the &#39;showcase-trailer&#39; metadata key on any method&quot;,&quot; to have the values echoed in the response trailers. Set the&quot;,&quot; &#39;x-goog-request-params&#39; metadata key on any method to have the values&quot;,&quot; echoed in the response headers.&quot;]},&quot;Echo:EchoErrorDetails&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method returns error details in a repeated &#92;&quot;google.protobuf.Any&#92;&quot;&quot;,&quot; field. This method showcases handling errors thus encoded, particularly&quot;,&quot; over REST transport. Note that GAPICs only allow the type&quot;,&quot; &#92;&quot;google.protobuf.Any&#92;&quot; for field paths ending in &#92;&quot;error.details&#92;&quot;, and, at&quot;,&quot; run-time, the actual types for these fields must be one of the types in&quot;,&quot; google/rpc/error_details.proto.&quot;,&quot;&quot;]},&quot;Echo:Expand&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method splits the given content into words and will pass each word back&quot;,&quot; through the stream. This method showcases server-side streaming RPCs.&quot;,&quot;&quot;]},&quot;Echo:Collect&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method will collect the words given to it. When the stream is closed&quot;,&quot; by the client, this method will return the a concatenation of the strings&quot;,&quot; passed to it. This method showcases client-side streaming RPCs.&quot;,&quot;&quot;]},&quot;Echo:Chat&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method, upon receiving a request on the stream, will pass the same&quot;,&quot; content back on the stream. This method showcases bidirectional&quot;,&quot; streaming RPCs.&quot;,&quot;&quot;]},&quot;Echo:PagedExpand&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This is similar to the Expand method but instead of returning a stream of&quot;,&quot; expanded words, this method returns a paged list of expanded words.&quot;,&quot;&quot;]},&quot;Echo:PagedExpandLegacy&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This is similar to the PagedExpand except that it uses&quot;,&quot; max_results instead of page_size, as some legacy APIs still&quot;,&quot; do. New APIs should NOT use this pattern.&quot;,&quot;&quot;]},&quot;Echo:PagedExpandLegacyMapped&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method returns a map containing lists of words that appear in the input, keyed by their&quot;,&quot; initial character. The only words returned are the ones included in the current page,&quot;,&quot; as determined by page_token and page_size, which both refer to the word indices in the&quot;,&quot; input. This paging result consisting of a map of lists is a pattern used by some legacy&quot;,&quot; APIs. New APIs should NOT use this pattern.&quot;,&quot;&quot;]},&quot;Echo:Wait&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method will wait for the requested amount of time and then return.&quot;,&quot; This method showcases how a client handles a request timeout.&quot;,&quot;&quot;]},&quot;Echo:Block&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method will block (wait) for the requested amount of time&quot;,&quot; and then return the response or error.&quot;,&quot; This method showcases how a client handles delays or retries.&quot;,&quot;&quot;]},&quot;EchoRequest:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The content to be echoed by the server.&quot;]},&quot;EchoRequest:error&quot;:{&quot;paramName&quot;:&quot;error&quot;,&quot;paramType&quot;:&quot;.google.rpc.Status&quot;,&quot;comments&quot;:[&quot; The error to be thrown by the server.&quot;]},&quot;EchoRequest:severity&quot;:{&quot;paramName&quot;:&quot;severity&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Severity&quot;,&quot;comments&quot;:[&quot; The severity to be echoed by the server.&quot;]},&quot;EchoRequest:header&quot;:{&quot;paramName&quot;:&quot;header&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional. This field can be set to test the routing annotation on the Echo method.&quot;]},&quot;EchoRequest:other_header&quot;:{&quot;paramName&quot;:&quot;other_header&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional. This field can be set to test the routing annotation on the Echo method.&quot;]},&quot;EchoRequest:request_id&quot;:{&quot;paramName&quot;:&quot;request_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; To facilitate testing of https://google.aip.dev/client-libraries/4235&quot;],&quot;fieldInfo&quot;:{&quot;format&quot;:1}},&quot;EchoRequest:other_request_id&quot;:{&quot;paramName&quot;:&quot;other_request_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; To facilitate testing of https://google.aip.dev/client-libraries/4235&quot;],&quot;fieldInfo&quot;:{&quot;format&quot;:1}},&quot;EchoResponse:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The content specified in the request.&quot;]},&quot;EchoResponse:severity&quot;:{&quot;paramName&quot;:&quot;severity&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Severity&quot;,&quot;comments&quot;:[&quot; The severity specified in the request.&quot;]},&quot;EchoResponse:request_id&quot;:{&quot;paramName&quot;:&quot;request_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The request ID specified or autopopulated in the request.&quot;]},&quot;EchoResponse:other_request_id&quot;:{&quot;paramName&quot;:&quot;other_request_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The other request ID specified or autopopulated in the request.&quot;]},&quot;EchoErrorDetailsRequest:single_detail_text&quot;:{&quot;paramName&quot;:&quot;single_detail_text&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Content to return in a singular `*.error.details` field of type&quot;,&quot; `google.protobuf.Any`&quot;]},&quot;EchoErrorDetailsRequest:multi_detail_text&quot;:{&quot;paramName&quot;:&quot;multi_detail_text&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Content to return in a repeated `*.error.details` field of type&quot;,&quot; `google.protobuf.Any`&quot;]},&quot;EchoErrorDetailsResponse:single_detail&quot;:{&quot;paramName&quot;:&quot;single_detail&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.EchoErrorDetailsResponse.SingleDetail&quot;,&quot;comments&quot;:[]},&quot;EchoErrorDetailsResponse:multiple_details&quot;:{&quot;paramName&quot;:&quot;multiple_details&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.EchoErrorDetailsResponse.MultipleDetails&quot;,&quot;comments&quot;:[]},&quot;ErrorWithSingleDetail:details&quot;:{&quot;paramName&quot;:&quot;details&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Any&quot;,&quot;comments&quot;:[]},&quot;ErrorWithMultipleDetails:details&quot;:{&quot;paramName&quot;:&quot;details&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[]},&quot;ExpandRequest:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The content that will be split into words and returned on the stream.&quot;]},&quot;ExpandRequest:error&quot;:{&quot;paramName&quot;:&quot;error&quot;,&quot;paramType&quot;:&quot;.google.rpc.Status&quot;,&quot;comments&quot;:[&quot; The error that is thrown after all words are sent on the stream.&quot;]},&quot;ExpandRequest:stream_wait_time&quot;:{&quot;paramName&quot;:&quot;stream_wait_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Duration&quot;,&quot;comments&quot;:[&quot;The wait time between each server streaming messages&quot;]},&quot;PagedExpandRequest:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The string to expand.&quot;],&quot;fieldBehavior&quot;:2},&quot;PagedExpandRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The number of words to returned in each page.&quot;]},&quot;PagedExpandRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The position of the page to be returned.&quot;]},&quot;PagedExpandLegacyRequest:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The string to expand.&quot;],&quot;fieldBehavior&quot;:2},&quot;PagedExpandLegacyRequest:max_results&quot;:{&quot;paramName&quot;:&quot;max_results&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The number of words to returned in each page.&quot;,&quot; (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that&quot;,&quot;     violates aip.dev/158. Ordinarily, this should be page_size. --)&quot;]},&quot;PagedExpandLegacyRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The position of the page to be returned.&quot;]},&quot;PagedExpandResponse:responses&quot;:{&quot;paramName&quot;:&quot;responses&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The words that were expanded.&quot;]},&quot;PagedExpandResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The next page token.&quot;]},&quot;PagedExpandResponseList:words&quot;:{&quot;paramName&quot;:&quot;words&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[]},&quot;PagedExpandLegacyMappedResponse:alphabetized&quot;:{&quot;paramName&quot;:&quot;alphabetized&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The words that were expanded, indexed by their initial character.&quot;,&quot; (-- aip.dev/not-precedent: This is a legacy, non-standard pattern that violates&quot;,&quot;     aip.dev/158. Ordinarily, this should be a `repeated` field, as in PagedExpandResponse. --)&quot;]},&quot;PagedExpandLegacyMappedResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The next page token.&quot;]},&quot;WaitRequest:end_time&quot;:{&quot;paramName&quot;:&quot;end_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The time that this operation will complete.&quot;]},&quot;WaitRequest:ttl&quot;:{&quot;paramName&quot;:&quot;ttl&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Duration&quot;,&quot;comments&quot;:[&quot; The duration of this operation.&quot;]},&quot;WaitRequest:error&quot;:{&quot;paramName&quot;:&quot;error&quot;,&quot;paramType&quot;:&quot;.google.rpc.Status&quot;,&quot;comments&quot;:[&quot; The error that will be returned by the server. If this code is specified&quot;,&quot; to be the OK rpc code, an empty response will be returned.&quot;]},&quot;WaitRequest:success&quot;:{&quot;paramName&quot;:&quot;success&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.WaitResponse&quot;,&quot;comments&quot;:[&quot; The response to be returned on operation completion.&quot;]},&quot;WaitResponse:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; This content of the result.&quot;]},&quot;WaitMetadata:end_time&quot;:{&quot;paramName&quot;:&quot;end_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The time that this operation will complete.&quot;]},&quot;BlockRequest:response_delay&quot;:{&quot;paramName&quot;:&quot;response_delay&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Duration&quot;,&quot;comments&quot;:[&quot; The amount of time to block before returning a response.&quot;]},&quot;BlockRequest:error&quot;:{&quot;paramName&quot;:&quot;error&quot;,&quot;paramType&quot;:&quot;.google.rpc.Status&quot;,&quot;comments&quot;:[&quot; The error that will be returned by the server. If this code is specified&quot;,&quot; to be the OK rpc code, an empty response will be returned.&quot;]},&quot;BlockRequest:success&quot;:{&quot;paramName&quot;:&quot;success&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.BlockResponse&quot;,&quot;comments&quot;:[&quot; The response to be returned that will signify successful method call.&quot;]},&quot;BlockResponse:content&quot;:{&quot;paramName&quot;:&quot;content&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; This content can contain anything, the server will not depend on a value&quot;,&quot; here.&quot;]},&quot;ResourceDescriptor:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource type. It must be in the format of&quot;,&quot; {service_name}/{resource_type_kind}. The `resource_type_kind` must be&quot;,&quot; singular and must not include version numbers.&quot;,&quot;&quot;,&quot; Example: `storage.googleapis.com/Bucket`&quot;,&quot;&quot;,&quot; The value of the resource_type_kind must follow the regular expression&quot;,&quot; /[A-Za-z][a-zA-Z0-9]+/. It should start with an upper case character and&quot;,&quot; should use PascalCase (UpperCamelCase). The maximum number of&quot;,&quot; characters allowed for the `resource_type_kind` is 100.&quot;]},&quot;ResourceDescriptor:pattern&quot;:{&quot;paramName&quot;:&quot;pattern&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; Optional. The relative resource name pattern associated with this resource&quot;,&quot; type. The DNS prefix of the full resource name shouldn&#39;t be specified here.&quot;,&quot;&quot;,&quot; The path pattern must follow the syntax, which aligns with HTTP binding&quot;,&quot; syntax:&quot;,&quot;&quot;,&quot;     Template = Segment { &#92;&quot;/&#92;&quot; Segment } ;&quot;,&quot;     Segment = LITERAL | Variable ;&quot;,&quot;     Variable = &#92;&quot;{&#92;&quot; LITERAL &#92;&quot;}&#92;&quot; ;&quot;,&quot;&quot;,&quot; Examples:&quot;,&quot;&quot;,&quot;     - &#92;&quot;projects/{project}/topics/{topic}&#92;&quot;&quot;,&quot;     - &#92;&quot;projects/{project}/knowledgeBases/{knowledge_base}&#92;&quot;&quot;,&quot;&quot;,&quot; The components in braces correspond to the IDs for each resource in the&quot;,&quot; hierarchy. It is expected that, if multiple patterns are provided,&quot;,&quot; the same component name (e.g. &#92;&quot;project&#92;&quot;) refers to IDs of the same&quot;,&quot; type of resource.&quot;]},&quot;ResourceDescriptor:name_field&quot;:{&quot;paramName&quot;:&quot;name_field&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Optional. The field on the resource that designates the resource name&quot;,&quot; field. If omitted, this is assumed to be &#92;&quot;name&#92;&quot;.&quot;]},&quot;ResourceDescriptor:history&quot;:{&quot;paramName&quot;:&quot;history&quot;,&quot;paramType&quot;:&quot;.google.api.ResourceDescriptor.History&quot;,&quot;comments&quot;:[&quot; Optional. The historical or future-looking state of the resource pattern.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     // The InspectTemplate message originally only supported resource&quot;,&quot;     // names with organization, and project was added later.&quot;,&quot;     message InspectTemplate {&quot;,&quot;       option (google.api.resource) = {&quot;,&quot;         type: &#92;&quot;dlp.googleapis.com/InspectTemplate&#92;&quot;&quot;,&quot;         pattern:&quot;,&quot;         &#92;&quot;organizations/{organization}/inspectTemplates/{inspect_template}&#92;&quot;&quot;,&quot;         pattern: &#92;&quot;projects/{project}/inspectTemplates/{inspect_template}&#92;&quot;&quot;,&quot;         history: ORIGINALLY_SINGLE_PATTERN&quot;,&quot;       };&quot;,&quot;     }&quot;]},&quot;ResourceDescriptor:plural&quot;:{&quot;paramName&quot;:&quot;plural&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The plural name used in the resource name and permission names, such as&quot;,&quot; &#39;projects&#39; for the resource name of &#39;projects/{project}&#39; and the permission&quot;,&quot; name of &#39;cloudresourcemanager.googleapis.com/projects.get&#39;. It is the same&quot;,&quot; concept of the `plural` field in k8s CRD spec&quot;,&quot; https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/&quot;,&quot;&quot;,&quot; Note: The plural form is required even for singleton resources. See&quot;,&quot; https://aip.dev/156&quot;]},&quot;ResourceDescriptor:singular&quot;:{&quot;paramName&quot;:&quot;singular&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The same concept of the `singular` field in k8s CRD spec&quot;,&quot; https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/&quot;,&quot; Such as &#92;&quot;project&#92;&quot; for the `resourcemanager.googleapis.com/Project` type.&quot;]},&quot;ResourceDescriptor:style&quot;:{&quot;paramName&quot;:&quot;style&quot;,&quot;paramType&quot;:&quot;TYPE_ENUM[]&quot;,&quot;comments&quot;:[&quot; Style flag(s) for this resource.&quot;,&quot; These indicate that a resource is expected to conform to a given&quot;,&quot; style. See the specific style flags for additional information.&quot;]},&quot;ResourceReference:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource type that the annotated field references.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     message Subscription {&quot;,&quot;       string topic = 2 [(google.api.resource_reference) = {&quot;,&quot;         type: &#92;&quot;pubsub.googleapis.com/Topic&#92;&quot;&quot;,&quot;       }];&quot;,&quot;     }&quot;,&quot;&quot;,&quot; Occasionally, a field may reference an arbitrary resource. In this case,&quot;,&quot; APIs use the special value * in their resource reference.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     message GetIamPolicyRequest {&quot;,&quot;       string resource = 2 [(google.api.resource_reference) = {&quot;,&quot;         type: &#92;&quot;*&#92;&quot;&quot;,&quot;       }];&quot;,&quot;     }&quot;]},&quot;ResourceReference:child_type&quot;:{&quot;paramName&quot;:&quot;child_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource type of a child collection that the annotated field&quot;,&quot; references. This is useful for annotating the `parent` field that&quot;,&quot; doesn&#39;t have a fixed resource type.&quot;,&quot;&quot;,&quot; Example:&quot;,&quot;&quot;,&quot;     message ListLogEntriesRequest {&quot;,&quot;       string parent = 1 [(google.api.resource_reference) = {&quot;,&quot;         child_type: &#92;&quot;logging.googleapis.com/LogEntry&#92;&quot;&quot;,&quot;       };&quot;,&quot;     }&quot;]},&quot;FieldMask:paths&quot;:{&quot;paramName&quot;:&quot;paths&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; The set of field mask paths.&quot;]},&quot;Identity&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; A simple identity service.&quot;]},&quot;Identity:CreateUser&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a user.&quot;,&quot;&quot;]},&quot;Identity:GetUser&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Retrieves the User with the given uri.&quot;,&quot;&quot;]},&quot;Identity:UpdateUser&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates a user.&quot;,&quot;&quot;]},&quot;Identity:DeleteUser&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a user, their profile, and all of their authored messages.&quot;,&quot;&quot;]},&quot;Identity:ListUsers&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists all users.&quot;,&quot;&quot;]},&quot;User:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the user.&quot;]},&quot;User:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The display_name of the user.&quot;],&quot;fieldBehavior&quot;:2},&quot;User:email&quot;:{&quot;paramName&quot;:&quot;email&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The email address of the user.&quot;],&quot;fieldBehavior&quot;:2},&quot;User:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The timestamp at which the user was created.&quot;],&quot;fieldBehavior&quot;:3},&quot;User:update_time&quot;:{&quot;paramName&quot;:&quot;update_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The latest timestamp at which the user was updated.&quot;],&quot;fieldBehavior&quot;:3},&quot;User:age&quot;:{&quot;paramName&quot;:&quot;age&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The age of the user in years.&quot;]},&quot;User:height_feet&quot;:{&quot;paramName&quot;:&quot;height_feet&quot;,&quot;paramType&quot;:&quot;TYPE_DOUBLE&quot;,&quot;comments&quot;:[&quot; The height of the user in feet.&quot;]},&quot;User:nickname&quot;:{&quot;paramName&quot;:&quot;nickname&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The nickname of the user.&quot;,&quot;&quot;,&quot; (-- aip.dev/not-precedent: An empty string is a valid nickname.&quot;,&quot;     Ordinarily, proto3_optional should not be used on a `string` field. --)&quot;]},&quot;User:enable_notifications&quot;:{&quot;paramName&quot;:&quot;enable_notifications&quot;,&quot;paramType&quot;:&quot;TYPE_BOOL&quot;,&quot;comments&quot;:[&quot; Enables the receiving of notifications. The default is true if unset.&quot;,&quot;&quot;,&quot; (-- aip.dev/not-precedent: The default for the feature is true.&quot;,&quot;     Ordinarily, the default for a `bool` field should be false. --)&quot;]},&quot;CreateUserRequest:user&quot;:{&quot;paramName&quot;:&quot;user&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.User&quot;,&quot;comments&quot;:[&quot; The user to create.&quot;]},&quot;GetUserRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the requested user.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateUserRequest:user&quot;:{&quot;paramName&quot;:&quot;user&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.User&quot;,&quot;comments&quot;:[&quot; The user to update.&quot;]},&quot;UpdateUserRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; The field mask to determine which fields are to be updated. If empty, the&quot;,&quot; server will assume all fields are to be updated.&quot;]},&quot;DeleteUserRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the user to delete.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListUsersRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The maximum number of users to return. Server may return fewer users&quot;,&quot; than requested. If unspecified, server will pick an appropriate default.&quot;]},&quot;ListUsersRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The value of google.showcase.v1beta1.ListUsersResponse.next_page_token&quot;,&quot; returned from the previous call to&quot;,&quot; `google.showcase.v1beta1.Identity&#92;&#92;ListUsers` method.&quot;]},&quot;ListUsersResponse:users&quot;:{&quot;paramName&quot;:&quot;users&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The list of users.&quot;]},&quot;ListUsersResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A token to retrieve next page of results.&quot;,&quot; Pass this value in ListUsersRequest.page_token field in the subsequent&quot;,&quot; call to `google.showcase.v1beta1.Message&#92;&#92;ListUsers` method to retrieve the&quot;,&quot; next page of results.&quot;]},&quot;ErrorInfo:reason&quot;:{&quot;paramName&quot;:&quot;reason&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The reason of the error. This is a constant value that identifies the&quot;,&quot; proximate cause of the error. Error reasons are unique within a particular&quot;,&quot; domain of errors. This should be at most 63 characters and match a&quot;,&quot; regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents&quot;,&quot; UPPER_SNAKE_CASE.&quot;]},&quot;ErrorInfo:domain&quot;:{&quot;paramName&quot;:&quot;domain&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The logical grouping to which the &#92;&quot;reason&#92;&quot; belongs. The error domain&quot;,&quot; is typically the registered service name of the tool or product that&quot;,&quot; generates the error. Example: &#92;&quot;pubsub.googleapis.com&#92;&quot;. If the error is&quot;,&quot; generated by some common infrastructure, the error domain must be a&quot;,&quot; globally unique value that identifies the infrastructure. For Google API&quot;,&quot; infrastructure, the error domain is &#92;&quot;googleapis.com&#92;&quot;.&quot;]},&quot;ErrorInfo:metadata&quot;:{&quot;paramName&quot;:&quot;metadata&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Additional structured details about this error.&quot;,&quot;&quot;,&quot; Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in&quot;,&quot; length. When identifying the current value of an exceeded limit, the units&quot;,&quot; should be contained in the key, not the value.  For example, rather than&quot;,&quot; {&#92;&quot;instanceLimit&#92;&quot;: &#92;&quot;100/request&#92;&quot;}, should be returned as,&quot;,&quot; {&#92;&quot;instanceLimitPerRequest&#92;&quot;: &#92;&quot;100&#92;&quot;}, if the client exceeds the number of&quot;,&quot; instances that can be created in a single (batch) request.&quot;]},&quot;RetryInfo:retry_delay&quot;:{&quot;paramName&quot;:&quot;retry_delay&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Duration&quot;,&quot;comments&quot;:[&quot; Clients should wait at least this long between retrying the same request.&quot;]},&quot;DebugInfo:stack_entries&quot;:{&quot;paramName&quot;:&quot;stack_entries&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; The stack trace entries indicating where the error occurred.&quot;]},&quot;DebugInfo:detail&quot;:{&quot;paramName&quot;:&quot;detail&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Additional debugging information provided by the server.&quot;]},&quot;QuotaFailure:violations&quot;:{&quot;paramName&quot;:&quot;violations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Describes all quota violations.&quot;]},&quot;PreconditionFailure:violations&quot;:{&quot;paramName&quot;:&quot;violations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Describes all precondition violations.&quot;]},&quot;BadRequest:field_violations&quot;:{&quot;paramName&quot;:&quot;field_violations&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Describes all violations in a client request.&quot;]},&quot;RequestInfo:request_id&quot;:{&quot;paramName&quot;:&quot;request_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; An opaque string that should only be interpreted by the service generating&quot;,&quot; it. For example, it can be used to identify requests in the service&#39;s logs.&quot;]},&quot;RequestInfo:serving_data&quot;:{&quot;paramName&quot;:&quot;serving_data&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Any data that was used to serve this request. For example, an encrypted&quot;,&quot; stack trace that can be sent back to the service provider for debugging.&quot;]},&quot;ResourceInfo:resource_type&quot;:{&quot;paramName&quot;:&quot;resource_type&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A name for the type of resource being accessed, e.g. &#92;&quot;sql table&#92;&quot;,&quot;,&quot; &#92;&quot;cloud storage bucket&#92;&quot;, &#92;&quot;file&#92;&quot;, &#92;&quot;Google calendar&#92;&quot;; or the type URL&quot;,&quot; of the resource: e.g. &#92;&quot;type.googleapis.com/google.pubsub.v1.Topic&#92;&quot;.&quot;]},&quot;ResourceInfo:resource_name&quot;:{&quot;paramName&quot;:&quot;resource_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the resource being accessed.  For example, a shared calendar&quot;,&quot; name: &#92;&quot;example.com_4fghdhgsrgh@group.calendar.google.com&#92;&quot;, if the current&quot;,&quot; error is&quot;,&quot; [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].&quot;]},&quot;ResourceInfo:owner&quot;:{&quot;paramName&quot;:&quot;owner&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The owner of the resource (optional).&quot;,&quot; For example, &#92;&quot;user:&lt;owner email&gt;&#92;&quot; or &#92;&quot;project:&lt;Google developer project&quot;,&quot; id&gt;&#92;&quot;.&quot;]},&quot;ResourceInfo:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; Describes what error is encountered when accessing this resource.&quot;,&quot; For example, updating a cloud project may require the `writer` permission&quot;,&quot; on the developer console project.&quot;]},&quot;Help:links&quot;:{&quot;paramName&quot;:&quot;links&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; URL(s) pointing to additional information on handling the current error.&quot;]},&quot;LocalizedMessage:locale&quot;:{&quot;paramName&quot;:&quot;locale&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The locale used following the specification defined at&quot;,&quot; https://www.rfc-editor.org/rfc/bcp/bcp47.txt.&quot;,&quot; Examples are: &#92;&quot;en-US&#92;&quot;, &#92;&quot;fr-CH&#92;&quot;, &#92;&quot;es-MX&#92;&quot;&quot;]},&quot;LocalizedMessage:message&quot;:{&quot;paramName&quot;:&quot;message&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The localized error message in the above locale.&quot;]},&quot;Messaging&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; A simple messaging service that implements chat rooms and profile posts.&quot;,&quot;&quot;,&quot; This messaging service showcases the features that API clients&quot;,&quot; generated by gapic-generators implement.&quot;]},&quot;Messaging:CreateRoom&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a room.&quot;,&quot;&quot;]},&quot;Messaging:GetRoom&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Retrieves the Room with the given resource name.&quot;,&quot;&quot;]},&quot;Messaging:UpdateRoom&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates a room.&quot;,&quot;&quot;]},&quot;Messaging:DeleteRoom&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a room and all of its blurbs.&quot;,&quot;&quot;]},&quot;Messaging:ListRooms&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists all chat rooms.&quot;,&quot;&quot;]},&quot;Messaging:CreateBlurb&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a blurb. If the parent is a room, the blurb is understood to be a&quot;,&quot; message in that room. If the parent is a profile, the blurb is understood&quot;,&quot; to be a post on the profile.&quot;,&quot;&quot;]},&quot;Messaging:GetBlurb&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Retrieves the Blurb with the given resource name.&quot;,&quot;&quot;]},&quot;Messaging:UpdateBlurb&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Updates a blurb.&quot;,&quot;&quot;]},&quot;Messaging:DeleteBlurb&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Deletes a blurb.&quot;,&quot;&quot;]},&quot;Messaging:ListBlurbs&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists blurbs for a specific chat room or user profile depending on the&quot;,&quot; parent resource name.&quot;,&quot;&quot;]},&quot;Messaging:SearchBlurbs&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method searches through all blurbs across all rooms and profiles&quot;,&quot; for blurbs containing to words found in the query. Only posts that&quot;,&quot; contain an exact match of a queried word will be returned.&quot;,&quot;&quot;]},&quot;Messaging:StreamBlurbs&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This returns a stream that emits the blurbs that are created for a&quot;,&quot; particular chat room or user profile.&quot;,&quot;&quot;]},&quot;Messaging:SendBlurbs&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This is a stream to create multiple blurbs. If an invalid blurb is&quot;,&quot; requested to be created, the stream will close with an error.&quot;,&quot;&quot;]},&quot;Messaging:Connect&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; This method starts a bidirectional stream that receives all blurbs that&quot;,&quot; are being created after the stream has started and sends requests to create&quot;,&quot; blurbs. If an invalid blurb is requested to be created, the stream will&quot;,&quot; close with an error.&quot;,&quot;&quot;]},&quot;Room:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the chat room.&quot;]},&quot;Room:display_name&quot;:{&quot;paramName&quot;:&quot;display_name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The human readable name of the chat room.&quot;],&quot;fieldBehavior&quot;:2},&quot;Room:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The description of the chat room.&quot;]},&quot;Room:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The timestamp at which the room was created.&quot;],&quot;fieldBehavior&quot;:3},&quot;Room:update_time&quot;:{&quot;paramName&quot;:&quot;update_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The latest timestamp at which the room was updated.&quot;],&quot;fieldBehavior&quot;:3},&quot;CreateRoomRequest:room&quot;:{&quot;paramName&quot;:&quot;room&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Room&quot;,&quot;comments&quot;:[&quot; The room to create.&quot;]},&quot;GetRoomRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the requested room.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateRoomRequest:room&quot;:{&quot;paramName&quot;:&quot;room&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Room&quot;,&quot;comments&quot;:[&quot; The room to update.&quot;]},&quot;UpdateRoomRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; The field mask to determine which fields are to be updated. If empty, the&quot;,&quot; server will assume all fields are to be updated.&quot;]},&quot;DeleteRoomRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the requested room.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListRoomsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The maximum number of rooms return. Server may return fewer rooms&quot;,&quot; than requested. If unspecified, server will pick an appropriate default.&quot;]},&quot;ListRoomsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The value of google.showcase.v1beta1.ListRoomsResponse.next_page_token&quot;,&quot; returned from the previous call to&quot;,&quot; `google.showcase.v1beta1.Messaging&#92;&#92;ListRooms` method.&quot;]},&quot;ListRoomsResponse:rooms&quot;:{&quot;paramName&quot;:&quot;rooms&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The list of rooms.&quot;]},&quot;ListRoomsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A token to retrieve next page of results.&quot;,&quot; Pass this value in ListRoomsRequest.page_token field in the subsequent&quot;,&quot; call to `google.showcase.v1beta1.Messaging&#92;&#92;ListRooms` method to retrieve&quot;,&quot; the next page of results.&quot;]},&quot;Blurb:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the chat room.&quot;]},&quot;Blurb:user&quot;:{&quot;paramName&quot;:&quot;user&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the blurb&#39;s author.&quot;],&quot;fieldBehavior&quot;:2},&quot;Blurb:text&quot;:{&quot;paramName&quot;:&quot;text&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The textual content of this blurb.&quot;]},&quot;Blurb:image&quot;:{&quot;paramName&quot;:&quot;image&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; The image content of this blurb.&quot;]},&quot;Blurb:create_time&quot;:{&quot;paramName&quot;:&quot;create_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The timestamp at which the blurb was created.&quot;],&quot;fieldBehavior&quot;:3},&quot;Blurb:update_time&quot;:{&quot;paramName&quot;:&quot;update_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The latest timestamp at which the blurb was updated.&quot;],&quot;fieldBehavior&quot;:3},&quot;Blurb:legacy_room_id&quot;:{&quot;paramName&quot;:&quot;legacy_room_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The legacy id of the room. This field is used to signal&quot;,&quot; the use of the compound resource pattern&quot;,&quot; `rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}`&quot;]},&quot;Blurb:legacy_user_id&quot;:{&quot;paramName&quot;:&quot;legacy_user_id&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The legacy id of the user. This field is used to signal&quot;,&quot; the use of the compound resource pattern&quot;,&quot; `users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}`&quot;]},&quot;CreateBlurbRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the chat room or user profile that this blurb will&quot;,&quot; be tied to.&quot;],&quot;fieldBehavior&quot;:2},&quot;CreateBlurbRequest:blurb&quot;:{&quot;paramName&quot;:&quot;blurb&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Blurb&quot;,&quot;comments&quot;:[&quot; The blurb to create.&quot;]},&quot;GetBlurbRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the requested blurb.&quot;],&quot;fieldBehavior&quot;:2},&quot;UpdateBlurbRequest:blurb&quot;:{&quot;paramName&quot;:&quot;blurb&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Blurb&quot;,&quot;comments&quot;:[&quot; The blurb to update.&quot;]},&quot;UpdateBlurbRequest:update_mask&quot;:{&quot;paramName&quot;:&quot;update_mask&quot;,&quot;paramType&quot;:&quot;.google.protobuf.FieldMask&quot;,&quot;comments&quot;:[&quot; The field mask to determine wich fields are to be updated. If empty, the&quot;,&quot; server will assume all fields are to be updated.&quot;]},&quot;DeleteBlurbRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the requested blurb.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListBlurbsRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of the requested room or profile whos blurbs to list.&quot;],&quot;fieldBehavior&quot;:2},&quot;ListBlurbsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The maximum number of blurbs to return. Server may return fewer&quot;,&quot; blurbs than requested. If unspecified, server will pick an appropriate&quot;,&quot; default.&quot;]},&quot;ListBlurbsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The value of google.showcase.v1beta1.ListBlurbsResponse.next_page_token&quot;,&quot; returned from the previous call to&quot;,&quot; `google.showcase.v1beta1.Messaging&#92;&#92;ListBlurbs` method.&quot;]},&quot;ListBlurbsResponse:blurbs&quot;:{&quot;paramName&quot;:&quot;blurbs&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The list of blurbs.&quot;]},&quot;ListBlurbsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A token to retrieve next page of results.&quot;,&quot; Pass this value in ListBlurbsRequest.page_token field in the subsequent&quot;,&quot; call to `google.showcase.v1beta1.Blurb&#92;&#92;ListBlurbs` method to retrieve&quot;,&quot; the next page of results.&quot;]},&quot;SearchBlurbsRequest:query&quot;:{&quot;paramName&quot;:&quot;query&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The query used to search for blurbs containing to words of this string.&quot;,&quot; Only posts that contain an exact match of a queried word will be returned.&quot;],&quot;fieldBehavior&quot;:2},&quot;SearchBlurbsRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The rooms or profiles to search. If unset, `SearchBlurbs` will search all&quot;,&quot; rooms and all profiles.&quot;]},&quot;SearchBlurbsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The maximum number of blurbs return. Server may return fewer&quot;,&quot; blurbs than requested. If unspecified, server will pick an appropriate&quot;,&quot; default.&quot;]},&quot;SearchBlurbsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The value of&quot;,&quot; google.showcase.v1beta1.SearchBlurbsResponse.next_page_token&quot;,&quot; returned from the previous call to&quot;,&quot; `google.showcase.v1beta1.Messaging&#92;&#92;SearchBlurbs` method.&quot;]},&quot;SearchBlurbsMetadata:retry_info&quot;:{&quot;paramName&quot;:&quot;retry_info&quot;,&quot;paramType&quot;:&quot;.google.rpc.RetryInfo&quot;,&quot;comments&quot;:[&quot; This signals to the client when to next poll for response.&quot;]},&quot;SearchBlurbsResponse:blurbs&quot;:{&quot;paramName&quot;:&quot;blurbs&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Blurbs that matched the search query.&quot;]},&quot;SearchBlurbsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A token to retrieve next page of results.&quot;,&quot; Pass this value in SearchBlurbsRequest.page_token field in the subsequent&quot;,&quot; call to `google.showcase.v1beta1.Blurb&#92;&#92;SearchBlurbs` method to&quot;,&quot; retrieve the next page of results.&quot;]},&quot;StreamBlurbsRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The resource name of a chat room or user profile whose blurbs to stream.&quot;],&quot;fieldBehavior&quot;:2},&quot;StreamBlurbsRequest:expire_time&quot;:{&quot;paramName&quot;:&quot;expire_time&quot;,&quot;paramType&quot;:&quot;.google.protobuf.Timestamp&quot;,&quot;comments&quot;:[&quot; The time at which this stream will close.&quot;],&quot;fieldBehavior&quot;:2},&quot;StreamBlurbsResponse:blurb&quot;:{&quot;paramName&quot;:&quot;blurb&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Blurb&quot;,&quot;comments&quot;:[&quot; The blurb that was either created, updated, or deleted.&quot;]},&quot;StreamBlurbsResponse:action&quot;:{&quot;paramName&quot;:&quot;action&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.StreamBlurbsResponse.Action&quot;,&quot;comments&quot;:[&quot; The action that triggered the blurb to be returned.&quot;]},&quot;SendBlurbsResponse:names&quot;:{&quot;paramName&quot;:&quot;names&quot;,&quot;paramType&quot;:&quot;TYPE_STRING[]&quot;,&quot;comments&quot;:[&quot; The names of successful blurb creations.&quot;]},&quot;ConnectRequest:config&quot;:{&quot;paramName&quot;:&quot;config&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ConnectRequest.ConnectConfig&quot;,&quot;comments&quot;:[&quot; Provides information that specifies how to process subsequent requests.&quot;,&quot; The first `ConnectRequest` message must contain a `config`  message.&quot;]},&quot;ConnectRequest:blurb&quot;:{&quot;paramName&quot;:&quot;blurb&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Blurb&quot;,&quot;comments&quot;:[&quot; The blurb to be created.&quot;]},&quot;SequenceService&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[]},&quot;SequenceService:CreateSequence&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a sequence.&quot;,&quot;&quot;]},&quot;SequenceService:GetSequenceReport&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Retrieves a sequence.&quot;,&quot;&quot;]},&quot;SequenceService:AttemptSequence&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Attempts a sequence.&quot;,&quot;&quot;]},&quot;Sequence:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[],&quot;fieldBehavior&quot;:3},&quot;Sequence:responses&quot;:{&quot;paramName&quot;:&quot;responses&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; Sequence of responses to return in order for each attempt. If empty, the&quot;,&quot; default response is an immediate OK.&quot;]},&quot;SequenceReport:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[],&quot;fieldBehavior&quot;:3},&quot;SequenceReport:attempts&quot;:{&quot;paramName&quot;:&quot;attempts&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The set of RPC attempts received by the server for a Sequence.&quot;]},&quot;CreateSequenceRequest:sequence&quot;:{&quot;paramName&quot;:&quot;sequence&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Sequence&quot;,&quot;comments&quot;:[]},&quot;AttemptSequenceRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[],&quot;fieldBehavior&quot;:2},&quot;GetSequenceReportRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[],&quot;fieldBehavior&quot;:2},&quot;Testing&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; A service to facilitate running discrete sets of tests&quot;,&quot; against Showcase.&quot;]},&quot;Testing:CreateSession&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Creates a new testing session.&quot;,&quot;&quot;]},&quot;Testing:GetSession&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Gets a testing session.&quot;,&quot;&quot;]},&quot;Testing:ListSessions&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Lists the current test sessions.&quot;,&quot;&quot;]},&quot;Testing:DeleteSession&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Delete a test session.&quot;,&quot;&quot;]},&quot;Testing:ReportSession&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Report on the status of a session.&quot;,&quot; This generates a report detailing which tests have been completed,&quot;,&quot; and an overall rollup.&quot;,&quot;&quot;]},&quot;Testing:ListTests&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; List the tests of a sessesion.&quot;,&quot;&quot;]},&quot;Testing:DeleteTest&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Explicitly decline to implement a test.&quot;,&quot;&quot;,&quot; This removes the test from subsequent `ListTests` calls, and&quot;,&quot; attempting to do the test will error.&quot;,&quot;&quot;,&quot; This method will error if attempting to delete a required test.&quot;,&quot;&quot;]},&quot;Testing:VerifyTest&quot;:{&quot;paramName&quot;:&quot;&quot;,&quot;paramType&quot;:&quot;&quot;,&quot;comments&quot;:[&quot; Register a response to a test.&quot;,&quot;&quot;,&quot; In cases where a test involves registering a final answer at the&quot;,&quot; end of the test, this method provides the means to do so.&quot;,&quot;&quot;]},&quot;Session:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the session. The ID must conform to ^[a-z]+$&quot;,&quot; If this is not provided, Showcase chooses one at random.&quot;]},&quot;Session:version&quot;:{&quot;paramName&quot;:&quot;version&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Session.Version&quot;,&quot;comments&quot;:[&quot; Required. The version this session is using.&quot;]},&quot;CreateSessionRequest:session&quot;:{&quot;paramName&quot;:&quot;session&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Session&quot;,&quot;comments&quot;:[&quot; The session to be created.&quot;,&quot; Sessions are immutable once they are created (although they can&quot;,&quot; be deleted).&quot;]},&quot;GetSessionRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The session to be retrieved.&quot;]},&quot;ListSessionsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The maximum number of sessions to return per page.&quot;]},&quot;ListSessionsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The page token, for retrieving subsequent pages.&quot;]},&quot;ListSessionsResponse:sessions&quot;:{&quot;paramName&quot;:&quot;sessions&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The sessions being returned.&quot;]},&quot;ListSessionsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The next page token, if any.&quot;,&quot; An empty value here means the last page has been reached.&quot;]},&quot;DeleteSessionRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The session to be deleted.&quot;]},&quot;ReportSessionRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The session to be reported on.&quot;]},&quot;ReportSessionResponse:result&quot;:{&quot;paramName&quot;:&quot;result&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.ReportSessionResponse.Result&quot;,&quot;comments&quot;:[&quot; The state of the report.&quot;]},&quot;ReportSessionResponse:test_runs&quot;:{&quot;paramName&quot;:&quot;test_runs&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The test runs of this session.&quot;]},&quot;Test:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the test.&quot;,&quot; The tests/* portion of the names are hard-coded, and do not change&quot;,&quot; from session to session.&quot;]},&quot;Test:expectation_level&quot;:{&quot;paramName&quot;:&quot;expectation_level&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Test.ExpectationLevel&quot;,&quot;comments&quot;:[&quot; The expectation level for this test.&quot;]},&quot;Test:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A description of the test.&quot;]},&quot;Test:blueprints&quot;:{&quot;paramName&quot;:&quot;blueprints&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The blueprints that will satisfy this test. There may be multiple blueprints&quot;,&quot; that can signal to the server that this test case is being exercised. Although&quot;,&quot; multiple blueprints are specified, only a single blueprint needs to be run to&quot;,&quot; signal that the test case was exercised.&quot;]},&quot;Issue:type&quot;:{&quot;paramName&quot;:&quot;type&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Issue.Type&quot;,&quot;comments&quot;:[&quot; The type of the issue.&quot;]},&quot;Issue:severity&quot;:{&quot;paramName&quot;:&quot;severity&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Issue.Severity&quot;,&quot;comments&quot;:[&quot; The severity of the issue.&quot;]},&quot;Issue:description&quot;:{&quot;paramName&quot;:&quot;description&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; A description of the issue.&quot;]},&quot;ListTestsRequest:parent&quot;:{&quot;paramName&quot;:&quot;parent&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The session.&quot;]},&quot;ListTestsRequest:page_size&quot;:{&quot;paramName&quot;:&quot;page_size&quot;,&quot;paramType&quot;:&quot;TYPE_INT32&quot;,&quot;comments&quot;:[&quot; The maximum number of tests to return per page.&quot;]},&quot;ListTestsRequest:page_token&quot;:{&quot;paramName&quot;:&quot;page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The page token, for retrieving subsequent pages.&quot;]},&quot;ListTestsResponse:tests&quot;:{&quot;paramName&quot;:&quot;tests&quot;,&quot;paramType&quot;:&quot;TYPE_MESSAGE[]&quot;,&quot;comments&quot;:[&quot; The tests being returned.&quot;]},&quot;ListTestsResponse:next_page_token&quot;:{&quot;paramName&quot;:&quot;next_page_token&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The next page token, if any.&quot;,&quot; An empty value here means the last page has been reached.&quot;]},&quot;TestRun:test&quot;:{&quot;paramName&quot;:&quot;test&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The name of the test.&quot;,&quot; The tests/* portion of the names are hard-coded, and do not change&quot;,&quot; from session to session.&quot;]},&quot;TestRun:issue&quot;:{&quot;paramName&quot;:&quot;issue&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Issue&quot;,&quot;comments&quot;:[&quot; An issue found with the test run. If empty, this test run was successful.&quot;]},&quot;DeleteTestRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The test to be deleted.&quot;]},&quot;VerifyTestRequest:name&quot;:{&quot;paramName&quot;:&quot;name&quot;,&quot;paramType&quot;:&quot;TYPE_STRING&quot;,&quot;comments&quot;:[&quot; The test to have an answer registered to it.&quot;]},&quot;VerifyTestRequest:answer&quot;:{&quot;paramName&quot;:&quot;answer&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES&quot;,&quot;comments&quot;:[&quot; The answer from the test.&quot;]},&quot;VerifyTestRequest:answers&quot;:{&quot;paramName&quot;:&quot;answers&quot;,&quot;paramType&quot;:&quot;TYPE_BYTES[]&quot;,&quot;comments&quot;:[&quot; The answers from the test if multiple are to be checked&quot;]},&quot;VerifyTestResponse:issue&quot;:{&quot;paramName&quot;:&quot;issue&quot;,&quot;paramType&quot;:&quot;.google.showcase.v1beta1.Issue&quot;,&quot;comments&quot;:[&quot; An issue if check answer was unsuccessful. This will be empty if the check answer succeeded.&quot;]}}},&quot;retryableCodeMap&quot;:{&quot;codeEnumMapping&quot;:{&quot;0&quot;:&quot;OK&quot;,&quot;1&quot;:&quot;CANCELLED&quot;,&quot;2&quot;:&quot;UNKNOWN&quot;,&quot;3&quot;:&quot;INVALID_ARGUMENT&quot;,&quot;4&quot;:&quot;DEADLINE_EXCEEDED&quot;,&quot;5&quot;:&quot;NOT_FOUND&quot;,&quot;6&quot;:&quot;ALREADY_EXISTS&quot;,&quot;7&quot;:&quot;PERMISSION_DENIED&quot;,&quot;8&quot;:&quot;RESOURCE_EXHAUSTED&quot;,&quot;9&quot;:&quot;FAILED_PRECONDITION&quot;,&quot;10&quot;:&quot;ABORTED&quot;,&quot;11&quot;:&quot;OUT_OF_RANGE&quot;,&quot;12&quot;:&quot;UNIMPLEMENTED&quot;,&quot;13&quot;:&quot;INTERNAL&quot;,&quot;14&quot;:&quot;UNAVAILABLE&quot;,&quot;15&quot;:&quot;DATA_LOSS&quot;,&quot;16&quot;:&quot;UNAUTHENTICATED&quot;,&quot;OK&quot;:&quot;0&quot;,&quot;CANCELLED&quot;:&quot;1&quot;,&quot;UNKNOWN&quot;:&quot;2&quot;,&quot;INVALID_ARGUMENT&quot;:&quot;3&quot;,&quot;DEADLINE_EXCEEDED&quot;:&quot;4&quot;,&quot;NOT_FOUND&quot;:&quot;5&quot;,&quot;ALREADY_EXISTS&quot;:&quot;6&quot;,&quot;PERMISSION_DENIED&quot;:&quot;7&quot;,&quot;RESOURCE_EXHAUSTED&quot;:&quot;8&quot;,&quot;FAILED_PRECONDITION&quot;:&quot;9&quot;,&quot;ABORTED&quot;:&quot;10&quot;,&quot;OUT_OF_RANGE&quot;:&quot;11&quot;,&quot;UNIMPLEMENTED&quot;:&quot;12&quot;,&quot;INTERNAL&quot;:&quot;13&quot;,&quot;UNAVAILABLE&quot;:&quot;14&quot;,&quot;DATA_LOSS&quot;:&quot;15&quot;,&quot;UNAUTHENTICATED&quot;:&quot;16&quot;},&quot;uniqueCodesNamesMap&quot;:{&quot;&quot;:&quot;non_idempotent&quot;,&quot;deadline_exceeded_unavailable&quot;:&quot;idempotent&quot;},&quot;prettyCodesNamesMap&quot;:{&quot;non_idempotent&quot;:[],&quot;idempotent&quot;:[&quot;DEADLINE_EXCEEDED&quot;,&quot;UNAVAILABLE&quot;]},&quot;uniqueParamsNamesMap&quot;:{&quot;94312e9926796a52a8fcbbedaac41972e07ccd1c&quot;:&quot;default&quot;},&quot;prettyParamNamesMap&quot;:{&quot;default&quot;:{&quot;initial_retry_delay_millis&quot;:100,&quot;retry_delay_multiplier&quot;:1.3,&quot;max_retry_delay_millis&quot;:60000,&quot;initial_rpc_timeout_millis&quot;:60000,&quot;rpc_timeout_multiplier&quot;:1,&quot;max_rpc_timeout_millis&quot;:60000,&quot;total_timeout_millis&quot;:600000}}},&quot;grpcServiceConfig&quot;:{},&quot;bundleConfigs&quot;:[],&quot;internalMethods&quot;:[],&quot;bundleConfigsMethods&quot;:[],&quot;simpleMethods&quot;:[],&quot;longRunning&quot;:[],&quot;diregapicLRO&quot;:[],&quot;streaming&quot;:[],&quot;clientStreaming&quot;:[],&quot;serverStreaming&quot;:[],&quot;bidiStreaming&quot;:[],&quot;paging&quot;:[],&quot;hostname&quot;:&quot;localhost&quot;,&quot;port&quot;:7469,&quot;oauthScopes&quot;:[],&quot;pathTemplates&quot;:[{&quot;name&quot;:&quot;Blueprint&quot;,&quot;params&quot;:[&quot;session&quot;,&quot;test&quot;,&quot;blueprint&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Blueprint&quot;,&quot;pattern&quot;:[&quot;sessions/{session}/tests/{test}/blueprints/{blueprint}&quot;]},{&quot;name&quot;:&quot;Room&quot;,&quot;params&quot;:[&quot;room&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Room&quot;,&quot;pattern&quot;:[&quot;rooms/{room}&quot;]},{&quot;name&quot;:&quot;room_blurb&quot;,&quot;params&quot;:[&quot;room&quot;,&quot;blurb&quot;],&quot;pattern&quot;:[&quot;rooms/{room}/blurbs/{blurb}&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Blurb&quot;},{&quot;name&quot;:&quot;room_blurbs_legacy_room_blurb&quot;,&quot;params&quot;:[&quot;room&quot;,&quot;legacy_room&quot;,&quot;blurb&quot;],&quot;pattern&quot;:[&quot;rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Blurb&quot;},{&quot;name&quot;:&quot;Sequence&quot;,&quot;params&quot;:[&quot;sequence&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Sequence&quot;,&quot;pattern&quot;:[&quot;sequences/{sequence}&quot;]},{&quot;name&quot;:&quot;SequenceReport&quot;,&quot;params&quot;:[&quot;sequence&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/SequenceReport&quot;,&quot;pattern&quot;:[&quot;sequences/{sequence}/sequenceReport&quot;]},{&quot;name&quot;:&quot;Session&quot;,&quot;params&quot;:[&quot;session&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Session&quot;,&quot;pattern&quot;:[&quot;sessions/{session}&quot;]},{&quot;name&quot;:&quot;Test&quot;,&quot;params&quot;:[&quot;session&quot;,&quot;test&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Test&quot;,&quot;pattern&quot;:[&quot;sessions/{session}/tests/{test}&quot;]},{&quot;name&quot;:&quot;User&quot;,&quot;params&quot;:[&quot;user&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/User&quot;,&quot;pattern&quot;:[&quot;users/{user}&quot;]},{&quot;name&quot;:&quot;user_profile_blurb&quot;,&quot;params&quot;:[&quot;user&quot;,&quot;blurb&quot;],&quot;pattern&quot;:[&quot;users/{user}/profile/blurbs/{blurb}&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Blurb&quot;},{&quot;name&quot;:&quot;user_profile_blurbs_legacy_user_blurb&quot;,&quot;params&quot;:[&quot;user&quot;,&quot;legacy_user&quot;,&quot;blurb&quot;],&quot;pattern&quot;:[&quot;users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}&quot;],&quot;type&quot;:&quot;showcase.googleapis.com/Blurb&quot;}]}

/**
 * Client JSON configuration object, loaded from
 * `src/v1beta1/messaging_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './messaging_client_config.json';
const version = require('../../../package.json').version;

/**
 *  A simple messaging service that implements chat rooms and profile posts.
 *
 *  This messaging service showcases the features that API clients
 *  generated by gapic-generators implement.
 * @class
 * @memberof v1beta1
 */
export class MessagingClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  messagingStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of MessagingClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new MessagingClient({fallback: true}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof MessagingClient;
    if (opts?.universe_domain && opts?.universeDomain && opts?.universe_domain !== opts?.universeDomain) {
      throw new Error('Please set either universe_domain or universeDomain, but not both.');
    }
    const universeDomainEnvVar = (typeof process === 'object' && typeof process.env === 'object') ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;
    this._universeDomain = opts?.universeDomain ?? opts?.universe_domain ?? universeDomainEnvVar ?? 'googleapis.com';
    this._servicePath = 'localhost';
    const servicePath = opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      blueprintPathTemplate: new this._gaxModule.PathTemplate(
        'sessions/{session}/tests/{test}/blueprints/{blueprint}'
      ),
      roomPathTemplate: new this._gaxModule.PathTemplate(
        'rooms/{room}'
      ),
      roomBlurbPathTemplate: new this._gaxModule.PathTemplate(
        'rooms/{room}/blurbs/{blurb}'
      ),
      roomBlurbsLegacyRoomBlurbPathTemplate: new this._gaxModule.PathTemplate(
        'rooms/{room}/blurbs/legacy/{legacy_room}.{blurb}'
      ),
      sequencePathTemplate: new this._gaxModule.PathTemplate(
        'sequences/{sequence}'
      ),
      sequenceReportPathTemplate: new this._gaxModule.PathTemplate(
        'sequences/{sequence}/sequenceReport'
      ),
      sessionPathTemplate: new this._gaxModule.PathTemplate(
        'sessions/{session}'
      ),
      testPathTemplate: new this._gaxModule.PathTemplate(
        'sessions/{session}/tests/{test}'
      ),
      userPathTemplate: new this._gaxModule.PathTemplate(
        'users/{user}'
      ),
      userProfileBlurbPathTemplate: new this._gaxModule.PathTemplate(
        'users/{user}/profile/blurbs/{blurb}'
      ),
      userProfileBlurbsLegacyUserBlurbPathTemplate: new this._gaxModule.PathTemplate(
        'users/{user}/profile/blurbs/legacy/{legacy_user}~{blurb}'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.showcase.v1beta1.Messaging', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.messagingStub) {
      return this.messagingStub;
    }

    // Put together the "service stub" for
    // google.showcase.v1beta1.Messaging.
    this.messagingStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.showcase.v1beta1.Messaging') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.showcase.v1beta1.Messaging,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const messagingStubMethods =
        [];
    for (const methodName of messagingStubMethods) {
      const callPromise = this.messagingStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.messagingStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'localhost';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'localhost';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 7469;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified blueprint resource name string.
   *
   * @param {string} session
   * @param {string} test
   * @param {string} blueprint
   * @returns {string} Resource name string.
   */
  blueprintPath(session:string,test:string,blueprint:string) {
    return this.pathTemplates.blueprintPathTemplate.render({
      session: session,
      test: test,
      blueprint: blueprint,
    });
  }

  /**
   * Parse the session from Blueprint resource.
   *
   * @param {string} blueprintName
   *   A fully-qualified path representing Blueprint resource.
   * @returns {string} A string representing the session.
   */
  matchSessionFromBlueprintName(blueprintName: string) {
    return this.pathTemplates.blueprintPathTemplate.match(blueprintName).session;
  }

  /**
   * Parse the test from Blueprint resource.
   *
   * @param {string} blueprintName
   *   A fully-qualified path representing Blueprint resource.
   * @returns {string} A string representing the test.
   */
  matchTestFromBlueprintName(blueprintName: string) {
    return this.pathTemplates.blueprintPathTemplate.match(blueprintName).test;
  }

  /**
   * Parse the blueprint from Blueprint resource.
   *
   * @param {string} blueprintName
   *   A fully-qualified path representing Blueprint resource.
   * @returns {string} A string representing the blueprint.
   */
  matchBlueprintFromBlueprintName(blueprintName: string) {
    return this.pathTemplates.blueprintPathTemplate.match(blueprintName).blueprint;
  }

  /**
   * Return a fully-qualified room resource name string.
   *
   * @param {string} room
   * @returns {string} Resource name string.
   */
  roomPath(room:string) {
    return this.pathTemplates.roomPathTemplate.render({
      room: room,
    });
  }

  /**
   * Parse the room from Room resource.
   *
   * @param {string} roomName
   *   A fully-qualified path representing Room resource.
   * @returns {string} A string representing the room.
   */
  matchRoomFromRoomName(roomName: string) {
    return this.pathTemplates.roomPathTemplate.match(roomName).room;
  }

  /**
   * Return a fully-qualified roomBlurb resource name string.
   *
   * @param {string} room
   * @param {string} blurb
   * @returns {string} Resource name string.
   */
  roomBlurbPath(room:string,blurb:string) {
    return this.pathTemplates.roomBlurbPathTemplate.render({
      room: room,
      blurb: blurb,
    });
  }

  /**
   * Parse the room from RoomBlurb resource.
   *
   * @param {string} roomBlurbName
   *   A fully-qualified path representing room_blurb resource.
   * @returns {string} A string representing the room.
   */
  matchRoomFromRoomBlurbName(roomBlurbName: string) {
    return this.pathTemplates.roomBlurbPathTemplate.match(roomBlurbName).room;
  }

  /**
   * Parse the blurb from RoomBlurb resource.
   *
   * @param {string} roomBlurbName
   *   A fully-qualified path representing room_blurb resource.
   * @returns {string} A string representing the blurb.
   */
  matchBlurbFromRoomBlurbName(roomBlurbName: string) {
    return this.pathTemplates.roomBlurbPathTemplate.match(roomBlurbName).blurb;
  }

  /**
   * Return a fully-qualified roomBlurbsLegacyRoomBlurb resource name string.
   *
   * @param {string} room
   * @param {string} legacy_room
   * @param {string} blurb
   * @returns {string} Resource name string.
   */
  roomBlurbsLegacyRoomBlurbPath(room:string,legacyRoom:string,blurb:string) {
    return this.pathTemplates.roomBlurbsLegacyRoomBlurbPathTemplate.render({
      room: room,
      legacy_room: legacyRoom,
      blurb: blurb,
    });
  }

  /**
   * Parse the room from RoomBlurbsLegacyRoomBlurb resource.
   *
   * @param {string} roomBlurbsLegacyRoomBlurbName
   *   A fully-qualified path representing room_blurbs_legacy_room_blurb resource.
   * @returns {string} A string representing the room.
   */
  matchRoomFromRoomBlurbsLegacyRoomBlurbName(roomBlurbsLegacyRoomBlurbName: string) {
    return this.pathTemplates.roomBlurbsLegacyRoomBlurbPathTemplate.match(roomBlurbsLegacyRoomBlurbName).room;
  }

  /**
   * Parse the legacy_room from RoomBlurbsLegacyRoomBlurb resource.
   *
   * @param {string} roomBlurbsLegacyRoomBlurbName
   *   A fully-qualified path representing room_blurbs_legacy_room_blurb resource.
   * @returns {string} A string representing the legacy_room.
   */
  matchLegacyRoomFromRoomBlurbsLegacyRoomBlurbName(roomBlurbsLegacyRoomBlurbName: string) {
    return this.pathTemplates.roomBlurbsLegacyRoomBlurbPathTemplate.match(roomBlurbsLegacyRoomBlurbName).legacy_room;
  }

  /**
   * Parse the blurb from RoomBlurbsLegacyRoomBlurb resource.
   *
   * @param {string} roomBlurbsLegacyRoomBlurbName
   *   A fully-qualified path representing room_blurbs_legacy_room_blurb resource.
   * @returns {string} A string representing the blurb.
   */
  matchBlurbFromRoomBlurbsLegacyRoomBlurbName(roomBlurbsLegacyRoomBlurbName: string) {
    return this.pathTemplates.roomBlurbsLegacyRoomBlurbPathTemplate.match(roomBlurbsLegacyRoomBlurbName).blurb;
  }

  /**
   * Return a fully-qualified sequence resource name string.
   *
   * @param {string} sequence
   * @returns {string} Resource name string.
   */
  sequencePath(sequence:string) {
    return this.pathTemplates.sequencePathTemplate.render({
      sequence: sequence,
    });
  }

  /**
   * Parse the sequence from Sequence resource.
   *
   * @param {string} sequenceName
   *   A fully-qualified path representing Sequence resource.
   * @returns {string} A string representing the sequence.
   */
  matchSequenceFromSequenceName(sequenceName: string) {
    return this.pathTemplates.sequencePathTemplate.match(sequenceName).sequence;
  }

  /**
   * Return a fully-qualified sequenceReport resource name string.
   *
   * @param {string} sequence
   * @returns {string} Resource name string.
   */
  sequenceReportPath(sequence:string) {
    return this.pathTemplates.sequenceReportPathTemplate.render({
      sequence: sequence,
    });
  }

  /**
   * Parse the sequence from SequenceReport resource.
   *
   * @param {string} sequenceReportName
   *   A fully-qualified path representing SequenceReport resource.
   * @returns {string} A string representing the sequence.
   */
  matchSequenceFromSequenceReportName(sequenceReportName: string) {
    return this.pathTemplates.sequenceReportPathTemplate.match(sequenceReportName).sequence;
  }

  /**
   * Return a fully-qualified session resource name string.
   *
   * @param {string} session
   * @returns {string} Resource name string.
   */
  sessionPath(session:string) {
    return this.pathTemplates.sessionPathTemplate.render({
      session: session,
    });
  }

  /**
   * Parse the session from Session resource.
   *
   * @param {string} sessionName
   *   A fully-qualified path representing Session resource.
   * @returns {string} A string representing the session.
   */
  matchSessionFromSessionName(sessionName: string) {
    return this.pathTemplates.sessionPathTemplate.match(sessionName).session;
  }

  /**
   * Return a fully-qualified test resource name string.
   *
   * @param {string} session
   * @param {string} test
   * @returns {string} Resource name string.
   */
  testPath(session:string,test:string) {
    return this.pathTemplates.testPathTemplate.render({
      session: session,
      test: test,
    });
  }

  /**
   * Parse the session from Test resource.
   *
   * @param {string} testName
   *   A fully-qualified path representing Test resource.
   * @returns {string} A string representing the session.
   */
  matchSessionFromTestName(testName: string) {
    return this.pathTemplates.testPathTemplate.match(testName).session;
  }

  /**
   * Parse the test from Test resource.
   *
   * @param {string} testName
   *   A fully-qualified path representing Test resource.
   * @returns {string} A string representing the test.
   */
  matchTestFromTestName(testName: string) {
    return this.pathTemplates.testPathTemplate.match(testName).test;
  }

  /**
   * Return a fully-qualified user resource name string.
   *
   * @param {string} user
   * @returns {string} Resource name string.
   */
  userPath(user:string) {
    return this.pathTemplates.userPathTemplate.render({
      user: user,
    });
  }

  /**
   * Parse the user from User resource.
   *
   * @param {string} userName
   *   A fully-qualified path representing User resource.
   * @returns {string} A string representing the user.
   */
  matchUserFromUserName(userName: string) {
    return this.pathTemplates.userPathTemplate.match(userName).user;
  }

  /**
   * Return a fully-qualified userProfileBlurb resource name string.
   *
   * @param {string} user
   * @param {string} blurb
   * @returns {string} Resource name string.
   */
  userProfileBlurbPath(user:string,blurb:string) {
    return this.pathTemplates.userProfileBlurbPathTemplate.render({
      user: user,
      blurb: blurb,
    });
  }

  /**
   * Parse the user from UserProfileBlurb resource.
   *
   * @param {string} userProfileBlurbName
   *   A fully-qualified path representing user_profile_blurb resource.
   * @returns {string} A string representing the user.
   */
  matchUserFromUserProfileBlurbName(userProfileBlurbName: string) {
    return this.pathTemplates.userProfileBlurbPathTemplate.match(userProfileBlurbName).user;
  }

  /**
   * Parse the blurb from UserProfileBlurb resource.
   *
   * @param {string} userProfileBlurbName
   *   A fully-qualified path representing user_profile_blurb resource.
   * @returns {string} A string representing the blurb.
   */
  matchBlurbFromUserProfileBlurbName(userProfileBlurbName: string) {
    return this.pathTemplates.userProfileBlurbPathTemplate.match(userProfileBlurbName).blurb;
  }

  /**
   * Return a fully-qualified userProfileBlurbsLegacyUserBlurb resource name string.
   *
   * @param {string} user
   * @param {string} legacy_user
   * @param {string} blurb
   * @returns {string} Resource name string.
   */
  userProfileBlurbsLegacyUserBlurbPath(user:string,legacyUser:string,blurb:string) {
    return this.pathTemplates.userProfileBlurbsLegacyUserBlurbPathTemplate.render({
      user: user,
      legacy_user: legacyUser,
      blurb: blurb,
    });
  }

  /**
   * Parse the user from UserProfileBlurbsLegacyUserBlurb resource.
   *
   * @param {string} userProfileBlurbsLegacyUserBlurbName
   *   A fully-qualified path representing user_profile_blurbs_legacy_user_blurb resource.
   * @returns {string} A string representing the user.
   */
  matchUserFromUserProfileBlurbsLegacyUserBlurbName(userProfileBlurbsLegacyUserBlurbName: string) {
    return this.pathTemplates.userProfileBlurbsLegacyUserBlurbPathTemplate.match(userProfileBlurbsLegacyUserBlurbName).user;
  }

  /**
   * Parse the legacy_user from UserProfileBlurbsLegacyUserBlurb resource.
   *
   * @param {string} userProfileBlurbsLegacyUserBlurbName
   *   A fully-qualified path representing user_profile_blurbs_legacy_user_blurb resource.
   * @returns {string} A string representing the legacy_user.
   */
  matchLegacyUserFromUserProfileBlurbsLegacyUserBlurbName(userProfileBlurbsLegacyUserBlurbName: string) {
    return this.pathTemplates.userProfileBlurbsLegacyUserBlurbPathTemplate.match(userProfileBlurbsLegacyUserBlurbName).legacy_user;
  }

  /**
   * Parse the blurb from UserProfileBlurbsLegacyUserBlurb resource.
   *
   * @param {string} userProfileBlurbsLegacyUserBlurbName
   *   A fully-qualified path representing user_profile_blurbs_legacy_user_blurb resource.
   * @returns {string} A string representing the blurb.
   */
  matchBlurbFromUserProfileBlurbsLegacyUserBlurbName(userProfileBlurbsLegacyUserBlurbName: string) {
    return this.pathTemplates.userProfileBlurbsLegacyUserBlurbPathTemplate.match(userProfileBlurbsLegacyUserBlurbName).blurb;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.messagingStub && !this._terminated) {
      return this.messagingStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
