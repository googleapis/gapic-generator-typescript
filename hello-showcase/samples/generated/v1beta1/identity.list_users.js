// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main() {
  // [START localhost_v1beta1_generated_Identity_ListUsers_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The maximum number of users to return. Server may return fewer users
   *  than requested. If unspecified, server will pick an appropriate default.
   */
  // const pageSize = 1234
  /**
   *  The value of google.showcase.v1beta1.ListUsersResponse.next_page_token
   *  returned from the previous call to
   *  `google.showcase.v1beta1.Identity\ListUsers` method.
   */
  // const pageToken = 'abc123'

  // Imports the Showcase library
  const {IdentityClient} = require('showcase').v1beta1;

  // Instantiates a client
  const showcaseClient = new IdentityClient();

  async function callListUsers() {
    // Construct request
    const request = {
    };

    // Run request
    const iterable = await showcaseClient.listUsersAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListUsers();
  // [END localhost_v1beta1_generated_Identity_ListUsers_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
